{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Featherbone data service",
        "description": "REST data service for featherbone based applications.",
        "license": {
            "name": "Affero GPLv3",
            "url": "http://www.gnu.org/licenses/agpl.txt"
        }
    },
    "servers": [
        {
            "url": "http://localhost:10001"
        }
    ],
    "tags": [
        {
            "name": "currency",
            "description": "Currency functions"
        },
        {
            "name": "feather",
            "description": "Data class specifications"
        },
        {
            "name": "io",
            "description": "Import and export"
        },
        {
            "name": "lock",
            "description": "Lock and unlock methods"
        },
        {
            "name": "module",
            "description": "Javascript client code module"
        },
        {
            "name": "role",
            "description": "Role functions"
        },
        {
            "name": "settings",
            "description": "Application settings"
        },
        {
            "name": "subscribe",
            "description": "Subscribe to change events"
        },
        {
            "name": "workbook",
            "description": "Workbook UI layout configuration"
        },
        {
            "name": "base-currency",
            "description": "BaseCurrency data"
        },
        {
            "name": "comment",
            "description": "Comment data"
        },
        {
            "name": "contact",
            "description": "Contact data"
        },
        {
            "name": "country",
            "description": "Country data"
        },
        {
            "name": "currency",
            "description": "Currency data"
        },
        {
            "name": "currency-conversion",
            "description": "CurrencyConversion data"
        },
        {
            "name": "currency-unit",
            "description": "CurrencyUnit data"
        },
        {
            "name": "data-service",
            "description": "DataService data"
        },
        {
            "name": "document",
            "description": "Document data"
        },
        {
            "name": "feather",
            "description": "Feather data"
        },
        {
            "name": "form",
            "description": "Form data"
        },
        {
            "name": "honorific",
            "description": "Honorific data"
        },
        {
            "name": "kind",
            "description": "Kind data"
        },
        {
            "name": "layout",
            "description": "Layout data"
        },
        {
            "name": "log",
            "description": "Log data"
        },
        {
            "name": "module",
            "description": "Module data"
        },
        {
            "name": "object",
            "description": "Object data"
        },
        {
            "name": "relation-widget",
            "description": "RelationWidget data"
        },
        {
            "name": "role",
            "description": "Role data"
        },
        {
            "name": "route",
            "description": "Route data"
        },
        {
            "name": "script",
            "description": "Script data"
        },
        {
            "name": "social-network",
            "description": "SocialNetwork data"
        },
        {
            "name": "state",
            "description": "State data"
        },
        {
            "name": "style",
            "description": "Style data"
        },
        {
            "name": "unit",
            "description": "Unit data"
        },
        {
            "name": "user-account",
            "description": "UserAccount data"
        }
    ],
    "paths": {
        "/currency/base": {
            "get": {
                "summary": "Return the base currency",
                "operationId": "baseCurrency",
                "tags": [
                    "currency"
                ],
                "parameters": [
                    {
                        "name": "effective",
                        "in": "query",
                        "description": "Effective date time. Default now.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency/convert": {
            "get": {
                "summary": "Return a converted value in base currency",
                "operationId": "convertCurrency",
                "tags": [
                    "currency"
                ],
                "parameters": [
                    {
                        "name": "fromCurrency",
                        "in": "query",
                        "description": "From currency code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "effective",
                        "in": "query",
                        "description": "Effective date time. Default now.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Money in base currency",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "currency": {
                                            "description": "Currency code",
                                            "type": "string"
                                        },
                                        "amount": {
                                            "description": "Amount",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feather/{name}": {
            "get": {
                "summary": "Get feather by name",
                "operationId": "getFeather",
                "tags": [
                    "feather"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the feather to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feather"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/export/{format}/{feather}": {
            "post": {
                "summary": "Export data of a particular type to a file",
                "operationId": "doExport",
                "tags": [
                    "io"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "File format: csv, json or xlsx",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "feather",
                        "in": "path",
                        "description": "Data type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "Query": {
                        "description": "Complex parameters",
                        "required": false,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "properties": {
                                            "description": "Specify which properties to export",
                                            "type": "array",
                                            "required": false,
                                            "items": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "filter": {
                                            "description": "Define which objects to export and how sort",
                                            "type": "object",
                                            "properties": {
                                                "criteria": {
                                                    "description": "filter criteria",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "property",
                                                            "value"
                                                        ],
                                                        "properties": {
                                                            "property": {
                                                                "description": "Property to filter on. Dot notation for relations supported",
                                                                "type": "string"
                                                            },
                                                            "operator": {
                                                                "description": "Operator",
                                                                "type": "string",
                                                                "enum": [
                                                                    "=",
                                                                    "!=",
                                                                    "~",
                                                                    "!~",
                                                                    "<",
                                                                    ">",
                                                                    "<=",
                                                                    ">=",
                                                                    "IN"
                                                                ],
                                                                "default": "="
                                                            },
                                                            "value": {
                                                                "description": "Value to filter for",
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                },
                                                "sort": {
                                                    "description": "Sort order",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "required": [
                                                            "property"
                                                        ],
                                                        "properties": {
                                                            "property": {
                                                                "description": "Property to sort on",
                                                                "type": "string"
                                                            },
                                                            "order": {
                                                                "description": "Direction to sort on",
                                                                "type": "string",
                                                                "enum": [
                                                                    "ASC",
                                                                    "DESC"
                                                                ],
                                                                "default": "ASC"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File id to download",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/import/{format}/{feather}": {
            "post": {
                "summary": "Import data from a file",
                "operationId": "doImport",
                "tags": [
                    "io"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "File format: csv, json or xlsx",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "feather",
                        "in": "path",
                        "description": "Data type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response of 'true' indicates successful lock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/change-password": {
            "post": {
                "summary": "User can change their own password",
                "operationId": "doChangePassword",
                "tags": [
                    "role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "oldPassword": {
                                        "description": "Old password",
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "description": "New password",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request successful"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/change-user-info": {
            "post": {
                "summary": "User can change their own contact information",
                "operationId": "doChangeUserInfo",
                "tags": [
                    "role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "description": "firstName",
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "description": "lastName",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "phone",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "email",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request successful"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/lock": {
            "post": {
                "summary": "Obtain a lock on an object for a instance",
                "operationId": "doLock",
                "tags": [
                    "lock"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Object id to lock",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "eventKey",
                        "in": "query",
                        "description": "Event notification key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of 'true' indicates successful lock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/unlock": {
            "post": {
                "summary": "Unlock an object",
                "operationId": "doUnlock",
                "tags": [
                    "lock"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Object id to unlock",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record id(s) successfully unlocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "description": "Object id",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/modules/": {
            "get": {
                "summary": "Get javascript modules",
                "operationId": "getModules",
                "tags": [
                    "module"
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Module"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/module/package/{name}": {
            "post": {
                "summary": "Package and download a module",
                "operationId": "postPackageModule",
                "tags": [
                    "module"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the module to package",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request returns the name of the package created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings/{name}": {
            "get": {
                "summary": "Get settings by name",
                "operationId": "getSettings",
                "tags": [
                    "settings"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the settings to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "settings"
                ],
                "summary": "Save new settings",
                "operationId": "saveSettings",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the settings",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Settings"
                },
                "responses": {
                    "204": {
                        "description": "Expected response to a valid request"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/subscribe": {
            "post": {
                "summary": "Subscribe to change events on an object",
                "operationId": "doSubscribe",
                "tags": [
                    "subscribe"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Object id to subscribe to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subscription",
                        "in": "query",
                        "description": "Subscription information",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "Subscription id",
                                    "type": "string"
                                },
                                "eventKey": {
                                    "description": "Client event notification key",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of 'true' indicates successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/do/unsubscribe": {
            "post": {
                "summary": "Unsubscribe to change events for a subscription",
                "operationId": "doUnsubscribe",
                "tags": [
                    "subscribe"
                ],
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "query",
                        "description": "Subscription information",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "Subscription id",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of 'true' indicates successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workbook/{name}": {
            "get": {
                "summary": "Get workbook by name",
                "operationId": "getWorkbook",
                "tags": [
                    "workbook"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the workbook to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Workbook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workbook not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "workbook"
                ],
                "summary": "Save Workbook",
                "operationId": "saveWorkbook",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the workbook",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Workbook"
                },
                "responses": {
                    "204": {
                        "description": "Expected response to a valid request"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workbook"
                ],
                "summary": "Delete workbook",
                "operationId": "deleteWorkbook",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Delete a workbook",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workbooks/": {
            "get": {
                "summary": "Get all workbooks",
                "operationId": "getWorkbooks",
                "tags": [
                    "workbook"
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workbook"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/base-currency/{id}": {
            "get": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Info for a specific Base Currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Base Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseCurrency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Update an existing Base Currency",
                "operationId": "doPatchBase Currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Base Currency to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Delete a Base Currency",
                "operationId": "doDeleteBase Currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Base Currency to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/base-currency": {
            "post": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Add a new Base Currency to the database",
                "operationId": "doInsertBase Currency",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseCurrency"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/base-currencies": {
            "post": {
                "tags": [
                    "base-currency"
                ],
                "summary": "Query BaseCurrency data",
                "operationId": "doSelectBase Currency",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Base Currencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseCurrency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/comment/{id}": {
            "get": {
                "tags": [
                    "comment"
                ],
                "summary": "Info for a specific Comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Comment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "comment"
                ],
                "summary": "Update an existing Comment",
                "operationId": "doPatchComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Comment to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "comment"
                ],
                "summary": "Delete a Comment",
                "operationId": "doDeleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Comment to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/comment": {
            "post": {
                "tags": [
                    "comment"
                ],
                "summary": "Add a new Comment to the database",
                "operationId": "doInsertComment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/contact/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Info for a specific Contact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Contact to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "contact"
                ],
                "summary": "Update an existing Contact",
                "operationId": "doPatchContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Contact to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "contact"
                ],
                "summary": "Delete a Contact",
                "operationId": "doDeleteContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Contact to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/contact": {
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Add a new Contact to the database",
                "operationId": "doInsertContact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/contacts": {
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Query Contact data",
                "operationId": "doSelectContact",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/country/{id}": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Info for a specific Country",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Country to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "country"
                ],
                "summary": "Update an existing Country",
                "operationId": "doPatchCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Country to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "country"
                ],
                "summary": "Delete a Country",
                "operationId": "doDeleteCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Country to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/country": {
            "post": {
                "tags": [
                    "country"
                ],
                "summary": "Add a new Country to the database",
                "operationId": "doInsertCountry",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Country"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/countries": {
            "post": {
                "tags": [
                    "country"
                ],
                "summary": "Query Country data",
                "operationId": "doSelectCountry",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Countries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency/{id}": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Info for a specific Currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "currency"
                ],
                "summary": "Update an existing Currency",
                "operationId": "doPatchCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "currency"
                ],
                "summary": "Delete a Currency",
                "operationId": "doDeleteCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency": {
            "post": {
                "tags": [
                    "currency"
                ],
                "summary": "Add a new Currency to the database",
                "operationId": "doInsertCurrency",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Currency"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currencies": {
            "post": {
                "tags": [
                    "currency"
                ],
                "summary": "Query Currency data",
                "operationId": "doSelectCurrency",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Currencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-conversion/{id}": {
            "get": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Info for a specific Currency Conversion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Conversion to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyConversion"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Update an existing Currency Conversion",
                "operationId": "doPatchCurrency Conversion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Conversion to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Delete a Currency Conversion",
                "operationId": "doDeleteCurrency Conversion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Conversion to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-conversion": {
            "post": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Add a new Currency Conversion to the database",
                "operationId": "doInsertCurrency Conversion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyConversion"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-conversions": {
            "post": {
                "tags": [
                    "currency-conversion"
                ],
                "summary": "Query CurrencyConversion data",
                "operationId": "doSelectCurrency Conversion",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Currency Conversions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyConversion"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-unit/{id}": {
            "get": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Info for a specific Currency Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyUnit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Update an existing Currency Unit",
                "operationId": "doPatchCurrency Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Unit to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Delete a Currency Unit",
                "operationId": "doDeleteCurrency Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Currency Unit to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-unit": {
            "post": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Add a new Currency Unit to the database",
                "operationId": "doInsertCurrency Unit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyUnit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/currency-units": {
            "post": {
                "tags": [
                    "currency-unit"
                ],
                "summary": "Query CurrencyUnit data",
                "operationId": "doSelectCurrency Unit",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Currency Units",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyUnit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/data-service/{id}": {
            "get": {
                "tags": [
                    "data-service"
                ],
                "summary": "Info for a specific Data Service",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Data Service to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataService"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "data-service"
                ],
                "summary": "Update an existing Data Service",
                "operationId": "doPatchData Service",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Data Service to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "data-service"
                ],
                "summary": "Delete a Data Service",
                "operationId": "doDeleteData Service",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Data Service to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/data-service": {
            "post": {
                "tags": [
                    "data-service"
                ],
                "summary": "Add a new Data Service to the database",
                "operationId": "doInsertData Service",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataService"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/data-services": {
            "post": {
                "tags": [
                    "data-service"
                ],
                "summary": "Query DataService data",
                "operationId": "doSelectData Service",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Data Services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataService"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/document/{id}": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "Info for a specific Document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Document to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "document"
                ],
                "summary": "Update an existing Document",
                "operationId": "doPatchDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Document to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "document"
                ],
                "summary": "Delete a Document",
                "operationId": "doDeleteDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Document to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/document": {
            "post": {
                "tags": [
                    "document"
                ],
                "summary": "Add a new Document to the database",
                "operationId": "doInsertDocument",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Document"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/documents": {
            "post": {
                "tags": [
                    "document"
                ],
                "summary": "Query Document data",
                "operationId": "doSelectDocument",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Documents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/feather/{id}": {
            "get": {
                "tags": [
                    "feather"
                ],
                "summary": "Info for a specific Feather",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Feather to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feather"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "feather"
                ],
                "summary": "Update an existing Feather",
                "operationId": "doPatchFeather",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Feather to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "feather"
                ],
                "summary": "Delete a Feather",
                "operationId": "doDeleteFeather",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Feather to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/feather": {
            "post": {
                "tags": [
                    "feather"
                ],
                "summary": "Add a new Feather to the database",
                "operationId": "doInsertFeather",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feather"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/feathers": {
            "post": {
                "tags": [
                    "feather"
                ],
                "summary": "Query Feather data",
                "operationId": "doSelectFeather",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Feathers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Feather"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/form/{id}": {
            "get": {
                "tags": [
                    "form"
                ],
                "summary": "Info for a specific Form",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Form to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "form"
                ],
                "summary": "Update an existing Form",
                "operationId": "doPatchForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Form to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "form"
                ],
                "summary": "Delete a Form",
                "operationId": "doDeleteForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Form to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/form": {
            "post": {
                "tags": [
                    "form"
                ],
                "summary": "Add a new Form to the database",
                "operationId": "doInsertForm",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Form"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/forms": {
            "post": {
                "tags": [
                    "form"
                ],
                "summary": "Query Form data",
                "operationId": "doSelectForm",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/honorific/{id}": {
            "get": {
                "tags": [
                    "honorific"
                ],
                "summary": "Info for a specific Honorific",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Honorific to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Honorific"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "honorific"
                ],
                "summary": "Update an existing Honorific",
                "operationId": "doPatchHonorific",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Honorific to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "honorific"
                ],
                "summary": "Delete a Honorific",
                "operationId": "doDeleteHonorific",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Honorific to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/honorific": {
            "post": {
                "tags": [
                    "honorific"
                ],
                "summary": "Add a new Honorific to the database",
                "operationId": "doInsertHonorific",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Honorific"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/honorifics": {
            "post": {
                "tags": [
                    "honorific"
                ],
                "summary": "Query Honorific data",
                "operationId": "doSelectHonorific",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Honorifics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Honorific"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/kind/{id}": {
            "get": {
                "tags": [
                    "kind"
                ],
                "summary": "Info for a specific Kind",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Kind to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "kind"
                ],
                "summary": "Update an existing Kind",
                "operationId": "doPatchKind",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Kind to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "kind"
                ],
                "summary": "Delete a Kind",
                "operationId": "doDeleteKind",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Kind to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/kind": {
            "post": {
                "tags": [
                    "kind"
                ],
                "summary": "Add a new Kind to the database",
                "operationId": "doInsertKind",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Kind"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/kinds": {
            "post": {
                "tags": [
                    "kind"
                ],
                "summary": "Query Kind data",
                "operationId": "doSelectKind",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Kinds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kind"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/layout/{id}": {
            "get": {
                "tags": [
                    "layout"
                ],
                "summary": "Info for a specific Layout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Layout to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Layout"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "layout"
                ],
                "summary": "Update an existing Layout",
                "operationId": "doPatchLayout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Layout to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "layout"
                ],
                "summary": "Delete a Layout",
                "operationId": "doDeleteLayout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Layout to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/layout": {
            "post": {
                "tags": [
                    "layout"
                ],
                "summary": "Add a new Layout to the database",
                "operationId": "doInsertLayout",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Layout"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/layouts": {
            "post": {
                "tags": [
                    "layout"
                ],
                "summary": "Query Layout data",
                "operationId": "doSelectLayout",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Layouts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Layout"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/log/{id}": {
            "get": {
                "tags": [
                    "log"
                ],
                "summary": "Info for a specific Log",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Log to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "log"
                ],
                "summary": "Update an existing Log",
                "operationId": "doPatchLog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Log to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "log"
                ],
                "summary": "Delete a Log",
                "operationId": "doDeleteLog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Log to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/log": {
            "post": {
                "tags": [
                    "log"
                ],
                "summary": "Add a new Log to the database",
                "operationId": "doInsertLog",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Log"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/logs": {
            "post": {
                "tags": [
                    "log"
                ],
                "summary": "Query Log data",
                "operationId": "doSelectLog",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Log"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/module/{id}": {
            "get": {
                "tags": [
                    "module"
                ],
                "summary": "Info for a specific Module",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Module to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "module"
                ],
                "summary": "Update an existing Module",
                "operationId": "doPatchModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Module to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "module"
                ],
                "summary": "Delete a Module",
                "operationId": "doDeleteModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Module to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/module": {
            "post": {
                "tags": [
                    "module"
                ],
                "summary": "Add a new Module to the database",
                "operationId": "doInsertModule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Module"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/modules": {
            "post": {
                "tags": [
                    "module"
                ],
                "summary": "Query Module data",
                "operationId": "doSelectModule",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Modules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/object/{id}": {
            "get": {
                "tags": [
                    "object"
                ],
                "summary": "Info for a specific Object",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Object to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "object"
                ],
                "summary": "Update an existing Object",
                "operationId": "doPatchObject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Object to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "object"
                ],
                "summary": "Delete a Object",
                "operationId": "doDeleteObject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Object to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/object": {
            "post": {
                "tags": [
                    "object"
                ],
                "summary": "Add a new Object to the database",
                "operationId": "doInsertObject",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/objects": {
            "post": {
                "tags": [
                    "object"
                ],
                "summary": "Query Object data",
                "operationId": "doSelectObject",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/relation-widget/{id}": {
            "get": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Info for a specific Relation Widget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Relation Widget to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelationWidget"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Update an existing Relation Widget",
                "operationId": "doPatchRelation Widget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Relation Widget to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Delete a Relation Widget",
                "operationId": "doDeleteRelation Widget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Relation Widget to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/relation-widget": {
            "post": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Add a new Relation Widget to the database",
                "operationId": "doInsertRelation Widget",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationWidget"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/relation-widgets": {
            "post": {
                "tags": [
                    "relation-widget"
                ],
                "summary": "Query RelationWidget data",
                "operationId": "doSelectRelation Widget",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Relation Widgets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelationWidget"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/role/{id}": {
            "get": {
                "tags": [
                    "role"
                ],
                "summary": "Info for a specific Role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "role"
                ],
                "summary": "Update an existing Role",
                "operationId": "doPatchRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Role to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "role"
                ],
                "summary": "Delete a Role",
                "operationId": "doDeleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Role to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/role": {
            "post": {
                "tags": [
                    "role"
                ],
                "summary": "Add a new Role to the database",
                "operationId": "doInsertRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/roles": {
            "post": {
                "tags": [
                    "role"
                ],
                "summary": "Query Role data",
                "operationId": "doSelectRole",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/route/{id}": {
            "get": {
                "tags": [
                    "route"
                ],
                "summary": "Info for a specific Route",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Route to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "route"
                ],
                "summary": "Update an existing Route",
                "operationId": "doPatchRoute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Route to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "route"
                ],
                "summary": "Delete a Route",
                "operationId": "doDeleteRoute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Route to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/route": {
            "post": {
                "tags": [
                    "route"
                ],
                "summary": "Add a new Route to the database",
                "operationId": "doInsertRoute",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Route"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/routes": {
            "post": {
                "tags": [
                    "route"
                ],
                "summary": "Query Route data",
                "operationId": "doSelectRoute",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Routes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/script/{id}": {
            "get": {
                "tags": [
                    "script"
                ],
                "summary": "Info for a specific Script",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Script to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Script"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "script"
                ],
                "summary": "Update an existing Script",
                "operationId": "doPatchScript",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Script to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "script"
                ],
                "summary": "Delete a Script",
                "operationId": "doDeleteScript",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Script to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/script": {
            "post": {
                "tags": [
                    "script"
                ],
                "summary": "Add a new Script to the database",
                "operationId": "doInsertScript",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Script"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/scripts": {
            "post": {
                "tags": [
                    "script"
                ],
                "summary": "Query Script data",
                "operationId": "doSelectScript",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Scripts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Script"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/social-network/{id}": {
            "get": {
                "tags": [
                    "social-network"
                ],
                "summary": "Info for a specific Social Network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Social Network to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialNetwork"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "social-network"
                ],
                "summary": "Update an existing Social Network",
                "operationId": "doPatchSocial Network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Social Network to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "social-network"
                ],
                "summary": "Delete a Social Network",
                "operationId": "doDeleteSocial Network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Social Network to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/social-network": {
            "post": {
                "tags": [
                    "social-network"
                ],
                "summary": "Add a new Social Network to the database",
                "operationId": "doInsertSocial Network",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SocialNetwork"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/social-networks": {
            "post": {
                "tags": [
                    "social-network"
                ],
                "summary": "Query SocialNetwork data",
                "operationId": "doSelectSocial Network",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Social Networks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SocialNetwork"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/state/{id}": {
            "get": {
                "tags": [
                    "state"
                ],
                "summary": "Info for a specific State",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the State to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "state"
                ],
                "summary": "Update an existing State",
                "operationId": "doPatchState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the State to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "state"
                ],
                "summary": "Delete a State",
                "operationId": "doDeleteState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the State to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/state": {
            "post": {
                "tags": [
                    "state"
                ],
                "summary": "Add a new State to the database",
                "operationId": "doInsertState",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/states": {
            "post": {
                "tags": [
                    "state"
                ],
                "summary": "Query State data",
                "operationId": "doSelectState",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of States",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/style/{id}": {
            "get": {
                "tags": [
                    "style"
                ],
                "summary": "Info for a specific Style",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Style to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Style"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "style"
                ],
                "summary": "Update an existing Style",
                "operationId": "doPatchStyle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Style to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "style"
                ],
                "summary": "Delete a Style",
                "operationId": "doDeleteStyle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Style to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/style": {
            "post": {
                "tags": [
                    "style"
                ],
                "summary": "Add a new Style to the database",
                "operationId": "doInsertStyle",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Style"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/styles": {
            "post": {
                "tags": [
                    "style"
                ],
                "summary": "Query Style data",
                "operationId": "doSelectStyle",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Styles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Style"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/unit/{id}": {
            "get": {
                "tags": [
                    "unit"
                ],
                "summary": "Info for a specific Unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Unit to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "unit"
                ],
                "summary": "Update an existing Unit",
                "operationId": "doPatchUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Unit to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "unit"
                ],
                "summary": "Delete a Unit",
                "operationId": "doDeleteUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Unit to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/unit": {
            "post": {
                "tags": [
                    "unit"
                ],
                "summary": "Add a new Unit to the database",
                "operationId": "doInsertUnit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/units": {
            "post": {
                "tags": [
                    "unit"
                ],
                "summary": "Query Unit data",
                "operationId": "doSelectUnit",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of Units",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/user-account/{id}": {
            "get": {
                "tags": [
                    "user-account"
                ],
                "summary": "Info for a specific User Account",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the User Account to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAccount"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "user-account"
                ],
                "summary": "Update an existing User Account",
                "operationId": "doPatchUser Account",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the User Account to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/JSONPatch"
                },
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-account"
                ],
                "summary": "Delete a User Account",
                "operationId": "doDeleteUser Account",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the User Account to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Boolean indicating succesful deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/user-account": {
            "post": {
                "tags": [
                    "user-account"
                ],
                "summary": "Add a new User Account to the database",
                "operationId": "doInsertUser Account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patch list of differences appliedby the server to the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONPatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data/user-accounts": {
            "post": {
                "tags": [
                    "user-account"
                ],
                "summary": "Query UserAccount data",
                "operationId": "doSelectUser Account",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Query"
                },
                "responses": {
                    "200": {
                        "description": "Array of User Accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAccount"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Feather": {
                "description": "Object definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "plural": {
                                "description": "Plural",
                                "type": "string"
                            },
                            "module": {
                                "description": "Module",
                                "type": "string"
                            },
                            "inherits": {
                                "description": "Inherits",
                                "type": "string"
                            },
                            "isSystem": {
                                "description": "System flag",
                                "type": "boolean"
                            },
                            "isChild": {
                                "description": "Child flag",
                                "type": "boolean"
                            },
                            "isFetchOnStartup": {
                                "description": "Load all records of this type into the catalog",
                                "type": "boolean"
                            },
                            "isReadOnly": {
                                "description": "Record can not be edited by the client ",
                                "type": "boolean"
                            },
                            "properties": {
                                "description": "Parent of \"parent\" on \"FeatherProperty\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FeatherProperty"
                                }
                            },
                            "overloads": {
                                "description": "Parent of \"parent\" on \"FeatherOverload\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FeatherOverload"
                                }
                            },
                            "authorizations": {
                                "description": "Parent of \"parent\" on \"FeatherAuthorization\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FeatherAuthorization"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "module",
                    "inherits",
                    "isSystem",
                    "isChild",
                    "isFetchOnStartup",
                    "isReadOnly"
                ]
            },
            "FeatherProperty": {
                "description": "Feather property",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "alias": {
                                "description": "Alternate name for property",
                                "type": "string"
                            },
                            "type": {
                                "description": "Type",
                                "type": "object"
                            },
                            "format": {
                                "description": "Data format",
                                "type": "string"
                            },
                            "scale": {
                                "description": "Numeric scale",
                                "type": "number"
                            },
                            "precision": {
                                "description": "Numeric precision",
                                "type": "number"
                            },
                            "min": {
                                "description": "Numeric minimum",
                                "type": "number"
                            },
                            "max": {
                                "description": "Numeric maximum",
                                "type": "number"
                            },
                            "default": {
                                "description": "Default",
                                "type": "object"
                            },
                            "autonumber": {
                                "description": "Type",
                                "type": "object"
                            },
                            "isReadOnly": {
                                "description": "Ready only flag",
                                "type": "boolean"
                            },
                            "isRequired": {
                                "description": "Required flag",
                                "type": "boolean"
                            },
                            "isNaturalKey": {
                                "description": "Flag unique property relations",
                                "type": "boolean"
                            },
                            "isLabelKey": {
                                "description": "Flag default property for relation label",
                                "type": "boolean"
                            },
                            "inheritedFrom": {
                                "description": "Inherited source feather",
                                "type": "string"
                            },
                            "dataList": {
                                "description": "Array of input values",
                                "type": "array"
                            },
                            "isIndexed": {
                                "description": "Flag whether to index property",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "type",
                    "isReadOnly",
                    "isRequired",
                    "isNaturalKey",
                    "isLabelKey"
                ]
            },
            "JSONPatch": {
                "type": "array",
                "items": {
                    "type": "object",
                    "required": [
                        "op",
                        "path",
                        "value"
                    ],
                    "properties": {
                        "op": {
                            "description": "Operation",
                            "type": "string",
                            "enum": [
                                "add",
                                "replace",
                                "remove",
                                "move",
                                "copy",
                                "test"
                            ]
                        },
                        "path": {
                            "description": "Object path i.e. /cost/amount",
                            "type": "string"
                        },
                        "value": {
                            "description": "Value",
                            "type": "object"
                        }
                    }
                }
            },
            "Module": {
                "description": "Functional application module",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Script"
                    },
                    {
                        "properties": {
                            "version": {
                                "description": "Software version",
                                "type": "string"
                            },
                            "dependencies": {
                                "description": "Parent of \"parent\" on \"ModuleDependency\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ModuleDependency"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "version"
                ]
            },
            "Settings": {
                "description": "Generic definition for settings",
                "properties": {
                    "etag": {
                        "description": "Version for pessemistic locking",
                        "type": "string"
                    },
                    "data": {
                        "description": "Settings data",
                        "type": "object"
                    }
                }
            },
            "Workbook": {
                "description": "Generic definition for workbook",
                "properties": {
                    "name": {
                        "description": "Workbook name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description",
                        "type": "string"
                    },
                    "module": {
                        "description": "Module reference",
                        "type": "string"
                    },
                    "launchConfig": {
                        "description": "Workbook menu configuration",
                        "type": "object"
                    },
                    "defaultConfig": {
                        "description": "Default workbook page configuration",
                        "type": "object"
                    },
                    "localConfig": {
                        "description": "Workbook configuration altered and shared by users",
                        "type": "object"
                    }
                }
            },
            "Address": {
                "description": "Physical location",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Home, work, other",
                                "type": "string"
                            },
                            "street": {
                                "description": "Street",
                                "type": "string"
                            },
                            "unit": {
                                "description": "Unit",
                                "type": "string"
                            },
                            "city": {
                                "description": "City",
                                "type": "string"
                            },
                            "state": {
                                "description": "State",
                                "type": "string"
                            },
                            "postalCode": {
                                "description": "Postal code",
                                "type": "string"
                            },
                            "country": {
                                "description": "Country",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "type",
                    "street",
                    "city",
                    "state",
                    "postalCode",
                    "country"
                ]
            },
            "BaseCurrency": {
                "description": "Base currency effectivity",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "currency": {
                                "description": "Base currency",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "symbol": {
                                        "type": "string"
                                    },
                                    "minorUnit": {
                                        "type": "string"
                                    }
                                }
                            },
                            "effective": {
                                "description": "Effective time",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "currency",
                    "effective"
                ]
            },
            "Comment": {
                "description": "Note",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "text": {
                                "description": "Note text",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Contact": {
                "description": "Information about a person",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "honorific": {
                                "description": "Honorific",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    }
                                }
                            },
                            "firstName": {
                                "description": "First name",
                                "type": "string"
                            },
                            "lastName": {
                                "description": "Last name",
                                "type": "string"
                            },
                            "fullName": {
                                "description": "Name",
                                "type": "string"
                            },
                            "phone": {
                                "description": "Primary phone number",
                                "type": "string"
                            },
                            "phoneType": {
                                "description": "Home, work, other",
                                "type": "string"
                            },
                            "email": {
                                "description": "Primary phone number",
                                "type": "string"
                            },
                            "emailType": {
                                "description": "Personal, work, other",
                                "type": "string"
                            },
                            "address": {
                                "description": "Primary Address",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "unit": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "postalCode": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    }
                                }
                            },
                            "webSite": {
                                "description": "Personal web page",
                                "type": "string"
                            },
                            "phones": {
                                "description": "Parent of \"parent\" on \"ContactPhone\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactPhone"
                                }
                            },
                            "emails": {
                                "description": "Parent of \"parent\" on \"ContactEmail\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactEmail"
                                }
                            },
                            "addresses": {
                                "description": "Parent of \"parent\" on \"ContactAddress\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactAddress"
                                }
                            },
                            "social": {
                                "description": "Parent of \"parent\" on \"ContactSocialAccount\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ContactSocialAccount"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "lastName",
                    "phoneType",
                    "emailType"
                ]
            },
            "ContactAddress": {
                "description": "Contact address",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "address": {
                                "description": "Address",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "unit": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "postalCode": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    }
                                }
                            },
                            "isPrimary": {
                                "description": "Primary address flag",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "ContactEmail": {
                "description": "Contact email addresses",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Personal, work, other",
                                "type": "string"
                            },
                            "email": {
                                "description": "Email address",
                                "type": "string"
                            },
                            "isPrimary": {
                                "description": "Primary email flag",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "ContactPhone": {
                "description": "Contact phone numbers",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "type": {
                                "description": "Home, work, other",
                                "type": "string"
                            },
                            "phone": {
                                "description": "Phone number",
                                "type": "string"
                            },
                            "isPrimary": {
                                "description": "Primary phone flag",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "type"
                ]
            },
            "ContactSocialAccount": {
                "description": "Contact social media accounts",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "network": {
                                "description": "Social network",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    }
                                }
                            },
                            "userName": {
                                "description": "User name",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Country": {
                "description": "Country",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Country code",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "name"
                ]
            },
            "Currency": {
                "description": "Currency",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Kind"
                    },
                    {
                        "properties": {
                            "symbol": {
                                "description": "Symbol",
                                "type": "string"
                            },
                            "minorUnit": {
                                "description": "Precision",
                                "type": "integer"
                            },
                            "isBase": {
                                "description": "System base currency flag",
                                "type": "boolean"
                            },
                            "hasDisplayUnit": {
                                "description": "Use alternate unit of mesaure in display",
                                "type": "boolean"
                            },
                            "displayUnit": {
                                "description": "Display unit of mesaure",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "minorUnit": {
                                        "type": "string"
                                    },
                                    "symbol": {
                                        "type": "string"
                                    }
                                }
                            },
                            "conversions": {
                                "description": "Parent of \"parent\" on \"CurrencyUnitConversion\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CurrencyUnitConversion"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "hasDisplayUnit"
                ]
            },
            "CurrencyConversion": {
                "description": "Currency Conversion rates",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "fromCurrency": {
                                "description": "Currency converting from",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "symbol": {
                                        "type": "string"
                                    },
                                    "minorUnit": {
                                        "type": "string"
                                    }
                                }
                            },
                            "toCurrency": {
                                "description": "Currency converting to",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "symbol": {
                                        "type": "string"
                                    },
                                    "minorUnit": {
                                        "type": "string"
                                    }
                                }
                            },
                            "ratio": {
                                "description": "conversion ratio",
                                "type": "number"
                            },
                            "effective": {
                                "description": "effective date",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "fromCurrency",
                    "toCurrency",
                    "ratio",
                    "effective"
                ]
            },
            "CurrencyUnit": {
                "description": "Currency Unit of measure",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Unit"
                    },
                    {
                        "properties": {
                            "symbol": {
                                "description": "Currency unit symbol",
                                "type": "string"
                            },
                            "minorUnit": {
                                "description": "Precision",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "required": [
                    "minorUnit"
                ]
            },
            "CurrencyUnitConversion": {
                "description": "Currency Unit Conversion",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "toUnit": {
                                "description": "To unit of measure",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            "ratio": {
                                "description": "conversion ratio",
                                "type": "number"
                            }
                        }
                    }
                ],
                "required": [
                    "toUnit",
                    "ratio"
                ]
            },
            "DataService": {
                "description": "Server business logic",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Script"
                    },
                    {
                        "properties": {
                            "module": {
                                "description": "Module script belongs to",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Document": {
                "description": "Base document class",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "owner": {
                                "description": "Owner of the document",
                                "type": "string"
                            },
                            "etag": {
                                "description": "Optimistic locking key",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "owner"
                ]
            },
            "FeatherAuthorization": {
                "description": "Role authorized to use the parent feather",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "role": {
                                "description": "Name",
                                "type": "string"
                            },
                            "canCreate": {
                                "description": "Role can create new records",
                                "type": "boolean"
                            },
                            "canRead": {
                                "description": "Role can read records",
                                "type": "boolean"
                            },
                            "canUpdate": {
                                "description": "Role can update records",
                                "type": "boolean"
                            },
                            "canDelete": {
                                "description": "Role can delete records",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "role"
                ]
            },
            "FeatherOverload": {
                "description": "Override behvaior of inherited properties on client",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "overloadDescription": {
                                "description": "Flag whether to overload description",
                                "type": "boolean"
                            },
                            "description": {
                                "description": "Specific description of property use for this feather",
                                "type": "string"
                            },
                            "overloadAlias": {
                                "description": "Flag whether to overload alias",
                                "type": "boolean"
                            },
                            "alias": {
                                "description": "Label name to use for this property on the client side",
                                "type": "string"
                            },
                            "overloadType": {
                                "description": "Flag whether to overload type",
                                "type": "boolean"
                            },
                            "type": {
                                "description": "Specify an alternate relation feather to use on the client side for easier searching",
                                "type": "object"
                            },
                            "overloadDefault": {
                                "description": "Flag whether to overload default",
                                "type": "boolean"
                            },
                            "default": {
                                "description": "Overloaded default",
                                "type": "object"
                            },
                            "overloadDataList": {
                                "description": "Flag whether to overload data list",
                                "type": "boolean"
                            },
                            "dataList": {
                                "description": "Over loaded list of available values for this feather",
                                "type": "array"
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "Form": {
                "description": "Form definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Layout"
                    },
                    {
                        "properties": {
                            "focus": {
                                "description": "Attribute that receives first focus",
                                "type": "string"
                            },
                            "tabs": {
                                "description": "Parent of \"parent\" on \"FormTab\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FormTab"
                                }
                            },
                            "attrs": {
                                "description": "Parent of \"parent\" on \"FormAttr\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FormAttr"
                                }
                            }
                        }
                    }
                ]
            },
            "FormAttr": {
                "description": "Form attribute definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "attr": {
                                "description": "Attribute name",
                                "type": "string"
                            },
                            "grid": {
                                "description": "Grid (pane) number",
                                "type": "integer"
                            },
                            "unit": {
                                "description": "Unit (column) number",
                                "type": "integer"
                            },
                            "showLabel": {
                                "description": "Flag to show or hide label",
                                "type": "boolean"
                            },
                            "label": {
                                "description": "Alternate attribute label",
                                "type": "string"
                            },
                            "dataList": {
                                "description": "Property that returns an array of options",
                                "type": "string"
                            },
                            "filter": {
                                "description": "Filter definition for relation widget",
                                "type": "object"
                            },
                            "disableCurrency": {
                                "description": "Flag to disable currency selector on currency widget",
                                "type": "boolean"
                            },
                            "relationWidget": {
                                "description": "Specific over-ride definition for relation widget",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            "columns": {
                                "description": "Parent of \"parent\" on \"FormAttrColumn\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FormAttrColumn"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "attr",
                    "grid",
                    "unit",
                    "disableCurrency"
                ]
            },
            "FormAttrColumn": {
                "description": "Form attribute column definitions for child objects",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "attr": {
                                "description": "Attribute name",
                                "type": "string"
                            },
                            "label": {
                                "description": "Alternate column label",
                                "type": "string"
                            },
                            "dataList": {
                                "description": "Property that returns an array of options",
                                "type": "string"
                            },
                            "filter": {
                                "description": "Filter for relation search criteria",
                                "type": "object"
                            },
                            "showCurrency": {
                                "description": "Show currency selector if money",
                                "type": "boolean"
                            },
                            "width": {
                                "description": "Default column width",
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "FormTab": {
                "description": "Form tab definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Tab name",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Honorific": {
                "description": "Honorific",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Title",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Kind": {
                "description": "Base class for physical types",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Natural key",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "note": {
                                "description": "Note",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "Layout": {
                "description": "Layout definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "module": {
                                "description": "Module",
                                "type": "string"
                            },
                            "feather": {
                                "description": "Feather",
                                "type": "string"
                            },
                            "isActive": {
                                "description": "Active status",
                                "type": "boolean"
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "feather",
                    "isActive"
                ]
            },
            "Log": {
                "description": "Logs all data changes",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "objectId": {
                                "description": "Object change was performed against",
                                "type": "string"
                            },
                            "action": {
                                "description": "Action performed",
                                "type": "string"
                            },
                            "change": {
                                "description": "Patch formatted json indicating changes",
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "ModuleDependency": {
                "description": "Reference to module required for parent to operate",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "module": {
                                "description": "Module parent is dependant on",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "module"
                ]
            },
            "Object": {
                "description": "Abstract object class from which all feathers will inherit",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Surrogate key",
                        "type": "string"
                    },
                    "created": {
                        "description": "Create time of the record",
                        "type": "string"
                    },
                    "createdBy": {
                        "description": "User who created the record",
                        "type": "string"
                    },
                    "updated": {
                        "description": "Last time the record was updated",
                        "type": "string"
                    },
                    "updatedBy": {
                        "description": "User who last updated the record",
                        "type": "string"
                    },
                    "isDeleted": {
                        "description": "Indicates the record is no longer active",
                        "type": "boolean"
                    },
                    "lock": {
                        "description": "Record lock information",
                        "type": "object"
                    },
                    "objectType": {
                        "description": "Discriminates which inherited object type the object represents",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "RelationSearchColumn": {
                "description": "Columns shown on relation widget search",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "attr": {
                                "description": "Attribute name",
                                "type": "string"
                            },
                            "label": {
                                "description": "Alternate column label",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "attr"
                ]
            },
            "RelationWidget": {
                "description": "Relation widget definitions",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Layout"
                    },
                    {
                        "properties": {
                            "form": {
                                "description": "Form relation",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            "valueProperty": {
                                "description": "User key property",
                                "type": "string"
                            },
                            "labelProperty": {
                                "description": "Description property",
                                "type": "string"
                            },
                            "searchColumns": {
                                "description": "Parent of \"parent\" on \"RelationSearchColumn\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RelationSearchColumn"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "valueProperty"
                ]
            },
            "Role": {
                "description": "User authorization role",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "membership": {
                                "description": "Parent of \"parent\" on \"RoleMembership\"",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RoleMembership"
                                }
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "RoleMembership": {
                "description": "Member reference to a parent role",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Object"
                    },
                    {
                        "properties": {
                            "role": {
                                "description": "Parent member role name",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "Route": {
                "description": "Route to expose post service to REST API",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "module": {
                                "description": "Module route belongs to",
                                "type": "string"
                            },
                            "path": {
                                "description": "Route path",
                                "type": "string"
                            },
                            "function": {
                                "description": "Registered function on datasource to execute",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "module",
                    "path",
                    "function"
                ]
            },
            "Script": {
                "description": "Script base class",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "script": {
                                "description": "Client JavaScript code for models and components",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "name"
                ]
            },
            "SocialNetwork": {
                "description": "Social media networks",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Network name",
                                "type": "string"
                            },
                            "description": {
                                "description": "description",
                                "type": "string"
                            },
                            "url": {
                                "description": "Url",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "State": {
                "description": "State",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "State code",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code",
                    "name"
                ]
            },
            "Style": {
                "description": "Custom presentation style definition",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Style name",
                                "type": "string"
                            },
                            "description": {
                                "description": "Style description",
                                "type": "string"
                            },
                            "module": {
                                "description": "Module style belongs to",
                                "type": "string"
                            },
                            "hasColor": {
                                "description": "Turn on font color over-ride",
                                "type": "boolean"
                            },
                            "color": {
                                "description": "Font color",
                                "type": "string"
                            },
                            "hasBackgroundColor": {
                                "description": "Turn on background color over-ride",
                                "type": "boolean"
                            },
                            "backgroundColor": {
                                "description": "Background color",
                                "type": "string"
                            },
                            "fontWeight": {
                                "description": "Font weight",
                                "type": "string"
                            },
                            "underline": {
                                "description": "Feather",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "name",
                    "description",
                    "fontWeight",
                    "underline"
                ]
            },
            "Unit": {
                "description": "Unit of measure",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Document"
                    },
                    {
                        "properties": {
                            "code": {
                                "description": "Natural key",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description",
                                "type": "string"
                            },
                            "dimension": {
                                "description": "Dimension",
                                "type": "string"
                            }
                        }
                    }
                ],
                "required": [
                    "code"
                ]
            },
            "UserAccount": {
                "description": "System users",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Role"
                    },
                    {
                        "properties": {
                            "password": {
                                "description": "Password",
                                "type": "string"
                            },
                            "isSuper": {
                                "description": "System adiminstrator flag",
                                "type": "boolean"
                            },
                            "contact": {
                                "description": "Contact information",
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "fullName": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                }
                            },
                            "isActive": {
                                "description": "Allow user to log in",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "requestBodies": {
            "Feather": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Feather"
                        }
                    }
                },
                "description": "Feather to be added",
                "required": true
            },
            "JSONPatch": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/JSONPatch"
                        }
                    }
                },
                "description": "JSON Patch (RFC 6902)",
                "required": true
            },
            "Settings": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Settings"
                        }
                    }
                },
                "description": "Settings to be saved",
                "required": true
            },
            "Workbook": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Workbook"
                        }
                    }
                },
                "description": "Workbook to be saved",
                "required": true
            },
            "Query": {
                "description": "Complex parameters",
                "required": false,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "showDeleted": {
                                    "description": "Flag whether to show deleted records",
                                    "type": "boolean",
                                    "default": false
                                },
                                "subscription": {
                                    "type": "object",
                                    "description": "Subscription to auto subscribe to results",
                                    "required": [
                                        "id",
                                        "eventKey"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Subscription id",
                                            "type": "string"
                                        },
                                        "eventKey": {
                                            "description": "Client event notification key",
                                            "type": "string"
                                        },
                                        "merge": {
                                            "description": "Add results to prexisting subscription with matching id",
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "filter": {
                                    "description": "Define which objects and how to present",
                                    "type": "object",
                                    "properties": {
                                        "criteria": {
                                            "description": "filter criteria",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "property",
                                                    "value"
                                                ],
                                                "properties": {
                                                    "property": {
                                                        "description": "Property to filter on. Dot notation for relations supported",
                                                        "type": "string"
                                                    },
                                                    "operator": {
                                                        "description": "Operator",
                                                        "type": "string",
                                                        "enum": [
                                                            "=",
                                                            "!=",
                                                            "~",
                                                            "!~",
                                                            "<",
                                                            ">",
                                                            "<=",
                                                            ">=",
                                                            "IN"
                                                        ],
                                                        "default": "="
                                                    },
                                                    "value": {
                                                        "description": "Value to filter for",
                                                        "type": "object"
                                                    }
                                                }
                                            }
                                        },
                                        "sort": {
                                            "description": "Sort order",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "required": [
                                                    "property"
                                                ],
                                                "properties": {
                                                    "property": {
                                                        "description": "Property to sort on",
                                                        "type": "string"
                                                    },
                                                    "order": {
                                                        "description": "Direction to sort on",
                                                        "type": "string",
                                                        "enum": [
                                                            "ASC",
                                                            "DESC"
                                                        ],
                                                        "default": "ASC"
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "description": "Offset from first item",
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "limit": {
                                            "description": "How many objects to return",
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "BaseCurrency": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BaseCurrency"
                        }
                    }
                },
                "description": "Base Currency to be added",
                "required": true
            },
            "Comment": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "description": "Comment to be added",
                "required": true
            },
            "Contact": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                },
                "description": "Contact to be added",
                "required": true
            },
            "Country": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Country"
                        }
                    }
                },
                "description": "Country to be added",
                "required": true
            },
            "Currency": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    }
                },
                "description": "Currency to be added",
                "required": true
            },
            "CurrencyConversion": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CurrencyConversion"
                        }
                    }
                },
                "description": "Currency Conversion to be added",
                "required": true
            },
            "CurrencyUnit": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CurrencyUnit"
                        }
                    }
                },
                "description": "Currency Unit to be added",
                "required": true
            },
            "DataService": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DataService"
                        }
                    }
                },
                "description": "Data Service to be added",
                "required": true
            },
            "Document": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                },
                "description": "Document to be added",
                "required": true
            },
            "Form": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Form"
                        }
                    }
                },
                "description": "Form to be added",
                "required": true
            },
            "Honorific": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Honorific"
                        }
                    }
                },
                "description": "Honorific to be added",
                "required": true
            },
            "Kind": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Kind"
                        }
                    }
                },
                "description": "Kind to be added",
                "required": true
            },
            "Layout": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Layout"
                        }
                    }
                },
                "description": "Layout to be added",
                "required": true
            },
            "Log": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Log"
                        }
                    }
                },
                "description": "Log to be added",
                "required": true
            },
            "Module": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Module"
                        }
                    }
                },
                "description": "Module to be added",
                "required": true
            },
            "Object": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Object"
                        }
                    }
                },
                "description": "Object to be added",
                "required": true
            },
            "RelationWidget": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RelationWidget"
                        }
                    }
                },
                "description": "Relation Widget to be added",
                "required": true
            },
            "Role": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "description": "Role to be added",
                "required": true
            },
            "Route": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Route"
                        }
                    }
                },
                "description": "Route to be added",
                "required": true
            },
            "Script": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Script"
                        }
                    }
                },
                "description": "Script to be added",
                "required": true
            },
            "SocialNetwork": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SocialNetwork"
                        }
                    }
                },
                "description": "Social Network to be added",
                "required": true
            },
            "State": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/State"
                        }
                    }
                },
                "description": "State to be added",
                "required": true
            },
            "Style": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Style"
                        }
                    }
                },
                "description": "Style to be added",
                "required": true
            },
            "Unit": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Unit"
                        }
                    }
                },
                "description": "Unit to be added",
                "required": true
            },
            "UserAccount": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserAccount"
                        }
                    }
                },
                "description": "User Account to be added",
                "required": true
            }
        }
    }
}