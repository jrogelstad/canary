{
    "project": {
        "name": "Featherbone Client",
        "description": "Framework for building object relational database apps",
        "version": "0.1.0",
        "url": "https://github.com/jrogelstad/featherbone",
        "logo": "../featherbone-client.png"
    },
    "files": {
        "components\\account-menu.js": {
            "name": "components\\account-menu.js",
            "modules": {
                "AccountMenu": 1
            },
            "classes": {
                "ViewModels.AccountMenu": 1,
                "Components.AccountMenu": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\address-relation.js": {
            "name": "components\\address-relation.js",
            "modules": {
                "AddressRelation": 1
            },
            "classes": {
                "ViewModels.AddressRelation": 1,
                "Components.AddressRelation": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\autonumber.js": {
            "name": "components\\autonumber.js",
            "modules": {
                "AutoNumber": 1
            },
            "classes": {
                "ViewModels.AutoNumber": 1,
                "Components.AutoNumber": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\button.js": {
            "name": "components\\button.js",
            "modules": {
                "Button": 1
            },
            "classes": {
                "ViewModels.Button": 1,
                "Components.Button": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\checkbox.js": {
            "name": "components\\checkbox.js",
            "modules": {
                "Checkbox": 1
            },
            "classes": {
                "ViewModels.Checkbox": 1,
                "Components.Checkbox": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\child-form-page.js": {
            "name": "components\\child-form-page.js",
            "modules": {
                "ChildFormPage": 1
            },
            "classes": {
                "ViewModels.ChildFormPage": 1,
                "Components.ChildFormPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\child-table.js": {
            "name": "components\\child-table.js",
            "modules": {
                "ChildTable": 1
            },
            "classes": {
                "ViewModels.ChildTable": 1,
                "Components.ChildTable": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\contact-relation.js": {
            "name": "components\\contact-relation.js",
            "modules": {
                "ContactRelation": 1
            },
            "classes": {
                "ViewModels.ContactRelation": 1,
                "Components.ContactRelation": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\data-list.js": {
            "name": "components\\data-list.js",
            "modules": {},
            "classes": {
                "ViewModels.DataList": 1,
                "Components.DataList": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\data-type.js": {
            "name": "components\\data-type.js",
            "modules": {
                "DataType": 1
            },
            "classes": {
                "ViewModels.DataType": 1,
                "Components.DataType": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\dialog.js": {
            "name": "components\\dialog.js",
            "modules": {
                "Dialog": 1
            },
            "classes": {
                "ViewModels.Dialog": 1,
                "Components.Dialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\filter-dialog.js": {
            "name": "components\\filter-dialog.js",
            "modules": {
                "FilterDialog": 1
            },
            "classes": {
                "ViewModels.FilterDialog": 1,
                "Components.FilterDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\form-dialog.js": {
            "name": "components\\form-dialog.js",
            "modules": {
                "FormDialog": 1
            },
            "classes": {
                "ViewModels.FormDialog": 1,
                "Components.FormDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\form-page.js": {
            "name": "components\\form-page.js",
            "modules": {
                "FormPage": 1
            },
            "classes": {
                "Models.ObjectAuthorization": 1,
                "ViewModels.FormPage": 1,
                "Components.FormPage": 1
            },
            "fors": {},
            "namespaces": {
                "Models": 1,
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\form-widget.js": {
            "name": "components\\form-widget.js",
            "modules": {
                "FormWidget": 1
            },
            "classes": {
                "ViewModels.FormWidget": 1,
                "Components.FormWidget": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\money-relation.js": {
            "name": "components\\money-relation.js",
            "modules": {
                "MoneyRelation": 1
            },
            "classes": {
                "ViewModels.MoneyRelation": 1,
                "Components.MoneyRelation": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\navigator-menu.js": {
            "name": "components\\navigator-menu.js",
            "modules": {
                "NavigatorMenu": 1
            },
            "classes": {
                "ViewModels.NavigatorMenu": 1,
                "Components.NavigatorMenu": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\relation-widget.js": {
            "name": "components\\relation-widget.js",
            "modules": {
                "RelationWidget": 1
            },
            "classes": {
                "ViewModels.RelationWidget": 1,
                "Components.RelationWidget": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\search-input.js": {
            "name": "components\\search-input.js",
            "modules": {
                "SearchInput": 1
            },
            "classes": {
                "ViewModels.SearchInput": 1,
                "Components.SearchInput": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\search-page.js": {
            "name": "components\\search-page.js",
            "modules": {
                "SearchPage": 1
            },
            "classes": {
                "ViewModels.SearchPage": 1,
                "Components.SearchPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\settings-page.js": {
            "name": "components\\settings-page.js",
            "modules": {
                "SettingsPage": 1
            },
            "classes": {
                "ViewModels.SettingsPage": 1,
                "Components.SettingsPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\sort-dialog.js": {
            "name": "components\\sort-dialog.js",
            "modules": {
                "SortDialog": 1
            },
            "classes": {
                "ViewModels.SortDialog": 1,
                "Components.SortDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\table-dialog.js": {
            "name": "components\\table-dialog.js",
            "modules": {
                "TableDialog": 1
            },
            "classes": {
                "ViewModels.TableDialog": 1,
                "Components.TableDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\table-widget.js": {
            "name": "components\\table-widget.js",
            "modules": {
                "TableWidget": 1
            },
            "classes": {
                "ViewModels.TableWidget": 1,
                "Components.TableWidget": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "components\\workbook-page.js": {
            "name": "components\\workbook-page.js",
            "modules": {
                "WorkbookPage": 1
            },
            "classes": {
                "ViewModels.WorkbookPage": 1,
                "Components.WorkbookPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            }
        },
        "models\\catalog.js": {
            "name": "models\\catalog.js",
            "modules": {
                "Catalog": 1
            },
            "classes": {
                "Catalog": 1
            },
            "fors": {
                "Catalog": 1
            },
            "namespaces": {}
        },
        "models\\data-list-option.js": {
            "name": "models\\data-list-option.js",
            "modules": {
                "DataList": 1
            },
            "classes": {
                "Models.DataListOption": 1
            },
            "fors": {},
            "namespaces": {
                "Models": 1
            }
        },
        "models\\data-service.js": {
            "name": "models\\data-service.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Models.DataService": 1
            },
            "namespaces": {}
        },
        "models\\feather.js": {
            "name": "models\\feather.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Models.Feather": 1,
                "Models.FeatherOverload": 1,
                "Models.FeatherProperty": 1
            },
            "namespaces": {}
        },
        "models\\form.js": {
            "name": "models\\form.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Models.Form": 1,
                "Models.FormAttr": 1,
                "Models.FormAttrColumn": 1
            },
            "namespaces": {}
        },
        "models\\list.js": {
            "name": "models\\list.js",
            "modules": {
                "List": 1
            },
            "classes": {
                "List": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "models\\model.js": {
            "name": "models\\model.js",
            "modules": {
                "Model": 1
            },
            "classes": {
                "Model": 1
            },
            "fors": {
                "Model": 1
            },
            "namespaces": {
                "Models": 1
            }
        },
        "models\\role.js": {
            "name": "models\\role.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Models.RoleMembership": 1
            },
            "namespaces": {}
        },
        "models\\route.js": {
            "name": "models\\route.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Models.Route": 1
            },
            "namespaces": {}
        },
        "models\\script.js": {
            "name": "models\\script.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Models.Script": 1
            },
            "namespaces": {}
        },
        "models\\workbook.js": {
            "name": "models\\workbook.js",
            "modules": {
                "Workbook": 1
            },
            "classes": {
                "Models.Workbook": 1,
                "Models.WorkbookChild": 1,
                "Models.WorkbookDefaultConfig": 1,
                "Models.WorkbookLocalConfig": 1,
                "Models.WorkbookAuthorization": 1
            },
            "fors": {},
            "namespaces": {
                "Models": 1
            }
        },
        "api.js": {
            "name": "api.js",
            "modules": {
                "Core": 1
            },
            "classes": {
                "Models.DataService": 1,
                "Models.Feather": 1,
                "Models.FeatherOverload": 1,
                "Models.FeatherProperty": 1,
                "Models.Form": 1,
                "Models.FormAttr": 1,
                "Models.FormAttrColumn": 1,
                "Models.Object": 1,
                "Models.RoleMembership": 1,
                "Models.Route": 1,
                "Models.Script": 1,
                "Models.Address": 1,
                "Models.BaseCurrency": 1,
                "Models.Comment": 1,
                "Models.Contact": 1,
                "Models.ContactAddress": 1,
                "Models.ContactEmail": 1,
                "Models.ContactPhone": 1,
                "Models.ContactSocialAccount": 1,
                "Models.Country": 1,
                "Models.Currency": 1,
                "Models.CurrencyConversion": 1,
                "Models.CurrencyUnit": 1,
                "Models.CurrencyUnitConversion": 1,
                "Models.Document": 1,
                "Models.FeatherAuthorization": 1,
                "Models.FormTab": 1,
                "Models.Honorific": 1,
                "Models.Kind": 1,
                "Models.Layout": 1,
                "Models.Log": 1,
                "Models.Module": 1,
                "Models.ModuleDependency": 1,
                "Models.RelationSearchColumn": 1,
                "Models.RelationWidget": 1,
                "Models.Role": 1,
                "Models.SocialNetwork": 1,
                "Models.State": 1,
                "Models.Style": 1,
                "Models.Unit": 1,
                "Models.UserAccount": 1
            },
            "fors": {},
            "namespaces": {
                "Models": 1
            }
        },
        "core.js": {
            "name": "core.js",
            "modules": {},
            "classes": {},
            "fors": {
                "f": 1
            },
            "namespaces": {}
        },
        "datasource.js": {
            "name": "datasource.js",
            "modules": {
                "Datasource": 1
            },
            "classes": {
                "Datasource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "property.js": {
            "name": "property.js",
            "modules": {
                "Property": 1
            },
            "classes": {
                "Property": 1
            },
            "fors": {
                "Property": 1
            },
            "namespaces": {}
        },
        "state.js": {
            "name": "state.js",
            "modules": {
                "State": 1
            },
            "classes": {
                "State": 1,
                "State.define": 1
            },
            "fors": {
                "State": 1
            },
            "namespaces": {
                "State": 1
            }
        }
    },
    "modules": {
        "AccountMenu": {
            "name": "AccountMenu",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.AccountMenu": 1,
                "Components.AccountMenu": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\account-menu.js",
            "line": 46
        },
        "AddressRelation": {
            "name": "AddressRelation",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.AddressRelation": 1,
                "Components.AddressRelation": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\address-relation.js",
            "line": 219
        },
        "AutoNumber": {
            "name": "AutoNumber",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.AutoNumber": 1,
                "Components.AutoNumber": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\autonumber.js",
            "line": 223
        },
        "Button": {
            "name": "Button",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.Button": 1,
                "Components.Button": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\button.js",
            "line": 342
        },
        "Checkbox": {
            "name": "Checkbox",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.Checkbox": 1,
                "Components.Checkbox": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\checkbox.js",
            "line": 47
        },
        "ChildFormPage": {
            "name": "ChildFormPage",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.ChildFormPage": 1,
                "Components.ChildFormPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\child-form-page.js",
            "line": 251
        },
        "ChildTable": {
            "name": "ChildTable",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.ChildTable": 1,
                "Components.ChildTable": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\child-table.js",
            "line": 273
        },
        "ContactRelation": {
            "name": "ContactRelation",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.ContactRelation": 1,
                "Components.ContactRelation": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\contact-relation.js",
            "line": 162
        },
        "DataList": {
            "name": "DataList",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.DataList": 1,
                "Components.DataList": 1,
                "Models.DataListOption": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1,
                "Models": 1
            },
            "tag": "module",
            "file": "models\\data-list-option.js",
            "line": 47
        },
        "DataType": {
            "name": "DataType",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.DataType": 1,
                "Components.DataType": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\data-type.js",
            "line": 606
        },
        "Dialog": {
            "name": "Dialog",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.Dialog": 1,
                "Components.Dialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\dialog.js",
            "line": 263
        },
        "FilterDialog": {
            "name": "FilterDialog",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.FilterDialog": 1,
                "Components.FilterDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\filter-dialog.js",
            "line": 472
        },
        "FormDialog": {
            "name": "FormDialog",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.FormDialog": 1,
                "Components.FormDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\form-dialog.js",
            "line": 134
        },
        "FormPage": {
            "name": "FormPage",
            "submodules": {},
            "elements": {},
            "classes": {
                "Models.ObjectAuthorization": 1,
                "ViewModels.FormPage": 1,
                "Components.FormPage": 1
            },
            "fors": {},
            "namespaces": {
                "Models": 1,
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\form-page.js",
            "line": 881
        },
        "FormWidget": {
            "name": "FormWidget",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.FormWidget": 1,
                "Components.FormWidget": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\form-widget.js",
            "line": 444
        },
        "MoneyRelation": {
            "name": "MoneyRelation",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.MoneyRelation": 1,
                "Components.MoneyRelation": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\money-relation.js",
            "line": 362
        },
        "NavigatorMenu": {
            "name": "NavigatorMenu",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.NavigatorMenu": 1,
                "Components.NavigatorMenu": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\navigator-menu.js",
            "line": 184
        },
        "RelationWidget": {
            "name": "RelationWidget",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.RelationWidget": 1,
                "Components.RelationWidget": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\relation-widget.js",
            "line": 461
        },
        "SearchInput": {
            "name": "SearchInput",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.SearchInput": 1,
                "Components.SearchInput": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\search-input.js",
            "line": 186
        },
        "SearchPage": {
            "name": "SearchPage",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.SearchPage": 1,
                "Components.SearchPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\search-page.js",
            "line": 230
        },
        "SettingsPage": {
            "name": "SettingsPage",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.SettingsPage": 1,
                "Components.SettingsPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\settings-page.js",
            "line": 123
        },
        "SortDialog": {
            "name": "SortDialog",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.SortDialog": 1,
                "Components.SortDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\sort-dialog.js",
            "line": 159
        },
        "TableDialog": {
            "name": "TableDialog",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.TableDialog": 1,
                "Components.TableDialog": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\table-dialog.js",
            "line": 502
        },
        "TableWidget": {
            "name": "TableWidget",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.TableWidget": 1,
                "Components.TableWidget": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\table-widget.js",
            "line": 2066
        },
        "WorkbookPage": {
            "name": "WorkbookPage",
            "submodules": {},
            "elements": {},
            "classes": {
                "ViewModels.WorkbookPage": 1,
                "Components.WorkbookPage": 1
            },
            "fors": {},
            "namespaces": {
                "ViewModels": 1,
                "Components": 1
            },
            "tag": "module",
            "file": "components\\workbook-page.js",
            "line": 1437
        },
        "Catalog": {
            "name": "Catalog",
            "submodules": {},
            "elements": {},
            "classes": {
                "Catalog": 1
            },
            "fors": {
                "Catalog": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "models\\catalog.js",
            "line": 125
        },
        "Core": {
            "name": "Core",
            "submodules": {},
            "elements": {},
            "classes": {
                "Models.DataService": 1,
                "Models.Feather": 1,
                "Models.FeatherOverload": 1,
                "Models.FeatherProperty": 1,
                "Models.Form": 1,
                "Models.FormAttr": 1,
                "Models.FormAttrColumn": 1,
                "Models.Object": 1,
                "Models.RoleMembership": 1,
                "Models.Route": 1,
                "Models.Script": 1,
                "Models.Address": 1,
                "Models.BaseCurrency": 1,
                "Models.Comment": 1,
                "Models.Contact": 1,
                "Models.ContactAddress": 1,
                "Models.ContactEmail": 1,
                "Models.ContactPhone": 1,
                "Models.ContactSocialAccount": 1,
                "Models.Country": 1,
                "Models.Currency": 1,
                "Models.CurrencyConversion": 1,
                "Models.CurrencyUnit": 1,
                "Models.CurrencyUnitConversion": 1,
                "Models.Document": 1,
                "Models.FeatherAuthorization": 1,
                "Models.FormTab": 1,
                "Models.Honorific": 1,
                "Models.Kind": 1,
                "Models.Layout": 1,
                "Models.Log": 1,
                "Models.Module": 1,
                "Models.ModuleDependency": 1,
                "Models.RelationSearchColumn": 1,
                "Models.RelationWidget": 1,
                "Models.Role": 1,
                "Models.SocialNetwork": 1,
                "Models.State": 1,
                "Models.Style": 1,
                "Models.Unit": 1,
                "Models.UserAccount": 1,
                "f": 1
            },
            "fors": {
                "Models.DataService": 1,
                "Models.Feather": 1,
                "Models.FeatherOverload": 1,
                "Models.FeatherProperty": 1,
                "Models.Form": 1,
                "Models.FormAttr": 1,
                "Models.FormAttrColumn": 1,
                "Models.Route": 1,
                "Models.Script": 1,
                "f": 1
            },
            "namespaces": {
                "Models": 1
            },
            "tag": "module",
            "file": "api.js",
            "line": 2007
        },
        "List": {
            "name": "List",
            "submodules": {},
            "elements": {},
            "classes": {
                "List": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "models\\list.js",
            "line": 36
        },
        "Model": {
            "name": "Model",
            "submodules": {},
            "elements": {},
            "classes": {
                "Model": 1
            },
            "fors": {
                "Model": 1,
                "Models.RoleMembership": 1
            },
            "namespaces": {
                "Models": 1
            },
            "tag": "module",
            "file": "models\\model.js",
            "line": 268
        },
        "Workbook": {
            "name": "Workbook",
            "submodules": {},
            "elements": {},
            "classes": {
                "Models.Workbook": 1,
                "Models.WorkbookChild": 1,
                "Models.WorkbookDefaultConfig": 1,
                "Models.WorkbookLocalConfig": 1,
                "Models.WorkbookAuthorization": 1
            },
            "fors": {},
            "namespaces": {
                "Models": 1
            },
            "tag": "module",
            "file": "models\\workbook.js",
            "line": 661
        },
        "Datasource": {
            "name": "Datasource",
            "submodules": {},
            "elements": {},
            "classes": {
                "Datasource": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "datasource.js",
            "line": 23
        },
        "Property": {
            "name": "Property",
            "submodules": {},
            "elements": {},
            "classes": {
                "Property": 1
            },
            "fors": {
                "Property": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "property.js",
            "line": 51
        },
        "State": {
            "name": "State",
            "submodules": {},
            "elements": {},
            "classes": {
                "State": 1,
                "State.define": 1
            },
            "fors": {
                "State": 1
            },
            "namespaces": {
                "State": 1
            },
            "tag": "module",
            "file": "state.js",
            "line": 556
        }
    },
    "classes": {
        "ViewModels.AccountMenu": {
            "name": "ViewModels.AccountMenu",
            "shortname": "ViewModels.AccountMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AccountMenu",
            "namespace": "ViewModels",
            "file": "components\\account-menu.js",
            "line": 28,
            "is_constructor": 1
        },
        "Components.AccountMenu": {
            "name": "Components.AccountMenu",
            "shortname": "Components.AccountMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AccountMenu",
            "namespace": "Components",
            "file": "components\\account-menu.js",
            "line": 46,
            "static": 1
        },
        "ViewModels.AddressRelation": {
            "name": "ViewModels.AddressRelation",
            "shortname": "ViewModels.AddressRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AddressRelation",
            "namespace": "ViewModels",
            "file": "components\\address-relation.js",
            "line": 27,
            "description": "Generate view model for address relation.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "parentProprety",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isCell",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "readonly",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.AddressRelation": {
            "name": "Components.AddressRelation",
            "shortname": "Components.AddressRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AddressRelation",
            "namespace": "Components",
            "file": "components\\address-relation.js",
            "line": 219,
            "description": "Address relation component",
            "static": 1
        },
        "ViewModels.AutoNumber": {
            "name": "ViewModels.AutoNumber",
            "shortname": "ViewModels.AutoNumber",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AutoNumber",
            "namespace": "ViewModels",
            "file": "components\\autonumber.js",
            "line": 81,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "parentProprety",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "readonly",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.AutoNumber": {
            "name": "Components.AutoNumber",
            "shortname": "Components.AutoNumber",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "AutoNumber",
            "namespace": "Components",
            "file": "components\\autonumber.js",
            "line": 223,
            "description": "Auto number component",
            "static": 1
        },
        "ViewModels.Button": {
            "name": "ViewModels.Button",
            "shortname": "ViewModels.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Button",
            "namespace": "ViewModels",
            "file": "components\\button.js",
            "line": 28,
            "description": "Generate view model for button.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "label",
                            "description": "Label",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "icon",
                            "description": "Icon name",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onclick",
                            "description": "On click function",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "class",
                            "description": "Class",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style",
                            "description": "Style",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.Button": {
            "name": "Components.Button",
            "shortname": "Components.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Button",
            "namespace": "Components",
            "file": "components\\button.js",
            "line": 342,
            "description": "Button component",
            "static": 1
        },
        "ViewModels.Checkbox": {
            "name": "ViewModels.Checkbox",
            "shortname": "ViewModels.Checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Checkbox",
            "namespace": "ViewModels",
            "file": "components\\checkbox.js",
            "line": 29,
            "description": "Generate view model for checkbox.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Id",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.Checkbox": {
            "name": "Components.Checkbox",
            "shortname": "Components.Checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Checkbox",
            "namespace": "Components",
            "file": "components\\checkbox.js",
            "line": 47,
            "description": "Checkbox component",
            "static": 1
        },
        "ViewModels.ChildFormPage": {
            "name": "ViewModels.ChildFormPage",
            "shortname": "ViewModels.ChildFormPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ChildFormPage",
            "namespace": "ViewModels",
            "file": "components\\child-form-page.js",
            "line": 28,
            "description": "Generate view model for child form page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentProperty",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "form",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "index",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isNew",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "create",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.ChildFormPage": {
            "name": "Components.ChildFormPage",
            "shortname": "Components.ChildFormPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ChildFormPage",
            "namespace": "Components",
            "file": "components\\child-form-page.js",
            "line": 251,
            "description": "Child form page component",
            "static": 1
        },
        "ViewModels.ChildTable": {
            "name": "ViewModels.ChildTable",
            "shortname": "ViewModels.ChildTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ChildTable",
            "namespace": "ViewModels",
            "file": "components\\child-table.js",
            "line": 28,
            "description": "View model for child table used inside forms to present editable lists.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options.models",
                    "description": "List of child models",
                    "type": "Array"
                },
                {
                    "name": "options.feather",
                    "description": "Feather",
                    "type": "String"
                },
                {
                    "name": "options.config",
                    "description": "Column configuration",
                    "type": "Array"
                },
                {
                    "name": "options.height",
                    "description": "Table height setting (optional)",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "Components.ChildTable": {
            "name": "Components.ChildTable",
            "shortname": "Components.ChildTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ChildTable",
            "namespace": "Components",
            "file": "components\\child-table.js",
            "line": 273,
            "description": "Child table component",
            "static": 1
        },
        "ViewModels.ContactRelation": {
            "name": "ViewModels.ContactRelation",
            "shortname": "ViewModels.ContactRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ContactRelation",
            "namespace": "ViewModels",
            "file": "components\\contact-relation.js",
            "line": 28,
            "extends": "ViewModels.RelationWidget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "Parent view-model. Requires\nproperty `relations` returning javascript object to attach relation\nview model to.",
                            "type": "Object"
                        },
                        {
                            "name": "parentProperty",
                            "description": "Name of the relation\nin view model to attached to",
                            "type": "String"
                        },
                        {
                            "name": "valueProperty",
                            "description": "Value property",
                            "type": "String"
                        },
                        {
                            "name": "form",
                            "description": "Form configuration",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "list",
                            "description": "(Search) List configuration",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "isCell",
                            "description": "Use style for cell in table",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "filter",
                            "description": "Filter object used for search",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.ContactRelation": {
            "name": "Components.ContactRelation",
            "shortname": "Components.ContactRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ContactRelation",
            "namespace": "Components",
            "file": "components\\contact-relation.js",
            "line": 162,
            "uses": [
                "Components.RelationWidget"
            ]
        },
        "ViewModels.DataList": {
            "name": "ViewModels.DataList",
            "shortname": "ViewModels.DataList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataList",
            "namespace": "ViewModels",
            "file": "components\\data-list.js",
            "line": 145,
            "description": "View model editor for objects with type `DataList`.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "parentProperty",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.DataList": {
            "name": "Components.DataList",
            "shortname": "Components.DataList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataList",
            "namespace": "Components",
            "file": "components\\data-list.js",
            "line": 290,
            "description": "Editor component for objects with format `DataList`.",
            "static": 1
        },
        "ViewModels.DataType": {
            "name": "ViewModels.DataType",
            "shortname": "ViewModels.DataType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataType",
            "namespace": "ViewModels",
            "file": "components\\data-type.js",
            "line": 90,
            "description": "View model editor for data type selction.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "parentProperty",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isOverload",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.DataType": {
            "name": "Components.DataType",
            "shortname": "Components.DataType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataType",
            "namespace": "Components",
            "file": "components\\data-type.js",
            "line": 606,
            "description": "Editor component for feather property type.",
            "static": 1
        },
        "ViewModels.Dialog": {
            "name": "ViewModels.Dialog",
            "shortname": "ViewModels.Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Dialog",
            "namespace": "ViewModels",
            "file": "components\\dialog.js",
            "line": 28,
            "description": "View model for dialog.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "icon",
                            "description": "Dialog icon",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "title",
                            "description": "Dialog title",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "message",
                            "description": "Text message",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "onclickOk",
                            "description": "Callback to execute on `Ok` clicked",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onclickCancel",
                            "description": "Callback to execute on `Cancel`\nclicked",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.Dialog": {
            "name": "Components.Dialog",
            "shortname": "Components.Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Components.FilterDialog",
                "Components.FormDialog",
                "Components.SortDialog",
                "Components.TableDialog"
            ],
            "module": "Dialog",
            "namespace": "Components",
            "file": "components\\dialog.js",
            "line": 263,
            "description": "Dialog component",
            "static": 1
        },
        "ViewModels.FilterDialog": {
            "name": "ViewModels.FilterDialog",
            "shortname": "ViewModels.FilterDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FilterDialog",
            "namespace": "ViewModels",
            "file": "components\\filter-dialog.js",
            "line": 28,
            "description": "View model for filter and sort dialog.",
            "is_constructor": 1,
            "extends": "ViewModels.TableDialog",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "propertyName",
                            "description": "Filter property being modified",
                            "type": "Array"
                        },
                        {
                            "name": "attrs",
                            "description": "Attributes",
                            "type": "Array"
                        },
                        {
                            "name": "list",
                            "description": "Model list",
                            "type": "Array"
                        },
                        {
                            "name": "filter",
                            "description": "Filter property",
                            "type": "Function"
                        }
                    ]
                }
            ]
        },
        "Components.FilterDialog": {
            "name": "Components.FilterDialog",
            "shortname": "Components.FilterDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FilterDialog",
            "namespace": "Components",
            "file": "components\\filter-dialog.js",
            "line": 472,
            "description": "Filter dialog component",
            "static": 1,
            "uses": [
                "Components.Dialog"
            ]
        },
        "ViewModels.FormDialog": {
            "name": "ViewModels.FormDialog",
            "shortname": "ViewModels.FormDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormDialog",
            "namespace": "ViewModels",
            "file": "components\\form-dialog.js",
            "line": 28,
            "is_constructor": 1,
            "extends": "ViewModels.Dialog"
        },
        "Components.FormDialog": {
            "name": "Components.FormDialog",
            "shortname": "Components.FormDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormDialog",
            "namespace": "Components",
            "file": "components\\form-dialog.js",
            "line": 134,
            "description": "Form dialog component",
            "static": 1,
            "uses": [
                "Components.Dialog"
            ]
        },
        "Models.ObjectAuthorization": {
            "name": "Models.ObjectAuthorization",
            "shortname": "Models.ObjectAuthorization",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormPage",
            "namespace": "Models",
            "file": "components\\form-page.js",
            "line": 104,
            "description": "Model for handling object authorization",
            "static": 1,
            "extends": "Model"
        },
        "ViewModels.FormPage": {
            "name": "ViewModels.FormPage",
            "shortname": "ViewModels.FormPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormPage",
            "namespace": "ViewModels",
            "file": "components\\form-page.js",
            "line": 462,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "feather",
                            "description": "Feather name",
                            "type": "String"
                        },
                        {
                            "name": "form",
                            "description": "Form id",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "config",
                            "description": "Layout configuration",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "receiever",
                            "description": "Receiver id to send back changes",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isNew",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "create",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "index",
                            "description": "",
                            "type": "Integer",
                            "optional": true
                        },
                        {
                            "name": "key",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isNewWindow",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.FormPage": {
            "name": "Components.FormPage",
            "shortname": "Components.FormPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormPage",
            "namespace": "Components",
            "file": "components\\form-page.js",
            "line": 881,
            "static": 1
        },
        "ViewModels.FormWidget": {
            "name": "ViewModels.FormWidget",
            "shortname": "ViewModels.FormWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormWidget",
            "namespace": "ViewModels",
            "file": "components\\form-widget.js",
            "line": 316,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "config",
                            "description": "Layout configuration",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "focus",
                                    "description": "Focus attribute",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "containerId",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isScrollable",
                            "description": "",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "outsideElementIds",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.FormWidget": {
            "name": "Components.FormWidget",
            "shortname": "Components.FormWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "FormWidget",
            "namespace": "Components",
            "file": "components\\form-widget.js",
            "line": 444,
            "static": 1
        },
        "ViewModels.MoneyRelation": {
            "name": "ViewModels.MoneyRelation",
            "shortname": "ViewModels.MoneyRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MoneyRelation",
            "namespace": "ViewModels",
            "file": "components\\money-relation.js",
            "line": 38,
            "description": "View model editor for properties with format `Money`.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "parentProperty",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "isCell",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "showCurrency",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "disableCurrency",
                            "description": "",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.MoneyRelation": {
            "name": "Components.MoneyRelation",
            "shortname": "Components.MoneyRelation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MoneyRelation",
            "namespace": "Components",
            "file": "components\\money-relation.js",
            "line": 362,
            "description": "Editor component for properties with format `Money`.",
            "static": 1
        },
        "ViewModels.NavigatorMenu": {
            "name": "ViewModels.NavigatorMenu",
            "shortname": "ViewModels.NavigatorMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "NavigatorMenu",
            "namespace": "ViewModels",
            "file": "components\\navigator-menu.js",
            "line": 65,
            "description": "Menu navigator view model. Menu state is managed globally.",
            "is_constructor": 1
        },
        "Components.NavigatorMenu": {
            "name": "Components.NavigatorMenu",
            "shortname": "Components.NavigatorMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "NavigatorMenu",
            "namespace": "Components",
            "file": "components\\navigator-menu.js",
            "line": 184,
            "static": 1
        },
        "ViewModels.RelationWidget": {
            "name": "ViewModels.RelationWidget",
            "shortname": "ViewModels.RelationWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "RelationWidget",
            "namespace": "ViewModels",
            "file": "components\\relation-widget.js",
            "line": 42,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parentViewModel",
                            "description": "Parent view-model. Required\nproperty \"relations\" returning javascript object to attach relation\nview model to.",
                            "type": "Object"
                        },
                        {
                            "name": "parentProperty",
                            "description": "Name of the relation\nin view model to attached to",
                            "type": "String"
                        },
                        {
                            "name": "valueProperty",
                            "description": "Value property",
                            "type": "String"
                        },
                        {
                            "name": "form",
                            "description": "Form configuration",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "list",
                            "description": "(Search) List configuration",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "isCell",
                            "description": "Use style for cell in table",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "filter",
                            "description": "Filter object used for search",
                            "type": "Filter",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.RelationWidget": {
            "name": "Components.RelationWidget",
            "shortname": "Components.RelationWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Components.ContactRelation"
            ],
            "module": "RelationWidget",
            "namespace": "Components",
            "file": "components\\relation-widget.js",
            "line": 461,
            "static": 1
        },
        "ViewModels.SearchInput": {
            "name": "ViewModels.SearchInput",
            "shortname": "ViewModels.SearchInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SearchInput",
            "namespace": "ViewModels",
            "file": "components\\search-input.js",
            "line": 29,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "refresh",
                            "description": "Refresh function",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.SearchInput": {
            "name": "Components.SearchInput",
            "shortname": "Components.SearchInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SearchInput",
            "namespace": "Components",
            "file": "components\\search-input.js",
            "line": 186,
            "description": "Search component.",
            "static": 1
        },
        "ViewModels.SearchPage": {
            "name": "ViewModels.SearchPage",
            "shortname": "ViewModels.SearchPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SearchPage",
            "namespace": "ViewModels",
            "file": "components\\search-page.js",
            "line": 28,
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "feather",
                            "description": "Feather name",
                            "type": "String"
                        },
                        {
                            "name": "config",
                            "description": "Column configuration",
                            "type": "Object"
                        },
                        {
                            "name": "receiever",
                            "description": "Receiver id to send back selection",
                            "type": "String"
                        }
                    ]
                }
            ]
        },
        "Components.SearchPage": {
            "name": "Components.SearchPage",
            "shortname": "Components.SearchPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SearchPage",
            "namespace": "Components",
            "file": "components\\search-page.js",
            "line": 230,
            "description": "Search component.",
            "static": 1
        },
        "ViewModels.SettingsPage": {
            "name": "ViewModels.SettingsPage",
            "shortname": "ViewModels.SettingsPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SettingsPage",
            "namespace": "ViewModels",
            "file": "components\\settings-page.js",
            "line": 28,
            "description": "View model for settings page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "settings",
                            "description": "",
                            "type": "Object"
                        }
                    ]
                }
            ]
        },
        "Components.SettingsPage": {
            "name": "Components.SettingsPage",
            "shortname": "Components.SettingsPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SettingsPage",
            "namespace": "Components",
            "file": "components\\settings-page.js",
            "line": 123,
            "description": "Settings page component",
            "static": 1
        },
        "ViewModels.SortDialog": {
            "name": "ViewModels.SortDialog",
            "shortname": "ViewModels.SortDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SortDialog",
            "namespace": "ViewModels",
            "file": "components\\sort-dialog.js",
            "line": 28,
            "description": "View model for sort dialog.",
            "is_constructor": 1,
            "extends": "ViewModels.FilterDialog",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Attributes",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "list",
                            "description": "Model list",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "filter",
                            "description": "Filter property",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Components.SortDialog": {
            "name": "Components.SortDialog",
            "shortname": "Components.SortDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SortDialog",
            "namespace": "Components",
            "file": "components\\sort-dialog.js",
            "line": 159,
            "description": "Sort dialog component",
            "static": 1,
            "uses": [
                "Components.Dialog"
            ]
        },
        "ViewModels.TableDialog": {
            "name": "ViewModels.TableDialog",
            "shortname": "ViewModels.TableDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TableDialog",
            "namespace": "ViewModels",
            "file": "components\\table-dialog.js",
            "line": 29,
            "description": "View model for sort dialog.",
            "is_constructor": 1,
            "extends": "ViewModels.Dialog",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "propertyName",
                            "description": "Filter property being modified",
                            "type": "Array"
                        },
                        {
                            "name": "attrs",
                            "description": "Attributes",
                            "type": "Array"
                        },
                        {
                            "name": "list",
                            "description": "Model list",
                            "type": "Array"
                        },
                        {
                            "name": "feather",
                            "description": "Feather",
                            "type": "Array"
                        },
                        {
                            "name": "filter",
                            "description": "Filter property",
                            "type": "Property"
                        }
                    ]
                }
            ]
        },
        "Components.TableDialog": {
            "name": "Components.TableDialog",
            "shortname": "Components.TableDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TableDialog",
            "namespace": "Components",
            "file": "components\\table-dialog.js",
            "line": 502,
            "description": "Table dialog component",
            "static": 1,
            "uses": [
                "Components.Dialog"
            ]
        },
        "ViewModels.TableWidget": {
            "name": "ViewModels.TableWidget",
            "shortname": "ViewModels.TableWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TableWidget",
            "namespace": "ViewModels",
            "file": "components\\table-widget.js",
            "line": 745,
            "description": "View model for viewing and editing model lists.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options.actions",
                    "description": "Actions",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "options.feather",
                    "description": "Feather",
                    "type": "Object|String"
                },
                {
                    "name": "options.config",
                    "description": "Configuration",
                    "type": "Object"
                },
                {
                    "name": "options.models",
                    "description": "Array of models",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "options.height",
                    "description": "Fixed height. If none automatic",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options.containerId",
                    "description": "Container id for automatic resize",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options.footerId",
                    "description": "Footer id for automatic resize",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "Components.TableWidget": {
            "name": "Components.TableWidget",
            "shortname": "Components.TableWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TableWidget",
            "namespace": "Components",
            "file": "components\\table-widget.js",
            "line": 2066,
            "static": 1
        },
        "ViewModels.WorkbookPage": {
            "name": "ViewModels.WorkbookPage",
            "shortname": "ViewModels.WorkbookPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "WorkbookPage",
            "namespace": "ViewModels",
            "file": "components\\workbook-page.js",
            "line": 531,
            "description": "Define workbook view model",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "workbook",
                            "description": "name",
                            "type": "String"
                        },
                        {
                            "name": "key",
                            "description": "worksheet name",
                            "type": "String"
                        }
                    ]
                }
            ]
        },
        "Components.WorkbookPage": {
            "name": "Components.WorkbookPage",
            "shortname": "Components.WorkbookPage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "WorkbookPage",
            "namespace": "Components",
            "file": "components\\workbook-page.js",
            "line": 1437,
            "description": "Define workbook component.",
            "static": 1
        },
        "Catalog": {
            "name": "Catalog",
            "shortname": "Catalog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Catalog",
            "namespace": "",
            "file": "models\\catalog.js",
            "line": 125,
            "description": "Invoke catalog settings as an object."
        },
        "Models.DataListOption": {
            "name": "Models.DataListOption",
            "shortname": "Models.DataListOption",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DataList",
            "namespace": "Models",
            "file": "models\\data-list-option.js",
            "line": 47,
            "description": "Options for data list.",
            "static": 1,
            "extends": "Model"
        },
        "Models.DataService": {
            "name": "Models.DataService",
            "shortname": "Models.DataService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 605,
            "static": 1,
            "extends": "Models.Script"
        },
        "Models.Feather": {
            "name": "Models.Feather",
            "shortname": "Models.Feather",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 646,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.FeatherOverload": {
            "name": "Models.FeatherOverload",
            "shortname": "Models.FeatherOverload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 822,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.FeatherProperty": {
            "name": "Models.FeatherProperty",
            "shortname": "Models.FeatherProperty",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 938,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Form": {
            "name": "Models.Form",
            "shortname": "Models.Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1121,
            "static": 1,
            "extends": "Models.Layout"
        },
        "Models.FormAttr": {
            "name": "Models.FormAttr",
            "shortname": "Models.FormAttr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1154,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.FormAttrColumn": {
            "name": "Models.FormAttrColumn",
            "shortname": "Models.FormAttrColumn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1263,
            "static": 1,
            "extends": "Models.Object"
        },
        "List": {
            "name": "List",
            "shortname": "List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "List",
            "namespace": "",
            "file": "models\\list.js",
            "line": 36,
            "static": 1
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "models\\model.js",
            "line": 268,
            "description": "A data persistence object based on a definition defined by a `feather`.",
            "static": 1
        },
        "Models.Object": {
            "name": "Models.Object",
            "shortname": "Models.Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1536,
            "static": 1,
            "extends": "Model"
        },
        "Models.RoleMembership": {
            "name": "Models.RoleMembership",
            "shortname": "Models.RoleMembership",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1735,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Route": {
            "name": "Models.Route",
            "shortname": "Models.Route",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1759,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Script": {
            "name": "Models.Script",
            "shortname": "Models.Script",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1792,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Workbook": {
            "name": "Models.Workbook",
            "shortname": "Models.Workbook",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Workbook",
            "namespace": "Models",
            "file": "models\\workbook.js",
            "line": 219,
            "description": "Model with special rest API handling for Workbook saves.",
            "static": 1,
            "extends": "Model"
        },
        "Models.WorkbookChild": {
            "name": "Models.WorkbookChild",
            "shortname": "WorkbookChild",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Workbook",
            "namespace": "Models",
            "file": "models\\workbook.js",
            "line": 461,
            "description": "Workbook child configuration model.",
            "static": 1,
            "extends": "Model"
        },
        "Models.WorkbookDefaultConfig": {
            "name": "Models.WorkbookDefaultConfig",
            "shortname": "WorkbookDefaultConfig",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Workbook",
            "namespace": "Models",
            "file": "models\\workbook.js",
            "line": 652,
            "extends": "Models.WorkbookChild"
        },
        "Models.WorkbookLocalConfig": {
            "name": "Models.WorkbookLocalConfig",
            "shortname": "WorkbookLocalConfig",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Workbook",
            "namespace": "Models",
            "file": "models\\workbook.js",
            "line": 656,
            "extends": "Models.WorkbookChild"
        },
        "Models.WorkbookAuthorization": {
            "name": "Models.WorkbookAuthorization",
            "shortname": "WorkbookAuthorization",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Workbook",
            "namespace": "Models",
            "file": "models\\workbook.js",
            "line": 661,
            "description": "Workbook authorization definition.",
            "static": 1,
            "extends": "Model"
        },
        "Models.Address": {
            "name": "Models.Address",
            "shortname": "Models.Address",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 4,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.BaseCurrency": {
            "name": "Models.BaseCurrency",
            "shortname": "Models.BaseCurrency",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 75,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Comment": {
            "name": "Models.Comment",
            "shortname": "Models.Comment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 101,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Contact": {
            "name": "Models.Contact",
            "shortname": "Models.Contact",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 118,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.ContactAddress": {
            "name": "Models.ContactAddress",
            "shortname": "Models.ContactAddress",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 262,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.ContactEmail": {
            "name": "Models.ContactEmail",
            "shortname": "Models.ContactEmail",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 295,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.ContactPhone": {
            "name": "Models.ContactPhone",
            "shortname": "Models.ContactPhone",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 341,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.ContactSocialAccount": {
            "name": "Models.ContactSocialAccount",
            "shortname": "Models.ContactSocialAccount",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 387,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Country": {
            "name": "Models.Country",
            "shortname": "Models.Country",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 420,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Currency": {
            "name": "Models.Currency",
            "shortname": "Models.Currency",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 444,
            "static": 1,
            "extends": "Models.Kind"
        },
        "Models.CurrencyConversion": {
            "name": "Models.CurrencyConversion",
            "shortname": "Models.CurrencyConversion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 504,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.CurrencyUnit": {
            "name": "Models.CurrencyUnit",
            "shortname": "Models.CurrencyUnit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 548,
            "static": 1,
            "extends": "Models.Unit"
        },
        "Models.CurrencyUnitConversion": {
            "name": "Models.CurrencyUnitConversion",
            "shortname": "Models.CurrencyUnitConversion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 572,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Document": {
            "name": "Models.Document",
            "shortname": "Models.Document",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 620,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.FeatherAuthorization": {
            "name": "Models.FeatherAuthorization",
            "shortname": "Models.FeatherAuthorization",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 760,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.FormTab": {
            "name": "Models.FormTab",
            "shortname": "Models.FormTab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1332,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Honorific": {
            "name": "Models.Honorific",
            "shortname": "Models.Honorific",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1356,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Kind": {
            "name": "Models.Kind",
            "shortname": "Models.Kind",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1371,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Layout": {
            "name": "Models.Layout",
            "shortname": "Models.Layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1404,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Log": {
            "name": "Models.Log",
            "shortname": "Models.Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1455,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.Module": {
            "name": "Models.Module",
            "shortname": "Models.Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1488,
            "static": 1,
            "extends": "Models.Script"
        },
        "Models.ModuleDependency": {
            "name": "Models.ModuleDependency",
            "shortname": "Models.ModuleDependency",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1512,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.RelationSearchColumn": {
            "name": "Models.RelationSearchColumn",
            "shortname": "Models.RelationSearchColumn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1636,
            "static": 1,
            "extends": "Models.Object"
        },
        "Models.RelationWidget": {
            "name": "Models.RelationWidget",
            "shortname": "Models.RelationWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1669,
            "static": 1,
            "extends": "Models.Layout"
        },
        "Models.Role": {
            "name": "Models.Role",
            "shortname": "Models.Role",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1711,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.SocialNetwork": {
            "name": "Models.SocialNetwork",
            "shortname": "Models.SocialNetwork",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1818,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.State": {
            "name": "Models.State",
            "shortname": "Models.State",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1853,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Style": {
            "name": "Models.Style",
            "shortname": "Models.Style",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1877,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.Unit": {
            "name": "Models.Unit",
            "shortname": "Models.Unit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 1972,
            "static": 1,
            "extends": "Models.Document"
        },
        "Models.UserAccount": {
            "name": "Models.UserAccount",
            "shortname": "Models.UserAccount",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "Models",
            "file": "api.js",
            "line": 2007,
            "static": 1,
            "extends": "Models.Role"
        },
        "f": {
            "name": "f",
            "shortname": "f",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": ""
        },
        "Datasource": {
            "name": "Datasource",
            "shortname": "Datasource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Datasource",
            "namespace": "",
            "file": "datasource.js",
            "line": 23,
            "static": 1
        },
        "Property": {
            "name": "Property",
            "shortname": "Property",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Property",
            "namespace": "",
            "file": "property.js",
            "line": 51,
            "description": "A get/set function.\nIncludes state handling for events.\n\n__Example:__\n\n    let p = f.prop();\n\n    p() //\n    p(\"foo\") // foo\n    p() // foo\n\n    // Disable the property\n    p.state().send(\"disable\");\n    p(\"bar\") // foo\n    p() // foo\n\n    // Enable the property\n    p.state().send(\"enable\");\n    p(\"bar\") // bar\n    p() // bar\n\n    // Respond to change events\n    p.state().resolve(\"/Changing\").enter(function () {\n        let msg = (\n            \"Value was \\\"\" + p.oldValue() + \"\\\", \" +\n            \"will be \\\"\" + p.newValue() + \".\\\"\"\n        );\n        console.log(msg);\n    })\n    p(\"Hello World\"); // Value was \"bar\", will be \"Hello World.\"\n                      // Hello World\n\n    // Silence change events\n    p.send(\"silence\");\n    p(\"Foo bar)\" // Foo bar\n\n    // Enable change events again\n    p.send(\"report\");\n    p(\"Moo\") // Value was \"Foo bar\", will be \"Moo.\"\n             // Moo"
        },
        "State": {
            "name": "State",
            "shortname": "State",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "State",
            "namespace": "",
            "file": "state.js",
            "line": 505,
            "description": "The `State` constructor.\n\nThrows `Error` if both the `concurrent` and `H` options are set.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "A string containing the name of the state.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "An object containing zero or more of the following\nkeys (default:`null`).",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "concurrent",
                            "description": "Makes the state's substates concurrent.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "H",
                            "description": "Causes the state to keep track of its history\nstate. Set to `true` to track just the history of this state\nor `'*'` to track the history of all substates.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "f",
                    "description": "function to invoke in the context of the newly\ncreated state (default: `null`)",
                    "type": "Function",
                    "optional": true
                }
            ]
        },
        "State.define": {
            "name": "State.define",
            "shortname": "State.define",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "State",
            "namespace": "State",
            "file": "state.js",
            "line": 556,
            "description": "Convenience method for creating a new statechart. Simply creates a\nroot state and invokes the given function in the context of that state.",
            "example": [
                "\n    let sc = State.define({concurrent: true}, function () {\n        this.state(\"a\");\n        this.state(\"b\");\n        this.state(\"c\");\n    });"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "opts",
                    "description": "An object of options to pass the to\nthe `State` constructor or function object (default: `null`).",
                    "type": "Object | Function",
                    "optional": true
                },
                {
                    "name": "f",
                    "description": "A function object to invoke in the context of the\nnewly created root state (default: `null`).",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Newly created root state.",
                "type": "State"
            }
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "components\\account-menu.js",
            "line": 36,
            "itemtype": "method",
            "name": "showMenuAccount",
            "class": "ViewModels.AccountMenu",
            "module": "AccountMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\account-menu.js",
            "line": 52,
            "itemtype": "method",
            "name": "oninit",
            "class": "Components.AccountMenu",
            "module": "AccountMenu",
            "namespace": "Components"
        },
        {
            "file": "components\\account-menu.js",
            "line": 59,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.AccountMenu",
            "module": "AccountMenu",
            "namespace": "Components"
        },
        {
            "file": "components\\address-relation.js",
            "line": 44,
            "description": "Address dialog view model.",
            "itemtype": "method",
            "name": "addressDialog",
            "params": [
                {
                    "name": "formDialog",
                    "description": "",
                    "type": "ViewModels.FormDialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FormDialog"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 51,
            "description": "Clear button view model.",
            "itemtype": "method",
            "name": "buttonClear",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 58,
            "description": "Edit dialog content.",
            "itemtype": "method",
            "name": "content",
            "params": [
                {
                    "name": "isCell",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 90,
            "itemtype": "method",
            "name": "countries",
            "return": {
                "description": "Array of geographical country names",
                "type": "Array"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 105,
            "itemtype": "method",
            "name": "doClear",
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 112,
            "description": "Show edit dialog.",
            "itemtype": "method",
            "name": "doEdit",
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 134,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 140,
            "itemtype": "method",
            "name": "isCell",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 146,
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "Parent model",
                "type": "Model"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 151,
            "itemtype": "method",
            "name": "onkeydown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 162,
            "itemtype": "method",
            "name": "states",
            "return": {
                "description": "Array of geographical state names",
                "type": "Array"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 174,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.AddressRelation",
            "module": "AddressRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\address-relation.js",
            "line": 227,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "parentViewModel",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "parentProprety",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "id",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "isCell",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "style",
                                    "description": "Style",
                                    "type": "Object",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.AddressRelation",
            "module": "AddressRelation",
            "namespace": "Components"
        },
        {
            "file": "components\\address-relation.js",
            "line": 252,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.AddressRelation",
            "module": "AddressRelation",
            "namespace": "Components"
        },
        {
            "file": "components\\autonumber.js",
            "line": 95,
            "description": "Edit dialog view model.",
            "itemtype": "method",
            "name": "authonumberDialog",
            "params": [
                {
                    "name": "formDialog",
                    "description": "",
                    "type": "ViewModels.FormDialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FormDialog"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 102,
            "description": "Clear button view model.",
            "itemtype": "method",
            "name": "buttonClear",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 109,
            "description": "Edit button view model.",
            "itemtype": "method",
            "name": "buttonEdit",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 116,
            "description": "Edit dialog content.",
            "itemtype": "method",
            "name": "content",
            "params": [
                {
                    "name": "isCell",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 135,
            "itemtype": "method",
            "name": "doClear",
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 142,
            "description": "Show edit dialog.",
            "itemtype": "method",
            "name": "doEdit",
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 168,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 174,
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "Parent model",
                "type": "Model"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 179,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.AutoNumber",
            "module": "AutoNumber",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\autonumber.js",
            "line": 231,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "parentViewModel",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "parentProprety",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "id",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "style",
                                    "description": "Style",
                                    "type": "Object",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.AutoNumber",
            "module": "AutoNumber",
            "namespace": "Components"
        },
        {
            "file": "components\\autonumber.js",
            "line": 254,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.AutoNumber",
            "module": "AutoNumber",
            "namespace": "Components"
        },
        {
            "file": "components\\button.js",
            "line": 56,
            "itemtype": "method",
            "name": "activate",
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 62,
            "itemtype": "method",
            "name": "isDisabled",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 69,
            "itemtype": "method",
            "name": "deactivate",
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 75,
            "itemtype": "method",
            "name": "disable",
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 81,
            "itemtype": "method",
            "name": "enable",
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 87,
            "itemtype": "method",
            "name": "class",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 94,
            "itemtype": "method",
            "name": "hidden",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 101,
            "itemtype": "method",
            "name": "hide",
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 107,
            "itemtype": "method",
            "name": "hotKey",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "key",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 132,
            "itemtype": "method",
            "name": "icon",
            "params": [
                {
                    "name": "icon",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 138,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 144,
            "itemtype": "method",
            "name": "isPrimary",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 158,
            "itemtype": "method",
            "name": "label",
            "params": [
                {
                    "name": "label",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 191,
            "itemtype": "method",
            "name": "onclick",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 197,
            "itemtype": "method",
            "name": "onkeydown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 213,
            "itemtype": "method",
            "name": "primaryClass",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 220,
            "itemtype": "method",
            "name": "show",
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 226,
            "itemtype": "method",
            "name": "state",
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 233,
            "itemtype": "method",
            "name": "style",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 240,
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Button",
            "module": "Button",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\button.js",
            "line": 350,
            "description": "Pass either `vnode.attrs.viewModel` or `vnode.attrs` with options\nto build view model.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "icon",
                                    "description": "Icon name",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "onclick",
                                    "description": "On click function",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "class",
                                    "description": "Class",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "style",
                                    "description": "Style",
                                    "type": "Object",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.Button",
            "module": "Button",
            "namespace": "Components"
        },
        {
            "file": "components\\button.js",
            "line": 369,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.Button",
            "module": "Button",
            "namespace": "Components"
        },
        {
            "file": "components\\checkbox.js",
            "line": 55,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "id",
                                    "description": "Id",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "onclick",
                                    "description": "On click handler",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "onCreate",
                                    "description": "On create handler",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "onRemove",
                                    "description": "On remove handler",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "value",
                                    "description": "Value",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "title",
                                    "description": "Title",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "Read only flag",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "style",
                                    "description": "Style",
                                    "type": "Object",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.Checkbox",
            "module": "Checkbox",
            "namespace": "Components"
        },
        {
            "file": "components\\checkbox.js",
            "line": 73,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "label",
                                    "description": "Label",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "onclick",
                                    "description": "On click handler",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "onCreate",
                                    "description": "On create handler",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "onRemove",
                                    "description": "On remove handler",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "value",
                                    "description": "Value",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "title",
                                    "description": "Title",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "Read only flag",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "style",
                                    "description": "Style",
                                    "type": "Object",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.Checkbox",
            "module": "Checkbox",
            "namespace": "Components"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 68,
            "description": "Done button view model.",
            "itemtype": "method",
            "name": "buttonDone",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 75,
            "description": "Previous button view model.",
            "itemtype": "method",
            "name": "buttonPrevious",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 82,
            "description": "Next button view model.",
            "itemtype": "method",
            "name": "buttonNext",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 89,
            "description": "New button view model.",
            "itemtype": "method",
            "name": "buttonNew",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 96,
            "description": "Open a detail record.",
            "itemtype": "method",
            "name": "doChildOpen",
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 117,
            "itemtype": "method",
            "name": "doDone",
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 125,
            "description": "Navigate to previous model in parent.",
            "itemtype": "method",
            "name": "doNext",
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 134,
            "description": "Advance to next model in parent.",
            "itemtype": "method",
            "name": "doNext",
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 143,
            "description": "Create a new model and navigate to it.",
            "itemtype": "method",
            "name": "doNew",
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 153,
            "itemtype": "method",
            "name": "formWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.FormWidget"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FormWidget"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 159,
            "description": "Data model.",
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 167,
            "description": "Dialog to report server side event errors.",
            "itemtype": "method",
            "name": "sseErrorDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 185,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 259,
            "description": "Pass either `vnode.attrs.viewModel` or `vnode.attrs` with options\nto build view model.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "parentProperty",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "form",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "index",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "isNew",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "create",
                                    "description": "",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "Components"
        },
        {
            "file": "components\\child-form-page.js",
            "line": 280,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.ChildFormPage",
            "module": "ChildFormPage",
            "namespace": "Components"
        },
        {
            "file": "components\\child-table.js",
            "line": 63,
            "description": "Add button view model.",
            "itemtype": "method",
            "name": "buttonAdd",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 71,
            "description": "Open button view model.",
            "itemtype": "method",
            "name": "buttonOpen",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 79,
            "description": "Remove button view model.",
            "itemtype": "method",
            "name": "buttonDone",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 87,
            "description": "Undo button view model.",
            "itemtype": "method",
            "name": "buttonUndo",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 95,
            "itemtype": "method",
            "name": "childForm",
            "params": [
                {
                    "name": "page",
                    "description": "",
                    "type": "ViewModels.ChildFormPage"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.ChildFormPage"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 102,
            "description": "Open the child form page.",
            "itemtype": "method",
            "name": "doChildOpen",
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 132,
            "description": "Table widget view model.",
            "itemtype": "method",
            "name": "tableWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.TableWidget"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.TableWidget"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 140,
            "description": "Parent view model.",
            "itemtype": "method",
            "name": "parentViewModel",
            "params": [
                {
                    "name": "viewModel",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View model",
                "type": "Object"
            },
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 148,
            "itemtype": "method",
            "name": "refresh",
            "class": "ViewModels.ChildTable",
            "module": "ChildTable",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\child-table.js",
            "line": 281,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "parentViewModel",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "parentProprety",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "height",
                                    "description": "Height",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.ChildTable",
            "module": "ChildTable",
            "namespace": "Components"
        },
        {
            "file": "components\\child-table.js",
            "line": 332,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.ChildTable",
            "module": "ChildTable",
            "namespace": "Components"
        },
        {
            "file": "components\\data-list.js",
            "line": 161,
            "itemtype": "method",
            "name": "buttonEdit",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 167,
            "itemtype": "method",
            "name": "dataListDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 173,
            "itemtype": "method",
            "name": "content",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 185,
            "description": "Open edit dialog.",
            "itemtype": "method",
            "name": "doEdit",
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 219,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 225,
            "description": "Array of key/value pair models.",
            "itemtype": "method",
            "name": "models",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 231,
            "description": "Parent model property.",
            "itemtype": "method",
            "name": "prop",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 238,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 244,
            "description": "Table editor view model for dialog;",
            "itemtype": "method",
            "name": "table",
            "params": [
                {
                    "name": "viewModel",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.DataList",
            "module": "DataList",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-list.js",
            "line": 297,
            "itemtype": "method",
            "name": "onint",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "parentViewModel",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "parentProperty",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "id",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "style",
                                    "description": "",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.DataList",
            "module": "DataList",
            "namespace": "Components"
        },
        {
            "file": "components\\data-list.js",
            "line": 319,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "class": "Components.DataList",
            "module": "DataList",
            "namespace": "Components"
        },
        {
            "file": "components\\data-type.js",
            "line": 105,
            "itemtype": "method",
            "name": "buttonAdd",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 111,
            "itemtype": "method",
            "name": "buttonEdit",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 117,
            "itemtype": "method",
            "name": "buttonRemove",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 123,
            "description": "Editor dialog view model.",
            "itemtype": "method",
            "name": "dataTypeDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 130,
            "description": "Parent attribute, if applicable.",
            "itemtype": "method",
            "name": "childOf",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 144,
            "description": "Array of feather as key value objects for selector options.",
            "itemtype": "method",
            "name": "feathers",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 160,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 166,
            "description": "Flag special handling if overload instance in a feather.",
            "itemtype": "method",
            "name": "isOverload",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 173,
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 178,
            "itemtype": "method",
            "name": "onchange",
            "params": [
                {
                    "name": "event,",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "showDialog",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 209,
            "itemtype": "method",
            "name": "onchangeDialogChildOf",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 234,
            "itemtype": "method",
            "name": "onchangeDialogType",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 241,
            "itemtype": "method",
            "name": "onchangeDialogRelation",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 263,
            "description": "Adds selected available properties to relation.",
            "itemtype": "method",
            "name": "propertyAdd",
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 276,
            "description": "Removes selected relation properties from relation.",
            "itemtype": "method",
            "name": "propertyRemove",
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 291,
            "description": "All potential properties for relation.",
            "itemtype": "method",
            "name": "properties",
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 307,
            "description": "Available properties for relation.",
            "itemtype": "method",
            "name": "propertiesAvailable",
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 319,
            "description": "Properties assigned to relation.",
            "itemtype": "method",
            "name": "propertiesSelected",
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 337,
            "description": "Feather used as relation type.",
            "itemtype": "method",
            "name": "relation",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 351,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 357,
            "description": "Parent property.",
            "itemtype": "method",
            "name": "prop",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 364,
            "itemtype": "method",
            "name": "propsAvailableWidget",
            "params": [
                {
                    "name": "View",
                    "description": "model",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 370,
            "itemtype": "method",
            "name": "propsSelectedWidget",
            "params": [
                {
                    "name": "View",
                    "description": "model",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 376,
            "itemtype": "method",
            "name": "type",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 389,
            "description": "Array of available types.",
            "itemtype": "method",
            "name": "types",
            "params": [
                {
                    "name": "types",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 404,
            "description": "Updates `prop` with selected value.",
            "itemtype": "method",
            "name": "update",
            "class": "ViewModels.DataType",
            "module": "DataType",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\data-type.js",
            "line": 613,
            "itemtype": "method",
            "name": "onint",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "parentViewModel",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "parentProperty",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "id",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "isOverload",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.DataType",
            "module": "DataType",
            "namespace": "Components"
        },
        {
            "file": "components\\data-type.js",
            "line": 636,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "class": "Components.DataType",
            "module": "DataType",
            "namespace": "Components"
        },
        {
            "file": "components\\dialog.js",
            "line": 52,
            "description": "Ok button view model",
            "itemtype": "method",
            "name": "buttonOk",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 59,
            "description": "Cancel button view model",
            "itemtype": "method",
            "name": "buttonCancel",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 66,
            "description": "Returns array of button view models on the dialog.",
            "itemtype": "method",
            "name": "buttons",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 75,
            "itemtype": "method",
            "name": "icon",
            "params": [
                {
                    "name": "icon",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 81,
            "description": "Returns an object with ids for:\n* dialag\n* header\n* buttonOk\n* buttonCancel\n* contents",
            "itemtype": "method",
            "name": "ids",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 98,
            "description": "Runs cancel function if any, then closes dialog.",
            "itemtype": "method",
            "name": "cancel",
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 109,
            "description": "Edit dialog content.",
            "itemtype": "method",
            "name": "content",
            "params": [
                {
                    "name": "isCell",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 120,
            "description": "Determine whether cancel is shown.",
            "itemtype": "method",
            "name": "displayCancel",
            "return": {
                "description": "Style",
                "type": "String"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 132,
            "itemtype": "method",
            "name": "message",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 138,
            "description": "Function called on `Cancel` clicked.",
            "itemtype": "method",
            "name": "onCancel",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 145,
            "description": "Function called on `Ok` clicked.",
            "itemtype": "method",
            "name": "onOk",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 152,
            "description": "Call `Ok`.",
            "itemtype": "method",
            "name": "ok",
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 163,
            "itemtype": "method",
            "name": "okDisabled",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 169,
            "itemtype": "method",
            "name": "okTitle",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 175,
            "description": "Show the dialog.",
            "itemtype": "method",
            "name": "show",
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 182,
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 188,
            "itemtype": "method",
            "name": "state",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 196,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.Dialog",
            "module": "Dialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\dialog.js",
            "line": 271,
            "description": "Pass either `vnode.attrs.viewModel` or `vnode.attrs` with options\nto build view model.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "title",
                                    "description": "Title",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "icon",
                                    "description": "Icon name",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "onclickOk",
                                    "description": "On click `Ok` function",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "onclickCancel",
                                    "description": "On click `Cancel` function",
                                    "type": "Function",
                                    "optional": true
                                },
                                {
                                    "name": "message",
                                    "description": "Message",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.Dialog",
            "module": "Dialog",
            "namespace": "Components"
        },
        {
            "file": "components\\dialog.js",
            "line": 292,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.Dialog",
            "module": "Dialog",
            "namespace": "Components"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 66,
            "access": "private",
            "tagname": "Helper function for building input elements",
            "itemtype": "method",
            "name": "createEditor",
            "params": [
                {
                    "name": "obj",
                    "description": "Arguments object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "index",
                            "description": "Index",
                            "type": "Number"
                        },
                        {
                            "name": "attr",
                            "description": "Property",
                            "type": "String"
                        },
                        {
                            "name": "value",
                            "description": "Value",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 178,
            "itemtype": "method",
            "name": "addAttr",
            "params": [
                {
                    "name": "attr",
                    "description": "Attribute",
                    "type": "String"
                }
            ],
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 192,
            "description": "Available attributes",
            "itemtype": "method",
            "name": "attrs",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 208,
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "",
                "type": "List"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 215,
            "itemtype": "method",
            "name": "propertyChanged",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 225,
            "itemtype": "method",
            "name": "feather",
            "params": [
                {
                    "name": "feather",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 235,
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Filter"
                }
            ],
            "return": {
                "description": "",
                "type": "Filter"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 241,
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 248,
            "description": "Legal operators for a given attribute.",
            "itemtype": "method",
            "name": "operators",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 308,
            "itemtype": "method",
            "name": "propertyName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 314,
            "description": "Cache of relation widget view models in use.",
            "itemtype": "method",
            "name": "relations",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 321,
            "itemtype": "method",
            "name": "reset",
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 335,
            "description": "Object with column, operator and value input element ids.",
            "itemtype": "method",
            "name": "viewHeaderIds",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 346,
            "description": "View containing table headers",
            "itemtype": "method",
            "name": "viewHeaders",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\filter-dialog.js",
            "line": 368,
            "description": "View containing row content.",
            "itemtype": "method",
            "name": "viewRows",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.FilterDialog",
            "module": "FilterDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-dialog.js",
            "line": 55,
            "itemtype": "method",
            "name": "formWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.FormWidget",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FormWidget"
            },
            "class": "ViewModels.FormDialog",
            "module": "FormDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-dialog.js",
            "line": 61,
            "itemtype": "method",
            "name": "modelId",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.FormDialog",
            "module": "FormDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 111,
            "description": "Internal id.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.id",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 119,
            "description": "Role name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.role",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 127,
            "description": "Editor for can read feather.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.editorCanRead",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 135,
            "description": "Editor for can update feather.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.editorCanUpdate",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 143,
            "description": "Editor for can delete feather.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.editorCanDelete",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 151,
            "description": "Role can read object.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.canRead",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 159,
            "description": "Role can update object.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.canUpdate",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 167,
            "description": "Role can delete object.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.canDelete",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 175,
            "description": "Has feather authorization.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.hasFeatherAuth",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 183,
            "description": "Role can read feather.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.featherCanRead",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 191,
            "description": "Role can update feather.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.featherCanUpdate",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 199,
            "description": "Role can read feather.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.featherCanDelete",
            "type": "Property",
            "class": "Models.ObjectAuthorization",
            "module": "FormPage",
            "namespace": "Models"
        },
        {
            "file": "components\\form-page.js",
            "line": 575,
            "itemtype": "method",
            "name": "buttonApply",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 581,
            "itemtype": "method",
            "name": "buttonAuth",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 587,
            "itemtype": "method",
            "name": "buttonBack",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 593,
            "itemtype": "method",
            "name": "buttonSave",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 599,
            "itemtype": "method",
            "name": "buttonSaveAndNew",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 605,
            "itemtype": "method",
            "name": "confirmDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 619,
            "itemtype": "method",
            "name": "doApply",
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 627,
            "itemtype": "method",
            "name": "doBack",
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 661,
            "itemtype": "method",
            "name": "doNew",
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 679,
            "itemtype": "method",
            "name": "doSave",
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 688,
            "itemtype": "method",
            "name": "doSaveAndNew",
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 698,
            "itemtype": "method",
            "name": "editAuthDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 725,
            "itemtype": "method",
            "name": "formWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.FormWidget"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FormWidget"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 731,
            "itemtype": "method",
            "name": "isNew",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 737,
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 744,
            "itemtype": "method",
            "name": "buttonEdit",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 761,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 768,
            "itemtype": "method",
            "name": "toggleNew",
            "class": "ViewModels.FormPage",
            "module": "FormPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-page.js",
            "line": 887,
            "description": "Must pass view model instance, or options to build one.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual nodeName",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "View model",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "feather",
                                    "description": "Feather name",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "form",
                                    "description": "Form id",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "config",
                                    "description": "Layout configuration",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "receiever",
                                    "description": "Receiver id to send back changes",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "isNew",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "create",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "index",
                                    "description": "",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "key",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "isNewWindow",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.FormPage",
            "module": "FormPage",
            "namespace": "Components"
        },
        {
            "file": "components\\form-page.js",
            "line": 908,
            "description": "Feather icon.",
            "itemtype": "method",
            "name": "onupdate",
            "class": "Components.FormPage",
            "module": "FormPage",
            "namespace": "Components"
        },
        {
            "file": "components\\form-page.js",
            "line": 925,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "view",
                "type": "Object"
            },
            "class": "Components.FormPage",
            "module": "FormPage",
            "namespace": "Components"
        },
        {
            "file": "components\\form-widget.js",
            "line": 332,
            "description": "Layout configuration.",
            "itemtype": "method",
            "name": "config",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 339,
            "itemtype": "method",
            "name": "containerId",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 345,
            "itemtype": "method",
            "name": "errorDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 355,
            "itemtype": "method",
            "name": "isScrollable",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 361,
            "itemtype": "method",
            "name": "focusAttr",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 367,
            "itemtype": "method",
            "name": "menuButtons",
            "params": [
                {
                    "name": "buttons",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 373,
            "itemtype": "method",
            "name": "selectedTab",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 379,
            "itemtype": "method",
            "name": "model",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 385,
            "itemtype": "method",
            "name": "outsideElementIds",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 392,
            "description": "Places to store relation content between redraws",
            "itemtype": "method",
            "name": "relations",
            "params": [
                {
                    "name": "relations",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 399,
            "description": "Places to store selector components between redraws",
            "itemtype": "method",
            "name": "selectComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.FormWidget",
            "module": "FormWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\form-widget.js",
            "line": 450,
            "description": "Pass either `vnode.attrs.viewModel` or `vnode.attrs` with options\nto build view model.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "",
                                    "type": "Object"
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.FormWidget",
            "module": "FormWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\form-widget.js",
            "line": 463,
            "description": "Makes sure subscriptions are ceased when done.",
            "itemtype": "method",
            "name": "onremove",
            "class": "Components.FormWidget",
            "module": "FormWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\form-widget.js",
            "line": 472,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.FormWidget",
            "module": "FormWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\money-relation.js",
            "line": 106,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 112,
            "description": "Layout for table cell.",
            "itemtype": "method",
            "name": "isCell",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 119,
            "itemtype": "method",
            "name": "label",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 126,
            "description": "Amount in local currency.",
            "itemtype": "method",
            "name": "amount",
            "params": [
                {
                    "name": "amount",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 143,
            "description": "Amount in base currency.",
            "itemtype": "method",
            "name": "baseAmount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 177,
            "description": "Currency conversion rate.",
            "itemtype": "method",
            "name": "conversion",
            "params": [
                {
                    "name": "ratio",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 184,
            "description": "Currency code.",
            "itemtype": "method",
            "name": "currency",
            "params": [
                {
                    "name": "currency",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 201,
            "description": "Disable currency selector.",
            "itemtype": "method",
            "name": "disableCurrency",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 208,
            "description": "Array of eligible currencies.",
            "itemtype": "method",
            "name": "currencies",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 254,
            "description": "Effective date.",
            "itemtype": "method",
            "name": "effective",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 262,
            "description": "Causes the currency conversion to be updated.",
            "itemtype": "method",
            "name": "fetchConversion",
            "params": [
                {
                    "name": "'From'",
                    "description": "currency code",
                    "type": "String"
                },
                {
                    "name": "'To'",
                    "description": "currency code",
                    "type": "String"
                }
            ],
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 310,
            "description": "Selector is memoized to prevent constant rerendering\nthat otherwise interferes with the relation widget autocompleter",
            "itemtype": "method",
            "name": "selector",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual nodeName",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Selector",
                "type": "Object"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 352,
            "itemtype": "method",
            "name": "showCurrency",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\money-relation.js",
            "line": 369,
            "itemtype": "method",
            "name": "onint",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "parentViewModel",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "parentProperty",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "id",
                                    "description": "",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "isCell",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "showCurrency",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "readonly",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "disableCurrency",
                                    "description": "",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "Components"
        },
        {
            "file": "components\\money-relation.js",
            "line": 395,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "class": "Components.MoneyRelation",
            "module": "MoneyRelation",
            "namespace": "Components"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 80,
            "description": "Workbook index.",
            "itemtype": "method",
            "name": "workbooks",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 86,
            "itemtype": "method",
            "name": "goHome",
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 92,
            "description": "Go to selected workbook.",
            "itemtype": "method",
            "name": "goto",
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 104,
            "description": "Menu name.",
            "itemtype": "method",
            "name": "itemContent",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 113,
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 121,
            "description": "Menu currently hovered over.",
            "itemtype": "method",
            "name": "mouseoverKey",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 128,
            "itemtype": "method",
            "name": "mouseout",
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 134,
            "itemtype": "method",
            "name": "mouseover",
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 140,
            "description": "Toggle collapsed or expanded.",
            "itemtype": "method",
            "name": "toggle",
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 147,
            "itemtype": "method",
            "name": "classHeader",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 154,
            "itemtype": "method",
            "name": "classMenu",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 161,
            "itemtype": "method",
            "name": "selected",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 167,
            "description": "Menu statechart.",
            "itemtype": "method",
            "name": "state",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "State"
                }
            ],
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "ViewModels.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 190,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "attrs Options",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "attrs.viewModel",
                            "description": "",
                            "type": "ViewModels.NavigatorMenu",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Components.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "Components"
        },
        {
            "file": "components\\navigator-menu.js",
            "line": 200,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.NavigatorMenu",
            "module": "NavigatorMenu",
            "namespace": "Components"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 111,
            "itemtype": "method",
            "name": "listId",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 117,
            "itemtype": "method",
            "name": "fetch",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 123,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 129,
            "itemtype": "method",
            "name": "isCell",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 135,
            "itemtype": "property",
            "name": "isRelationWidget",
            "type": "Boolean",
            "default": "true",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 141,
            "itemtype": "method",
            "name": "isReadOnly",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 147,
            "itemtype": "method",
            "name": "label",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 159,
            "itemtype": "method",
            "name": "labelProperty",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 165,
            "itemtype": "method",
            "name": "labels",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 184,
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 191,
            "description": "Array of models in selector list.",
            "itemtype": "method",
            "name": "models",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 199,
            "description": "Create new record in form.",
            "itemtype": "method",
            "name": "new",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 214,
            "description": "Open selected record in form.",
            "itemtype": "method",
            "name": "open",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 228,
            "description": "Open searh page.",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 248,
            "description": "Handler for auto-complete.",
            "itemtype": "method",
            "name": "formConfig",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 310,
            "description": "Handler for onfocus event.",
            "itemtype": "method",
            "name": "onfocus",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 325,
            "description": "Handler for blur event.",
            "itemtype": "method",
            "name": "onblur.",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 337,
            "description": "Handler for oninput event.",
            "itemtype": "method",
            "name": "oninput",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 362,
            "description": "Show menu on this event.",
            "itemtype": "method",
            "name": "onmouseovermenu",
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 369,
            "description": "Hide menu on this event.",
            "itemtype": "method",
            "name": "onmouseoutmenu.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 385,
            "itemtype": "method",
            "name": "parentProperty",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 391,
            "itemtype": "method",
            "name": "parentViewModel",
            "params": [
                {
                    "name": "viewModel",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 397,
            "itemtype": "method",
            "name": "showMenu",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 403,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 409,
            "itemtype": "method",
            "name": "formConfig",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 433,
            "itemtype": "method",
            "name": "valueProperty",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.RelationWidget",
            "module": "RelationWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 467,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewModel",
                            "description": "Parent view-model. Must have\nproperty \"relations\" returning javascript object to attach relation\nview model to.",
                            "type": "Object"
                        },
                        {
                            "name": "parentProperty",
                            "description": "Name of the relation\nin view model to attached to",
                            "type": "String"
                        },
                        {
                            "name": "valueProperty",
                            "description": "Value property",
                            "type": "String"
                        },
                        {
                            "name": "isCell",
                            "description": "Use style for cell in table",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Components.RelationWidget",
            "module": "RelationWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\relation-widget.js",
            "line": 503,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "Virtual",
                    "description": "nodeName",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.RelationWidget",
            "module": "RelationWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\search-input.js",
            "line": 47,
            "description": "Clear search box.",
            "itemtype": "method",
            "name": "clear",
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 55,
            "description": "Turn search off.",
            "itemtype": "method",
            "name": "end",
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 62,
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 68,
            "itemtype": "method",
            "name": "onkeydown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 78,
            "description": "Excute refresh function passed in via options.",
            "itemtype": "method",
            "name": "refresh",
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 87,
            "description": "Turn search on.",
            "itemtype": "method",
            "name": "start",
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 95,
            "description": "Statechart.",
            "itemtype": "method",
            "name": "state",
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 104,
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 113,
            "description": "Search text",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 121,
            "description": "Search value (dependent on state).",
            "itemtype": "method",
            "name": "value",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.SearchInput",
            "module": "SearchInput",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-input.js",
            "line": 193,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "attrs Options",
                            "description": "",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "attrs.viewModel",
                            "description": "",
                            "type": "ViewModels.SearchInput",
                            "optional": true
                        },
                        {
                            "name": "attrs.refresh",
                            "description": "",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Components.SearchInput",
            "module": "SearchInput",
            "namespace": "Components"
        },
        {
            "file": "components\\search-input.js",
            "line": 205,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.SearchInput",
            "module": "SearchInput",
            "namespace": "Components"
        },
        {
            "file": "components\\search-page.js",
            "line": 45,
            "itemtype": "method",
            "name": "buttonBack",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 51,
            "itemtype": "method",
            "name": "buttonSelect",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 57,
            "itemtype": "method",
            "name": "buttonClear",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 63,
            "itemtype": "method",
            "name": "buttonFilter",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 69,
            "itemtype": "method",
            "name": "buttonRefresh",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 75,
            "itemtype": "method",
            "name": "buttonSort",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 81,
            "itemtype": "method",
            "name": "doBack",
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 87,
            "itemtype": "method",
            "name": "doSelect",
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 104,
            "itemtype": "method",
            "name": "filterDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.FilterDialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FilterDialog"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 110,
            "itemtype": "method",
            "name": "sortDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.SortDialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.SortDialog"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 116,
            "itemtype": "method",
            "name": "searchInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "ViewModels.SearchInput"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.SearchInput"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 122,
            "itemtype": "method",
            "name": "tableWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.TableWidget"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.TableWidget"
            },
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 128,
            "itemtype": "method",
            "name": "refresh",
            "class": "ViewModels.SearchPage",
            "module": "SearchPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\search-page.js",
            "line": 237,
            "description": "Must pass view model instance or options to build one.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "",
                                    "type": "ViewModels.SearchInput",
                                    "optional": true
                                },
                                {
                                    "name": "feather",
                                    "description": "Feather name",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "config",
                                    "description": "Column configuration",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "receiever",
                                    "description": "Receiver id to send back\nselection",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.SearchPage",
            "module": "SearchPage",
            "namespace": "Components"
        },
        {
            "file": "components\\search-page.js",
            "line": 254,
            "description": "Cleanup method.",
            "itemtype": "method",
            "name": "onremove",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Components.SearchPage",
            "module": "SearchPage",
            "namespace": "Components"
        },
        {
            "file": "components\\search-page.js",
            "line": 263,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.SearchPage",
            "module": "SearchPage",
            "namespace": "Components"
        },
        {
            "file": "components\\settings-page.js",
            "line": 61,
            "itemtype": "method",
            "name": "buttonDone",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.SettingsPage",
            "module": "SettingsPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\settings-page.js",
            "line": 67,
            "itemtype": "method",
            "name": "doDone",
            "class": "ViewModels.SettingsPage",
            "module": "SettingsPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\settings-page.js",
            "line": 80,
            "itemtype": "method",
            "name": "formWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.FormWidget"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FormWidget"
            },
            "class": "ViewModels.SettingsPage",
            "module": "SettingsPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\settings-page.js",
            "line": 92,
            "itemtype": "method",
            "name": "model",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model"
                }
            ],
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.SettingsPage",
            "module": "SettingsPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\settings-page.js",
            "line": 98,
            "itemtype": "method",
            "name": "title",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.SettingsPage",
            "module": "SettingsPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\settings-page.js",
            "line": 131,
            "description": "Must pass view model instance or settings to build one.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "viewModel",
                                    "description": "",
                                    "type": "ViewModels.SettingsPage",
                                    "optional": true
                                },
                                {
                                    "name": "settings",
                                    "description": "",
                                    "type": "Function",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.SettingsPage",
            "module": "SettingsPage",
            "namespace": "Components"
        },
        {
            "file": "components\\settings-page.js",
            "line": 144,
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.SettingsPage",
            "module": "SettingsPage",
            "namespace": "Components"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 59,
            "itemtype": "method",
            "name": "add",
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 76,
            "itemtype": "method",
            "name": "addAttr",
            "params": [
                {
                    "name": "attr",
                    "description": "Attribute",
                    "type": "String"
                }
            ],
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 88,
            "itemtype": "method",
            "name": "buttonAdd",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 96,
            "itemtype": "method",
            "name": "buttonClear",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 104,
            "itemtype": "method",
            "name": "buttonDown",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 112,
            "itemtype": "method",
            "name": "buttonRemove",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 120,
            "itemtype": "method",
            "name": "buttonUp",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 128,
            "itemtype": "method",
            "name": "clear",
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 135,
            "itemtype": "method",
            "name": "content",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 179,
            "description": "Placeholder function.",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "",
                "type": "List"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 188,
            "itemtype": "method",
            "name": "isSelected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 197,
            "itemtype": "method",
            "name": "itemChanged",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 206,
            "itemtype": "method",
            "name": "items",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 221,
            "itemtype": "method",
            "name": "hasAttr",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 229,
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "List"
                }
            ],
            "return": {
                "description": "",
                "type": "List"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 235,
            "itemtype": "method",
            "name": "moveDown",
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 247,
            "itemtype": "method",
            "name": "moveUp",
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 259,
            "itemtype": "method",
            "name": "remove",
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 277,
            "description": "Placeholder function.",
            "itemtype": "method",
            "name": "reset",
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 285,
            "itemtype": "method",
            "name": "resolveProperties",
            "params": [
                {
                    "name": "feather",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "properties",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ary",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "prefix",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 332,
            "itemtype": "method",
            "name": "rowColor",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 346,
            "itemtype": "method",
            "name": "title",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 352,
            "description": "Placeholder function.",
            "itemtype": "method",
            "name": "viewHeaderIds",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 358,
            "description": "Placeholder function.",
            "itemtype": "method",
            "name": "viewHeaders",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 366,
            "description": "Placeholder function.",
            "itemtype": "method",
            "name": "viewRows",
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 374,
            "itemtype": "method",
            "name": "scrollBottom",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-dialog.js",
            "line": 380,
            "itemtype": "method",
            "name": "selection",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer",
                    "optional": true
                },
                {
                    "name": "select",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "ViewModels.TableDialog",
            "module": "TableDialog",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1103,
            "itemtype": "method",
            "name": "actions",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1181,
            "description": "Resolve the alias for an attribute in a column.",
            "itemtype": "method",
            "name": "alias.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1190,
            "description": "Array of displayed attributes.",
            "itemtype": "method",
            "name": "attrs",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1205,
            "description": "Whether can toggle row as selected.",
            "itemtype": "method",
            "name": "canToggle",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1212,
            "description": "CSS class.",
            "itemtype": "method",
            "name": "class",
            "params": [
                {
                    "name": "class",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1219,
            "itemtype": "method",
            "name": "isEditModeEnabled",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1225,
            "description": "Flag whether list is populated by query.",
            "itemtype": "method",
            "name": "isQuery",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1232,
            "description": "Layout configuration.",
            "itemtype": "method",
            "name": "config",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1239,
            "description": "Id of footer element below table if any. Used for rendering dimensions.",
            "itemtype": "method",
            "name": "footerId",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1246,
            "description": "Dialog for confirmation messages. Content changes depending on context.",
            "itemtype": "method",
            "name": "confirmDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1257,
            "description": "Return the id of the input element which should recieve focus.",
            "itemtype": "method",
            "name": "defaultFocus",
            "params": [
                {
                    "name": "Model",
                    "description": "to evaluate",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1274,
            "description": "Dialog for error messages. Content changes depending on context.",
            "itemtype": "method",
            "name": "errorDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1284,
            "itemtype": "method",
            "name": "feather",
            "params": [
                {
                    "name": "feather",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1290,
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Filter"
                }
            ],
            "return": {
                "description": "",
                "type": "Filter"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1296,
            "description": "Form used for editing rows.",
            "itemtype": "method",
            "name": "form",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1307,
            "itemtype": "method",
            "name": "formatInputId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1314,
            "description": "Manually set stlye height if any.",
            "itemtype": "method",
            "name": "height",
            "params": [
                {
                    "name": "height",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1321,
            "itemtype": "method",
            "name": "goNextRow",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1340,
            "itemtype": "method",
            "name": "goPrevRow",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1352,
            "description": "Object with table header table body ids.",
            "itemtype": "method",
            "name": "ids",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1362,
            "itemtype": "method",
            "name": "isDragging",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1368,
            "itemtype": "method",
            "name": "isScrolling",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1374,
            "itemtype": "method",
            "name": "isSelected",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1382,
            "description": "Return the name of the last attribute which can recive focus.",
            "itemtype": "method",
            "name": "lastFocus",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1401,
            "description": "Set or return the last model that was selected in the list.",
            "itemtype": "method",
            "name": "lastSelected",
            "params": [
                {
                    "name": "Model",
                    "description": "selected",
                    "type": "Model"
                }
            ],
            "return": {
                "description": "Last model selected",
                "type": "Model"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1408,
            "description": "Current edit mode state.",
            "itemtype": "method",
            "name": "mode",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1417,
            "description": "Currently selected model.",
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1425,
            "itemtype": "method",
            "name": "modelDelete",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1431,
            "itemtype": "method",
            "name": "modelNew",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1437,
            "description": "Model list.",
            "itemtype": "method",
            "name": "models",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "List"
                }
            ],
            "return": {
                "description": "",
                "type": "List"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1444,
            "itemtype": "method",
            "name": "nextFocus",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1450,
            "itemtype": "method",
            "name": "ondblclick",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1460,
            "itemtype": "method",
            "name": "ondragover",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1467,
            "itemtype": "method",
            "name": "ondragstart",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1488,
            "itemtype": "method",
            "name": "ondrop",
            "params": [
                {
                    "name": "toIndex",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "ary",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1526,
            "itemtype": "method",
            "name": "onkeydown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1556,
            "itemtype": "method",
            "name": "onscroll",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1586,
            "description": "Rerun query.",
            "itemtype": "method",
            "name": "refresh",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1593,
            "description": "Cache of relation widgets for editing.",
            "itemtype": "method",
            "name": "relations",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1600,
            "description": "Cache of select components for editing.",
            "itemtype": "method",
            "name": "selectComponents",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1607,
            "description": "Save edited models.",
            "itemtype": "method",
            "name": "save",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1614,
            "itemtype": "method",
            "name": "scrollbarWidth",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Integr"
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1620,
            "description": "Search string.",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1627,
            "description": "Array of models to select",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "Models",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Selected models",
                "type": "Array"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1676,
            "description": "Current selection (edit mode).",
            "itemtype": "method",
            "name": "selection",
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1684,
            "description": "Array of selected model ids.",
            "itemtype": "method",
            "name": "selectionIds",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1694,
            "description": "Current model selections (view mode).",
            "itemtype": "method",
            "name": "selections",
            "params": [
                {
                    "name": "Models",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Models",
                "type": "Array"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1701,
            "description": "CSS class of selected model.",
            "itemtype": "method",
            "name": "selectedClass",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1709,
            "itemtype": "method",
            "name": "state",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "State"
                }
            ],
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1715,
            "description": "Go to edit mode.",
            "itemtype": "method",
            "name": "toggleEdit",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1722,
            "description": "Go to view mode.",
            "itemtype": "method",
            "name": "toggleView",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1729,
            "description": "Change to either view or edit mode.",
            "itemtype": "method",
            "name": "toggleMode",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1736,
            "itemtype": "method",
            "name": "toggleSelection",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "key",
                "type": "Key"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1748,
            "itemtype": "method",
            "name": "undo",
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1758,
            "itemtype": "method",
            "name": "unselect",
            "params": [
                {
                    "name": "Models",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 1826,
            "itemtype": "method",
            "name": "zoom",
            "params": [
                {
                    "name": "percent",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "ViewModels.TableWidget",
            "module": "TableWidget",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\table-widget.js",
            "line": 2073,
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewModel",
                            "description": "",
                            "type": "ViewModels.TableWidget"
                        }
                    ]
                }
            ],
            "class": "Components.TableWidget",
            "module": "TableWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\table-widget.js",
            "line": 2082,
            "description": "Block redrawing where unneccessary to improve performance.",
            "itemtype": "method",
            "name": "onbeforeupdate",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewModel",
                            "description": "",
                            "type": "ViewModels.TableWidget"
                        }
                    ]
                }
            ],
            "class": "Components.TableWidget",
            "module": "TableWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\table-widget.js",
            "line": 2102,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewModel",
                            "description": "",
                            "type": "ViewModels.TableWidget"
                        }
                    ]
                }
            ],
            "return": {
                "description": "View",
                "type": "Object"
            },
            "class": "Components.TableWidget",
            "module": "TableWidget",
            "namespace": "Components"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 576,
            "itemtype": "method",
            "name": "buttonClear",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 582,
            "itemtype": "method",
            "name": "buttonDelete",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 588,
            "itemtype": "method",
            "name": "buttonEdit",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 594,
            "itemtype": "method",
            "name": "buttonFilter",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 600,
            "itemtype": "method",
            "name": "buttonNew",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 606,
            "itemtype": "method",
            "name": "buttonRefresh",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 612,
            "itemtype": "method",
            "name": "buttonSave",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 618,
            "itemtype": "method",
            "name": "buttonSort",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 624,
            "itemtype": "method",
            "name": "buttonUndo",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "ViewModels.Button"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Button"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 630,
            "description": "Layout configuration.",
            "itemtype": "method",
            "name": "config",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 637,
            "itemtype": "method",
            "name": "confirmDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 646,
            "description": "Open worksheet configuration dialog.",
            "itemtype": "method",
            "name": "configureSheet",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 656,
            "itemtype": "method",
            "name": "footerId",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 662,
            "description": "Drop event handler for deleting sheets.",
            "itemtype": "method",
            "name": "deleteSheet",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 693,
            "description": "Editor dialog for workbook.",
            "itemtype": "method",
            "name": "editWorkbookDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 700,
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "Filter"
                }
            ],
            "return": {
                "description": "",
                "type": "Filter"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 706,
            "itemtype": "method",
            "name": "filterDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.FilterDialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.FilterDialog"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 712,
            "itemtype": "method",
            "name": "goHome",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 718,
            "itemtype": "method",
            "name": "goSignOut",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 724,
            "itemtype": "method",
            "name": "goSettings",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 732,
            "itemtype": "method",
            "name": "isDraggingTab",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 738,
            "itemtype": "method",
            "name": "hasSettings",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 746,
            "description": "Create a new model in form, tab or row depending on state.",
            "itemtype": "method",
            "name": "modelNew",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 796,
            "description": "Open model in form.",
            "itemtype": "method",
            "name": "openModel",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 836,
            "itemtype": "method",
            "name": "menu",
            "params": [
                {
                    "name": "navigator",
                    "description": "",
                    "type": "ViewModels.NavigatorMenu"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.NavigatorMenu"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 842,
            "description": "Add a new sheet to the workbook.",
            "itemtype": "method",
            "name": "newSheet",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 886,
            "itemtype": "method",
            "name": "ondragend",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 892,
            "itemtype": "method",
            "name": "ondragover",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 899,
            "itemtype": "method",
            "name": "ondragstart",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 908,
            "itemtype": "method",
            "name": "ondrop",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "ary",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 927,
            "description": "Handle keyboard up and down keys.",
            "itemtype": "method",
            "name": "onkeydown",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 946,
            "description": "Handle on click of actions menu.",
            "itemtype": "method",
            "name": "onclickactions",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 953,
            "description": "Hide actions menu if mouse out.",
            "itemtype": "method",
            "name": "onmouseoutactions",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 966,
            "description": "Handle on click of workbook menu.",
            "itemtype": "method",
            "name": "onclickmenu",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 973,
            "description": "Hide workbook menu if mouse out.",
            "itemtype": "method",
            "name": "onmouseoutactions",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 986,
            "description": "Requery list.",
            "itemtype": "method",
            "name": "refresh",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 993,
            "description": "Revert selected model if dirty.",
            "itemtype": "method",
            "name": "revert",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1001,
            "description": "Save user workbook configuration to server.",
            "itemtype": "method",
            "name": "saveProfile",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1012,
            "itemtype": "method",
            "name": "searchInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "ViewModels.SearchInput"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.SearchInput"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1018,
            "description": "Make user's model configuration the new default.",
            "itemtype": "method",
            "name": "share",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1040,
            "description": "Return sheet configuration. Passing `value` will set\nthe sheet to the configuration of `value`.",
            "itemtype": "method",
            "name": "sheet",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Object | String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "sheet",
                "type": "Object"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1077,
            "description": "Return an array of sheet names.",
            "itemtype": "method",
            "name": "sheets",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1087,
            "itemtype": "method",
            "name": "sheetConfigureDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1093,
            "itemtype": "method",
            "name": "showFilterDialog",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1101,
            "itemtype": "method",
            "name": "showActions",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1107,
            "itemtype": "method",
            "name": "showMenu",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1113,
            "itemtype": "method",
            "name": "showSortDialog",
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1121,
            "itemtype": "method",
            "name": "sortDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.SortDialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.SortDialog"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1127,
            "description": "Dialog for handling server side events.",
            "itemtype": "method",
            "name": "sseDialog",
            "params": [
                {
                    "name": "dialog",
                    "description": "",
                    "type": "ViewModels.Dialog"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.Dialog"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1145,
            "description": "Navigate to sheet.",
            "itemtype": "method",
            "name": "tabClicked",
            "params": [
                {
                    "name": "name",
                    "description": "Sheet name",
                    "type": "String"
                }
            ],
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1156,
            "itemtype": "method",
            "name": "tableWidget",
            "params": [
                {
                    "name": "widget",
                    "description": "",
                    "type": "ViewModels.TableWidget"
                }
            ],
            "return": {
                "description": "",
                "type": "ViewModels.TableWidget"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1162,
            "itemtype": "method",
            "name": "workbook",
            "return": {
                "description": "dialog",
                "type": "Models.Workbook"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1169,
            "itemtype": "method",
            "name": "zoom",
            "params": [
                {
                    "name": "percent",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "ViewModels.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "ViewModels"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1444,
            "description": "Must pass view model instance or options to build one.",
            "itemtype": "method",
            "name": "oninit",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "attrs",
                            "description": "Options",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "workbook",
                                    "description": "Workbook name",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "key",
                                    "description": "Worksheet name",
                                    "type": "Object",
                                    "optional": true
                                },
                                {
                                    "name": "isInvalid",
                                    "description": "Passed if view model\nwas determined invalid. View will return nothing.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "class": "Components.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "Components"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1480,
            "itemtype": "method",
            "name": "onupdate",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "class": "Components.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "Components"
        },
        {
            "file": "components\\workbook-page.js",
            "line": 1488,
            "itemtype": "method",
            "name": "view",
            "params": [
                {
                    "name": "vnode",
                    "description": "Virtual node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "view",
                "type": "Object"
            },
            "class": "Components.WorkbookPage",
            "module": "WorkbookPage",
            "namespace": "Components"
        },
        {
            "file": "models\\catalog.js",
            "line": 37,
            "itemtype": "method",
            "name": "feathers",
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 44,
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "merge",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 133,
            "description": "Return a model specification (feather) including inherited and\ncalculated properties.",
            "itemtype": "method",
            "name": "getFeather",
            "params": [
                {
                    "name": "Feather",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "Include",
                    "description": "inherited or not. Default = true.",
                    "type": "Boolean"
                },
                {
                    "name": "Include",
                    "description": "calculated or not. Default = true.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 227,
            "description": "Check whether current is authorized to perform an action on a\nparticular feather (class) or object.\n\nAllowable actions: `canCreate`, `canRead`, `canUpdate`, `canDelete`\n\n`canCreate` will only check feather names.",
            "itemtype": "method",
            "name": "isAuthorized",
            "params": [
                {
                    "name": "Options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Payload",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "action",
                            "description": "Action name",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "feather",
                            "description": "Feather name",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "Object id",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise will resolve to a boolean.",
                "type": "Promise"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 282,
            "description": "Store global data.",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "Data",
                    "description": "type",
                    "type": "String"
                },
                {
                    "name": "Name",
                    "description": "of instance",
                    "type": "String"
                },
                {
                    "name": "Value",
                    "description": "to store",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "Instances of the data type",
                "type": "Object"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 305,
            "description": "Helper function for model creation. Does the following:\n    * Adds a property \"static\" to the model factory which returns an\n    object for holding static functions.\n    * Adds a property \"calculated\" to the model factory which returns an\n    object for storing calculated property definitions.\n    * Registers the model in the catalog\n    * Freezes the model",
            "itemtype": "method",
            "name": "registerModel",
            "params": [
                {
                    "name": "Feather",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "Model",
                    "description": "factory",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "model factory",
                "type": "Model"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 328,
            "description": "Unregister a property from the store.",
            "itemtype": "method",
            "name": "unregister",
            "params": [
                {
                    "name": "Property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "Name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 339,
            "description": "Return feathers loaded in the catalog.",
            "itemtype": "method",
            "name": "feathers",
            "return": {
                "description": "feathers",
                "type": "Object"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 347,
            "description": "Current instance event key.",
            "itemtype": "method",
            "name": "eventKey",
            "params": [
                {
                    "name": "key",
                    "description": "Event key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\catalog.js",
            "line": 357,
            "description": "Store.",
            "itemtype": "method",
            "name": "store",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Catalog",
            "module": "Catalog"
        },
        {
            "file": "models\\data-list-option.js",
            "line": 69,
            "description": "Internal key.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.value",
            "type": "Property",
            "class": "Models.DataListOption",
            "module": "DataList",
            "namespace": "Models"
        },
        {
            "file": "models\\data-list-option.js",
            "line": 77,
            "description": "Display value.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.label",
            "type": "Property",
            "class": "Models.DataListOption",
            "module": "DataList",
            "namespace": "Models"
        },
        {
            "file": "models\\data-service.js",
            "line": 30,
            "description": "Modules datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.modules",
            "type": "Property",
            "class": "Models.DataService",
            "module": "Core"
        },
        {
            "file": "models\\feather.js",
            "line": 110,
            "description": "Feathers datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.feathers",
            "type": "Property",
            "class": "Models.Feather",
            "module": "Core"
        },
        {
            "file": "models\\feather.js",
            "line": 129,
            "description": "Inherited properties child records.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.inheritedProperties",
            "type": "Property",
            "class": "Models.Feather",
            "module": "Core"
        },
        {
            "file": "models\\feather.js",
            "line": 152,
            "description": "Modules datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.modules",
            "type": "Property",
            "class": "Models.Feather",
            "module": "Core"
        },
        {
            "file": "models\\feather.js",
            "line": 334,
            "description": "Property names datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.propertyNames",
            "type": "Property",
            "class": "Models.FeatherOverload",
            "module": "Core"
        },
        {
            "file": "models\\feather.js",
            "line": 438,
            "description": "Formats datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.formats",
            "type": "Property",
            "class": "Models.FeatherProperty",
            "module": "Core"
        },
        {
            "file": "models\\form.js",
            "line": 57,
            "description": "Feathers datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.feathers",
            "type": "Property",
            "class": "Models.Form",
            "module": "Core"
        },
        {
            "file": "models\\form.js",
            "line": 76,
            "description": "Modules datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.modules",
            "type": "Property",
            "class": "Models.Form",
            "module": "Core"
        },
        {
            "file": "models\\form.js",
            "line": 95,
            "description": "Feather properties datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.properties",
            "type": "Property",
            "class": "Models.Form",
            "module": "Core"
        },
        {
            "file": "models\\form.js",
            "line": 223,
            "description": "Feather properties datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.properties",
            "type": "Property",
            "class": "Models.FormAttr",
            "module": "Core"
        },
        {
            "file": "models\\form.js",
            "line": 390,
            "description": "Feather properties datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.properties",
            "type": "Property",
            "class": "Models.FormAttrColumn",
            "module": "Core"
        },
        {
            "file": "models\\list.js",
            "line": 60,
            "description": "Add a model to the list. Will replace existing\nif model with same id is already found in array.\nPass subscribe option to automatically subscribe\nto server events on the model.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "Model",
                    "description": "",
                    "type": "Model"
                },
                {
                    "name": "Subscribe",
                    "description": "flag.",
                    "type": "Boolean"
                }
            ],
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 125,
            "description": "Set whether the array can have a filter. Turn\noff when list is not fetching.",
            "itemtype": "method",
            "name": "canFilter",
            "params": [
                {
                    "name": "Can",
                    "description": "filter flag",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 135,
            "description": "If turned on perform `checkUpdate` on all fetched\nmodels, or any newly fetched models. Do this if\nmodels are going to be edited.",
            "itemtype": "method",
            "name": "checkUpdate",
            "params": [
                {
                    "name": "Enable",
                    "description": "or disable checking",
                    "type": "Boolean"
                }
            ],
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 154,
            "description": "Fetch data. Returns a Promise.",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "filter,",
                    "description": "",
                    "type": "Filter"
                },
                {
                    "name": "merge",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 168,
            "description": "Filter to use when fetching.",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "Filter",
                    "description": "",
                    "type": "Filter"
                }
            ],
            "return": {
                "description": "",
                "type": "Filter"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 177,
            "description": "Default fetch limit.",
            "itemtype": "method",
            "name": "defaultLimit",
            "params": [
                {
                    "name": "Limit",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 186,
            "description": "Model index.",
            "itemtype": "method",
            "name": "index",
            "params": [
                {
                    "name": "Model",
                    "description": "index",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 195,
            "description": "Model factory for creating new model instances.",
            "itemtype": "method",
            "name": "model",
            "params": [
                {
                    "name": "Data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "Feather",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Objects"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 205,
            "description": "The url path to data.",
            "itemtype": "method",
            "name": "path",
            "params": [
                {
                    "name": "Path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 214,
            "description": "Array of properties to fetch if only a subset required.\nIf undefined, then all properties returned.",
            "itemtype": "method",
            "name": "properties",
            "params": [
                {
                    "name": "Array",
                    "description": "of properties",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 224,
            "description": "Remove a model from the list.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "Model",
                    "description": "",
                    "type": "Model"
                }
            ],
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 247,
            "description": "Clear list.",
            "itemtype": "method",
            "name": "reset",
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 258,
            "description": "Toggle whether to show deleted records.",
            "itemtype": "method",
            "name": "showDeleted",
            "params": [
                {
                    "name": "Whether",
                    "description": "to show deleted",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 267,
            "description": "Save dirty records in list. Returns a Promise.",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 277,
            "description": "List state.",
            "itemtype": "method",
            "name": "state",
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\list.js",
            "line": 287,
            "description": "Subscribe to change events on any records\nin the array. Returns subscription id when\nenabled by passing true at least once. Pass\nfalse to unsubscribe.",
            "itemtype": "method",
            "name": "subscribe",
            "params": [
                {
                    "name": "Subscribe",
                    "description": "or unsubscribe.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Subcription id.",
                "type": "String"
            },
            "class": "List",
            "module": "List"
        },
        {
            "file": "models\\model.js",
            "line": 37,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "onFetching",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 45,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "onFetched",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 53,
            "description": "Function to extend child array",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "extendArray",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 201,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "handleDefault",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 238,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isChild",
            "params": [
                {
                    "name": "Property",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 247,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isToOne",
            "params": [
                {
                    "name": "Property",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 259,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isToMany",
            "params": [
                {
                    "name": "Property",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 326,
            "description": "Holder of getter/setter functions for all model data attributes as\ndefined by the feather passed in.",
            "example": [
                "\n    let instance;\n    let catalog = f.catalog();\n    let data = {\n        name: \"foo\"\n    };\n    let feather = {\n        name: \"MyFeather\",\n        properties: {\n            name: {\n                type: \"string\"\n            }\n        }\n    }\n\n    instance = f.model(data, feather);\n    instance.data.name(); // foo\n    instance.data.name(\"bar\"); // bar\n    instance.data.name(); // bar"
            ],
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 363,
            "description": "Add a calculated property to \"data.\"",
            "itemtype": "method",
            "name": "addCalculated",
            "params": [
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "Name",
                            "type": "String"
                        },
                        {
                            "name": "description",
                            "description": "Description",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "function",
                            "description": "Function",
                            "type": "Function"
                        },
                        {
                            "name": "type",
                            "description": "Return type (default \"string\")",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "format",
                            "description": "Return format",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "isReadOnly",
                            "description": "Read only (default true)",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "style",
                            "description": "Style name",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 399,
            "description": "Check whether changes in model can be saved in its\ncurrent state.",
            "itemtype": "method",
            "name": "canSave",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 410,
            "description": "Check whether model can undo changes in its current state.",
            "itemtype": "method",
            "name": "canUndo",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 420,
            "description": "Check whether model can be updated according to\nauthorization check.",
            "itemtype": "method",
            "name": "canUpdate",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 429,
            "description": "Check whether model can be deleted in its current state.",
            "itemtype": "method",
            "name": "canSave",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 441,
            "description": "Perform an authorization check whether the model\ncan be deleted form the server. The result of\n`canCheck` will be based on the response of this query.",
            "itemtype": "method",
            "name": "checkDelete",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 463,
            "description": "Will freeze model until it is confirmed the current user has\nauthorization to update it. Without this action, editing will\nseem to be allowed until saving when an error will be thrown by\nthe server. We wait as long as possible to check this to reduce\noverhead since most records fetched are not going to be updated.",
            "itemtype": "method",
            "name": "checkUpdate",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 501,
            "description": "Send event to clear properties on the object and set it to\n\"/Ready/New\" state.",
            "itemtype": "method",
            "name": "clear",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 511,
            "description": "Send event to delete the current object from the server.\nReturns a promise with a boolean passed back as the value.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "autoSave",
                    "description": "Automatically commit. Default false.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 529,
            "description": "Send event to fetch data based on the current id from the server.\nReturns a promise with model.data passed back as the value.",
            "itemtype": "method",
            "name": "fetch",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 540,
            "description": "Return the unique identifier value for the model.",
            "itemtype": "method",
            "name": "id",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 556,
            "description": "The data property that is the unique identifier for the model.\nDefault is \"id\".",
            "itemtype": "method",
            "name": "idProperty",
            "params": [
                {
                    "name": "property",
                    "description": "Id property",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 566,
            "description": "Indicates if model is in  a frozen state.",
            "itemtype": "method",
            "name": "isFrozen",
            "return": {
                "description": "",
                "type": "Boolen"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 576,
            "description": "Property that indicates object is a model instance.",
            "itemtype": "property",
            "name": "isModel",
            "default": "true",
            "type": "boolean",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 585,
            "description": "Indicates whether the model is read only.",
            "itemtype": "method",
            "name": "isReadOnly",
            "params": [
                {
                    "name": "isReadyOnly",
                    "description": "Read only flag",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 594,
            "description": "Returns whether the object is in a valid state to save.\n`lastError` value will be set by this if any are found.",
            "itemtype": "method",
            "name": "isValid",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 615,
            "description": "Return the last error raised.",
            "itemtype": "method",
            "name": "lastError",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 625,
            "description": "Lock record. To be applied when notification of locked status.\nPrevents other users from editing the record.",
            "itemtype": "method",
            "name": "lock",
            "params": [
                {
                    "name": "object",
                    "description": "Lock object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 637,
            "description": "Feather name of model.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 645,
            "description": "Returns natural key property name.",
            "itemtype": "method",
            "name": "naturalKey",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 671,
            "description": "Add a function that returns a boolean to execute when the\n`canDelete` function is called. The function should validate\nwhether a record will be allowed to be deleted.",
            "example": [
                "\n    let catalog = f.catalog();\n\n    function contact(data, feather) {\n        feather = feather || catalog.getFeather(\"Contact\");\n        let model = f.model(data, feather);\n\n        function deleteCheck () => !model.data.isPosted();\n\n        // Add a check\n        model.onCanDelete(deleteCheck);\n    }"
            ],
            "itemtype": "method",
            "name": "onCanDelete",
            "params": [
                {
                    "name": "callback",
                    "description": "Test function",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 700,
            "description": "Add an event binding to a property that will be triggered before a\nproperty change. Pass a callback in and the property will be\npassed to the callback. The property will be passed to the\ncallback as the first argument. Dot notation is supported to\ntraverse child properties.",
            "example": [
                "\n    let catalog = f.catalog();\n    let msg;\n    let instance;\n\n    function contact(data, feather) {\n        feather = feather || catalog.getFeather(\"Contact\");\n        let model = f.model(data, feather);\n\n        // Add a change event to a property\n        model.onChange(\"firstName\", function (prop) {\n            msg = (\n                \"First name changing from \" +\n                (prop.oldValue() || \"nothing\") + \" to \" +\n                prop.newValue() + \"!\"\n            );\n            console.log(msg);\n        });\n    }\n\n    instance = contact();\n    instance.data.firstName(\"Fred\");\n    // Contact changing from nothing to Fred"
            ],
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "name",
                    "description": "Property name to call on cahnge",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function to call on change",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 762,
            "description": "Add an event binding to a property that will be triggered after\na property change. Pass a callback in and the property will be\npassed to the callback. The property will be passed to the\ncallback as the first argument. Dot notation is supported to\ntraverse child properties.",
            "example": [
                "\n    let instance;\n    let catalog = f.catalog();\n\n    function contact(data, feather) {\n        feather = feather || catalog.getFeather(\"Contact\");\n        let model = f.model(data, feather);\n\n        // Add a changed event to a property\n        model.onChanged(\"firstName\", function (prop) {\n            console.log(\"First name is now \" + prop() + \"!\");\n        });\n    }\n\n    instance = contact();\n    instance.data.name(\"Aiden\"); // First name is now Aiden!"
            ],
            "itemtype": "method",
            "name": "onChanged",
            "params": [
                {
                    "name": "name",
                    "description": "Property name to call on cahnge",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function to call on change",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 817,
            "description": "Add an error handler binding to the object. Pass a callback\nin and the error will be passed as an argument.",
            "example": [
                "\n    let instance;\n    let catalog = f.catalog();\n\n    function contact(data, feather) {\n        feather = feather || catalog.getFeather(\"Contact\");\n        let model = f.model(data, shared);\n\n        model.onValidate(function () {\n            if (model.data.phone().length <> 12) {\n                throw new Error(\"Phone number must be 12 characters\");\n            }\n        });\n\n        // Add an error handler\n        model.onError(function (err) {\n            console.log(\"Error->\", err);\n        });\n    }\n\n    instance = contact();\n    instance.data.phone(\"555-1212\");\n    instance.isValid(); // False\n    // Error->Phone number must be 12 characters"
            ],
            "itemtype": "method",
            "name": "onError",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback to execute on error",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 857,
            "description": "Execute a function whenever the state changes to `Ready/Fetched/Clean`\nor in other words right after model data has been fetched and loaded.",
            "itemtype": "method",
            "name": "onLoad",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback function to execute on load",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 872,
            "description": "Add a validator to execute when the `isValid` function is\ncalled, which is also called after saving events. Errors thrown\nby the validator will be caught and passed through `onError`\ncallback(s). The most recent error may also be access via\n`lastError`.",
            "example": [
                "\n    let instance;\n    let catalog = f.catalog();\n\n    function contact(data, feather) {\n        feather = feather || catalog.getFeather(\"Contact\");\n        let model = f.model(data, shared);\n\n        model.onValidate(function () {\n            if (model.data.phone().length <> 12) {\n                throw new Error(\"Phone number must be 12 characters\");\n            }\n        });\n    }\n\n    instance = contact();\n    instance.data.phone(\"555-1212\");\n    instance.isValid(); // False\n    instance.lastError(); // Phone number must be 12 characters"
            ],
            "itemtype": "method",
            "name": "onValidate",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback to execute when validating",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 910,
            "description": "Returns parent object if applicable.",
            "itemtype": "method",
            "name": "parent",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 918,
            "description": "Returns a path to execute server requests.",
            "itemtype": "method",
            "name": "path",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Id",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 936,
            "description": "Plural name of feather.",
            "itemtype": "property",
            "name": "plural",
            "type": "String",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 944,
            "description": "Send the save event to persist current data to the server.\nOnly results in action in the \"/Ready/Fetched/Dirty\" and\n\"/Ready/New\" states.\n\nReturns a promise with model.data as the value.",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 958,
            "description": "Send an event to all properties.",
            "itemtype": "method",
            "name": "sendToProperties",
            "params": [
                {
                    "name": "str",
                    "description": "Event name.",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 978,
            "description": "Set properties to the values of a passed object. In\nother words deserialize an object.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "data",
                    "description": "Data to set",
                    "type": "Object"
                },
                {
                    "name": "silent",
                    "description": "Silence change events",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "isLastFetched",
                    "description": "Flag set from fetch",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1027,
            "description": "Model statechart.",
            "itemtype": "method",
            "name": "state",
            "params": [
                {
                    "name": "state",
                    "description": "Statechart",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1042,
            "description": "The style of the model when displayed in rows. Should be the\nname of a style.",
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "style",
                    "description": "Style name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1052,
            "description": "Subscribe or unsubscribe model to external events. If no flag\npassed and already subscribed, subscription id returned.",
            "itemtype": "method",
            "name": "subscribe",
            "params": [
                {
                    "name": "Flag",
                    "description": "whether or not to subscribe to events.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "False or subscription id.",
                "type": "Boolean | String"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1117,
            "description": "Serialize data to a simple JavaScript object.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1136,
            "description": "Undo changes since last fetch.",
            "itemtype": "method",
            "name": "undo",
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1145,
            "description": "Unlock record. To be applied when notification of unlocked status.",
            "itemtype": "method",
            "name": "unlock",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Model",
            "module": "Model"
        },
        {
            "file": "models\\model.js",
            "line": 1931,
            "description": "Surrogate key.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.id",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 1940,
            "description": "Create time of the record.\n\n__Type:__ `String`\n\n__Format:__ `DateTime`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.created",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 1953,
            "description": "User who created the record.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.createdBy",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 1964,
            "description": "Flag whether object is soft deleted.\n\n__Type:__ `Boolean`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.isDeleted",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 1975,
            "description": "Flag whether object is soft deleted.\n\n__Type:__ `Object`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.lock",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 1986,
            "description": "Discriminates which inherited object type the object represents\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.objectType",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 1997,
            "description": "Last time the record was updated.\n\n__Type:__ `String`\n\n__Format:__ `DateTime`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.updated",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\model.js",
            "line": 2010,
            "description": "User who last updated the record.\n\n__Type:__   `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.updatedBy",
            "type": "Property",
            "class": "Models.Object",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\role.js",
            "line": 72,
            "description": "Role names datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.roleNames",
            "type": "Property",
            "class": "Models.RoleMembership",
            "module": "Model",
            "namespace": "Models"
        },
        {
            "file": "models\\route.js",
            "line": 30,
            "description": "Modules datalist.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.modules",
            "type": "Property",
            "class": "Models.Route",
            "module": "Core"
        },
        {
            "file": "models\\script.js",
            "line": 30,
            "description": "Lint errors.\n\n__Type:__ `Array`\n\n__Is Calculated__\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.annotations",
            "type": "Property",
            "class": "Models.Script",
            "module": "Core"
        },
        {
            "file": "models\\workbook.js",
            "line": 294,
            "description": "Datalist array of available modules.\n\n__Type:__ `Array`",
            "itemtype": "property",
            "name": "data.modules",
            "type": "{Property}",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 327,
            "description": "Check whether workbook is authorized to perform an action.\n\nAllowable actions: `canRead`, `canUpdate`",
            "itemtype": "method",
            "name": "isAuthorized",
            "params": [
                {
                    "name": "Action",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Promise",
                "type": "Object"
            },
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 396,
            "description": "Unique identifier.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.id",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 404,
            "description": "Workbook name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 412,
            "description": "Description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 420,
            "description": "Icon.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.icon",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 428,
            "description": "Launch configuration.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.launchConfig",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 436,
            "description": "Parent of `parent` on `WorkbookDefaultConfig`.\n\n__Type:__ `WorkbookDefaultConfig`",
            "itemtype": "property",
            "name": "data.defaultConfig",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 444,
            "description": "Parent of `parent` on `WorkbookLocalConfig`.\n\n__Type:__ `WorkboookLocalConfig`",
            "itemtype": "property",
            "name": "data.localConfig",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 452,
            "description": "Module.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "Property",
            "class": "Models.Workbook",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 564,
            "description": "Workbook parent.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.parent",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 572,
            "description": "Sheet name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.names",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 580,
            "description": "Feather.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.feather",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 588,
            "description": "Form layout.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.form",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 596,
            "description": "List layout.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.list",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 604,
            "description": "Zooom level.\n\n__Type:__ `Integer`",
            "itemtype": "property",
            "name": "data.zoom",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 612,
            "description": "Parent of `parent` on `WorkbookLocalConfig`.\n\n__Type:__ `WorkboookLocalConfig`",
            "itemtype": "property",
            "name": "data.localConfig",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 620,
            "description": "Module.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 628,
            "description": "Flags whether inline editing is allowed.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isEditModeEnabled",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 636,
            "description": "Open record in a new tab window.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.openInNewWindow",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 644,
            "description": "Menu actions that can be performed on rows.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.actions",
            "type": "Property",
            "class": "Models.WorkbookChild",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 677,
            "description": "Workbook parent.\n\n__Type:__ `Models.Workbook`",
            "itemtype": "property",
            "name": "data.parent",
            "type": "Property",
            "class": "Models.WorkbookAuthorization",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 685,
            "description": "Role.\n\n__Type:__ `Models.Role`",
            "itemtype": "property",
            "name": "data.Role",
            "type": "Property",
            "class": "Models.WorkbookAuthorization",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 693,
            "description": "User can read workbook.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.canRead",
            "type": "Property",
            "class": "Models.WorkbookAuthorization",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "models\\workbook.js",
            "line": 701,
            "description": "User can update definition share workbook changes.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.canUpdate",
            "type": "Property",
            "class": "Models.WorkbookAuthorization",
            "module": "Workbook",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 10,
            "description": "Home, work, other.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.type",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 21,
            "description": "Street.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.street",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 30,
            "description": "Unit.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.unit",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 39,
            "description": "City.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.city",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 48,
            "description": "State.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.state",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 57,
            "description": "Postal code.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.postalCode",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 66,
            "description": "Country.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.country",
            "type": "PropertyObject",
            "class": "Models.Address",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 81,
            "description": "Base currency.\n\n__Type:__ {{#crossLink \"Currency\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.currency",
            "type": "PropertyDocument",
            "class": "Models.BaseCurrency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 90,
            "description": "Effective time.\n\n__Type:__ `String`\n\n__Format:__ dateTime",
            "itemtype": "property",
            "name": "data.effective",
            "type": "PropertyDocument",
            "class": "Models.BaseCurrency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 107,
            "description": "Note text.\n\n__Type:__ `String`\n\n__Format:__ textArea",
            "itemtype": "property",
            "name": "data.text",
            "type": "PropertyObject",
            "class": "Models.Comment",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 124,
            "description": "Honorific.\n\n__Type:__ {{#crossLink \"Honorific\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.honorific",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 133,
            "description": "First name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.firstName",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 142,
            "description": "Last name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.lastName",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 151,
            "description": "Name.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.fullName",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 162,
            "description": "Primary phone number.\n\n__Type:__ `String`\n\n__Format:__ tel",
            "itemtype": "property",
            "name": "data.phone",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 173,
            "description": "Home, work, other.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.phoneType",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 184,
            "description": "Primary phone number.\n\n__Type:__ `String`\n\n__Format:__ email",
            "itemtype": "property",
            "name": "data.email",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 195,
            "description": "Personal, work, other.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.emailType",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 206,
            "description": "Primary Address.\n\n__Type:__ {{#crossLink \"Address\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.address",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 215,
            "description": "Personal web page.\n\n__Type:__ `String`\n\n__Format:__ url",
            "itemtype": "property",
            "name": "data.webSite",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 226,
            "description": "Parent of \"parent\" on \"ContactPhone\".\n\n__Type:__ {{#crossLink \"ContactPhone\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.phones",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 235,
            "description": "Parent of \"parent\" on \"ContactEmail\".\n\n__Type:__ {{#crossLink \"ContactEmail\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.emails",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 244,
            "description": "Parent of \"parent\" on \"ContactAddress\".\n\n__Type:__ {{#crossLink \"ContactAddress\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.addresses",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 253,
            "description": "Parent of \"parent\" on \"ContactSocialAccount\".\n\n__Type:__ {{#crossLink \"ContactSocialAccount\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.social",
            "type": "PropertyDocument",
            "class": "Models.Contact",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 268,
            "description": "Parent.\n\n__Type:__ {{#crossLink \"Contact\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.ContactAddress",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 277,
            "description": "Address.\n\n__Type:__ {{#crossLink \"Address\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.address",
            "type": "PropertyObject",
            "class": "Models.ContactAddress",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 286,
            "description": "Primary address flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isPrimary",
            "type": "PropertyObject",
            "class": "Models.ContactAddress",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 301,
            "description": "Parent.\n\n__Type:__ {{#crossLink \"Contact\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.ContactEmail",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 310,
            "description": "Personal, work, other.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.type",
            "type": "PropertyObject",
            "class": "Models.ContactEmail",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 321,
            "description": "Email address.\n\n__Type:__ `String`\n\n__Format:__ email",
            "itemtype": "property",
            "name": "data.email",
            "type": "PropertyObject",
            "class": "Models.ContactEmail",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 332,
            "description": "Primary email flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isPrimary",
            "type": "PropertyObject",
            "class": "Models.ContactEmail",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 347,
            "description": "Parent.\n\n__Type:__ {{#crossLink \"Contact\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.ContactPhone",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 356,
            "description": "Home, work, other.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.type",
            "type": "PropertyObject",
            "class": "Models.ContactPhone",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 367,
            "description": "Phone number.\n\n__Type:__ `String`\n\n__Format:__ tel",
            "itemtype": "property",
            "name": "data.phone",
            "type": "PropertyObject",
            "class": "Models.ContactPhone",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 378,
            "description": "Primary phone flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isPrimary",
            "type": "PropertyObject",
            "class": "Models.ContactPhone",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 393,
            "description": "Parent.\n\n__Type:__ {{#crossLink \"Contact\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.ContactSocialAccount",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 402,
            "description": "Social network.\n\n__Type:__ {{#crossLink \"SocialNetwork\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.network",
            "type": "PropertyObject",
            "class": "Models.ContactSocialAccount",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 411,
            "description": "User name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.userName",
            "type": "PropertyObject",
            "class": "Models.ContactSocialAccount",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 426,
            "description": "Country code.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.code",
            "type": "PropertyDocument",
            "class": "Models.Country",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 435,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.Country",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 450,
            "description": "Symbol.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.symbol",
            "type": "PropertyKind",
            "class": "Models.Currency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 459,
            "description": "Precision.\n\n__Type:__ `Integer`",
            "itemtype": "property",
            "name": "data.minorUnit",
            "type": "PropertyKind",
            "class": "Models.Currency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 468,
            "description": "System base currency flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isBase",
            "type": "PropertyKind",
            "class": "Models.Currency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 477,
            "description": "Use alternate unit of mesaure in display.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.hasDisplayUnit",
            "type": "PropertyKind",
            "class": "Models.Currency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 486,
            "description": "Display unit of mesaure.\n\n__Type:__ {{#crossLink \"CurrencyUnit\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.displayUnit",
            "type": "PropertyKind",
            "class": "Models.Currency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 495,
            "description": "Parent of \"parent\" on \"CurrencyUnitConversion\".\n\n__Type:__ {{#crossLink \"CurrencyUnitConversion\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.conversions",
            "type": "PropertyKind",
            "class": "Models.Currency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 510,
            "description": "Currency converting from.\n\n__Type:__ {{#crossLink \"Currency\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.fromCurrency",
            "type": "PropertyDocument",
            "class": "Models.CurrencyConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 519,
            "description": "Currency converting to.\n\n__Type:__ {{#crossLink \"Currency\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.toCurrency",
            "type": "PropertyDocument",
            "class": "Models.CurrencyConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 528,
            "description": "conversion ratio.\n\n__Type:__ `Number`",
            "itemtype": "property",
            "name": "data.ratio",
            "type": "PropertyDocument",
            "class": "Models.CurrencyConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 537,
            "description": "effective date.\n\n__Type:__ `String`\n\n__Format:__ dateTime",
            "itemtype": "property",
            "name": "data.effective",
            "type": "PropertyDocument",
            "class": "Models.CurrencyConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 554,
            "description": "Currency unit symbol.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.symbol",
            "type": "PropertyUnit",
            "class": "Models.CurrencyUnit",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 563,
            "description": "Precision.\n\n__Type:__ `Integer`",
            "itemtype": "property",
            "name": "data.minorUnit",
            "type": "PropertyUnit",
            "class": "Models.CurrencyUnit",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 578,
            "description": "Parent.\n\n__Type:__ {{#crossLink \"Currency\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.CurrencyUnitConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 587,
            "description": "To unit of measure.\n\n__Type:__ {{#crossLink \"Unit\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.toUnit",
            "type": "PropertyObject",
            "class": "Models.CurrencyUnitConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 596,
            "description": "conversion ratio.\n\n__Type:__ `Number`",
            "itemtype": "property",
            "name": "data.ratio",
            "type": "PropertyObject",
            "class": "Models.CurrencyUnitConversion",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 611,
            "description": "Module script belongs to.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "PropertyScript",
            "class": "Models.DataService",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 626,
            "description": "Owner of the document.\n\n__Type:__ `String`\n\n__Format:__ userAccount",
            "itemtype": "property",
            "name": "data.owner",
            "type": "PropertyObject",
            "class": "Models.Document",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 637,
            "description": "Optimistic locking key.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.etag",
            "type": "PropertyObject",
            "class": "Models.Document",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 652,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 661,
            "description": "Description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 670,
            "description": "Plural.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.plural",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 679,
            "description": "Module.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 688,
            "description": "Inherits.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.inherits",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 697,
            "description": "System flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isSystem",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 706,
            "description": "Child flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isChild",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 715,
            "description": "Load all records of this type into the catalog.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isFetchOnStartup",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 724,
            "description": "Record can not be edited by the client .\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isReadOnly",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 733,
            "description": "Parent of \"parent\" on \"FeatherProperty\".\n\n__Type:__ {{#crossLink \"FeatherProperty\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.properties",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 742,
            "description": "Parent of \"parent\" on \"FeatherOverload\".\n\n__Type:__ {{#crossLink \"FeatherOverload\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.overloads",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 751,
            "description": "Parent of \"parent\" on \"FeatherAuthorization\".\n\n__Type:__ {{#crossLink \"FeatherAuthorization\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.authorizations",
            "type": "PropertyDocument",
            "class": "Models.Feather",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 766,
            "description": "Parent feather.\n\n__Type:__ {{#crossLink \"Feather\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.FeatherAuthorization",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 775,
            "description": "Name.\n\n__Type:__ `String`\n\n__Format:__ role",
            "itemtype": "property",
            "name": "data.role",
            "type": "PropertyObject",
            "class": "Models.FeatherAuthorization",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 786,
            "description": "Role can create new records.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.canCreate",
            "type": "PropertyObject",
            "class": "Models.FeatherAuthorization",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 795,
            "description": "Role can read records.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.canRead",
            "type": "PropertyObject",
            "class": "Models.FeatherAuthorization",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 804,
            "description": "Role can update records.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.canUpdate",
            "type": "PropertyObject",
            "class": "Models.FeatherAuthorization",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 813,
            "description": "Role can delete records.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.canDelete",
            "type": "PropertyObject",
            "class": "Models.FeatherAuthorization",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 828,
            "description": "Parent feather.\n\n__Type:__ {{#crossLink \"Feather\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 837,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 846,
            "description": "Flag whether to overload description.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.overloadDescription",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 855,
            "description": "Specific description of property use for this feather.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 864,
            "description": "Flag whether to overload alias.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.overloadAlias",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 873,
            "description": "Label name to use for this property on the client side.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.alias",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 882,
            "description": "Flag whether to overload type.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.overloadType",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 891,
            "description": "Specify an alternate relation feather to use on the client side for easier searching.\n\n__Type:__ `Object`\n\n__Format:__ overloadType",
            "itemtype": "property",
            "name": "data.type",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 902,
            "description": "Flag whether to overload default.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.overloadDefault",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 911,
            "description": "Overloaded default.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.default",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 920,
            "description": "Flag whether to overload data list.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.overloadDataList",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 929,
            "description": "Over loaded list of available values for this feather.\n\n__Type:__ `Array`",
            "itemtype": "property",
            "name": "data.dataList",
            "type": "PropertyObject",
            "class": "Models.FeatherOverload",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 944,
            "description": "Parent feather.\n\n__Type:__ {{#crossLink \"Feather\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 953,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 962,
            "description": "Description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 971,
            "description": "Alternate name for property.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.alias",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 980,
            "description": "Type.\n\n__Type:__ `Object`\n\n__Format:__ dataType",
            "itemtype": "property",
            "name": "data.type",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 991,
            "description": "Data format.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.format",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1000,
            "description": "Numeric scale.\n\n__Type:__ `Number`",
            "itemtype": "property",
            "name": "data.scale",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1009,
            "description": "Numeric precision.\n\n__Type:__ `Number`",
            "itemtype": "property",
            "name": "data.precision",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1018,
            "description": "Numeric minimum.\n\n__Type:__ `Number`",
            "itemtype": "property",
            "name": "data.min",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1027,
            "description": "Numeric maximum.\n\n__Type:__ `Number`",
            "itemtype": "property",
            "name": "data.max",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1036,
            "description": "Default.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.default",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1045,
            "description": "Type.\n\n__Type:__ `Object`\n\n__Format:__ autonumber",
            "itemtype": "property",
            "name": "data.autonumber",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1056,
            "description": "Ready only flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isReadOnly",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1065,
            "description": "Required flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isRequired",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1074,
            "description": "Flag unique property relations.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isNaturalKey",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1083,
            "description": "Flag default property for relation label.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isLabelKey",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1092,
            "description": "Inherited source feather.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.inheritedFrom",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1103,
            "description": "Array of input values.\n\n__Type:__ `Array`",
            "itemtype": "property",
            "name": "data.dataList",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1112,
            "description": "Flag whether to index property.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isIndexed",
            "type": "PropertyObject",
            "class": "Models.FeatherProperty",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1127,
            "description": "Attribute that receives first focus.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.focus",
            "type": "PropertyLayout",
            "class": "Models.Form",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1136,
            "description": "Parent of \"parent\" on \"FormTab\".\n\n__Type:__ {{#crossLink \"FormTab\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.tabs",
            "type": "PropertyLayout",
            "class": "Models.Form",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1145,
            "description": "Parent of \"parent\" on \"FormAttr\".\n\n__Type:__ {{#crossLink \"FormAttr\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.attrs",
            "type": "PropertyLayout",
            "class": "Models.Form",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1160,
            "description": "Parent form.\n\n__Type:__ {{#crossLink \"Form\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1169,
            "description": "Attribute name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.attr",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1178,
            "description": "Grid (pane) number.\n\n__Type:__ `Integer`",
            "itemtype": "property",
            "name": "data.grid",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1187,
            "description": "Unit (column) number.\n\n__Type:__ `Integer`",
            "itemtype": "property",
            "name": "data.unit",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1196,
            "description": "Flag to show or hide label.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.showLabel",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1205,
            "description": "Alternate attribute label.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.label",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1214,
            "description": "Property that returns an array of options.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.dataList",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1223,
            "description": "Filter definition for relation widget.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.filter",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1232,
            "description": "Flag to disable currency selector on currency widget.\n\n__Type:__ `Boolean`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.disableCurrency",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1243,
            "description": "Specific over-ride definition for relation widget.\n\n__Type:__ {{#crossLink \"Layout\"}}{{/crossLink}}\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.relationWidget",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1254,
            "description": "Parent of \"parent\" on \"FormAttrColumn\".\n\n__Type:__ {{#crossLink \"FormAttrColumn\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.columns",
            "type": "PropertyObject",
            "class": "Models.FormAttr",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1269,
            "description": "Parent form attribute.\n\n__Type:__ {{#crossLink \"FormAttr\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1278,
            "description": "Attribute name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.attr",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1287,
            "description": "Alternate column label.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.label",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1296,
            "description": "Property that returns an array of options.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.dataList",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1305,
            "description": "Filter for relation search criteria.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.filter",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1314,
            "description": "Show currency selector if money.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.showCurrency",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1323,
            "description": "Default column width.\n\n__Type:__ `Integer`",
            "itemtype": "property",
            "name": "data.width",
            "type": "PropertyObject",
            "class": "Models.FormAttrColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1338,
            "description": "Parent form.\n\n__Type:__ {{#crossLink \"Form\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.FormTab",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1347,
            "description": "Tab name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyObject",
            "class": "Models.FormTab",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1362,
            "description": "Title.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.title",
            "type": "PropertyDocument",
            "class": "Models.Honorific",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1377,
            "description": "Natural key.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.code",
            "type": "PropertyDocument",
            "class": "Models.Kind",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1386,
            "description": "Description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyDocument",
            "class": "Models.Kind",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1395,
            "description": "Note.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.note",
            "type": "PropertyDocument",
            "class": "Models.Kind",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1410,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.Layout",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1419,
            "description": "Description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyDocument",
            "class": "Models.Layout",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1428,
            "description": "Module.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "PropertyDocument",
            "class": "Models.Layout",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1437,
            "description": "Feather.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.feather",
            "type": "PropertyDocument",
            "class": "Models.Layout",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1446,
            "description": "Active status.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isActive",
            "type": "PropertyDocument",
            "class": "Models.Layout",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1461,
            "description": "Object change was performed against.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.objectId",
            "type": "PropertyObject",
            "class": "Models.Log",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1470,
            "description": "Action performed.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.action",
            "type": "PropertyObject",
            "class": "Models.Log",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1479,
            "description": "Patch formatted json indicating changes.\n\n__Type:__ `Object`",
            "itemtype": "property",
            "name": "data.change",
            "type": "PropertyObject",
            "class": "Models.Log",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1494,
            "description": "Software version.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.version",
            "type": "PropertyScript",
            "class": "Models.Module",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1503,
            "description": "Parent of \"parent\" on \"ModuleDependency\".\n\n__Type:__ {{#crossLink \"ModuleDependency\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.dependencies",
            "type": "PropertyScript",
            "class": "Models.Module",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1518,
            "description": "Parent object.\n\n__Type:__ {{#crossLink \"Module\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.ModuleDependency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1527,
            "description": "Module parent is dependant on.\n\n__Type:__ {{#crossLink \"Script\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.module",
            "type": "PropertyObject",
            "class": "Models.ModuleDependency",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1542,
            "description": "Surrogate key.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.id",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1553,
            "description": "Create time of the record.\n\n__Type:__ `String`\n\n__Format:__ dateTime\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.created",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1566,
            "description": "User who created the record.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.createdBy",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1577,
            "description": "Last time the record was updated.\n\n__Type:__ `String`\n\n__Format:__ dateTime\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.updated",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1590,
            "description": "User who last updated the record.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.updatedBy",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1601,
            "description": "Indicates the record is no longer active.\n\n__Type:__ `Boolean`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.isDeleted",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1612,
            "description": "Record lock information.\n\n__Type:__ `Object`\n\n__Format:__ lock\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.lock",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1625,
            "description": "Discriminates which inherited object type the object represents.\n\n__Type:__ `String`\n\n__Read Only__",
            "itemtype": "property",
            "name": "data.objectType",
            "type": "PropertyObject",
            "class": "Models.Object",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1642,
            "description": "Parent relation widget.\n\n__Type:__ {{#crossLink \"RelationWidget\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.RelationSearchColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1651,
            "description": "Attribute name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.attr",
            "type": "PropertyObject",
            "class": "Models.RelationSearchColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1660,
            "description": "Alternate column label.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.label",
            "type": "PropertyObject",
            "class": "Models.RelationSearchColumn",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1675,
            "description": "Form relation.\n\n__Type:__ {{#crossLink \"Form\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.form",
            "type": "PropertyLayout",
            "class": "Models.RelationWidget",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1684,
            "description": "User key property.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.valueProperty",
            "type": "PropertyLayout",
            "class": "Models.RelationWidget",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1693,
            "description": "Description property.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.labelProperty",
            "type": "PropertyLayout",
            "class": "Models.RelationWidget",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1702,
            "description": "Parent of \"parent\" on \"RelationSearchColumn\".\n\n__Type:__ {{#crossLink \"RelationSearchColumn\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.searchColumns",
            "type": "PropertyLayout",
            "class": "Models.RelationWidget",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1717,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.Role",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1726,
            "description": "Parent of \"parent\" on \"RoleMembership\".\n\n__Type:__ {{#crossLink \"RoleMembership\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.membership",
            "type": "PropertyDocument",
            "class": "Models.Role",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1741,
            "description": "Parent role.\n\n__Type:__ {{#crossLink \"Role\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.parent",
            "type": "PropertyObject",
            "class": "Models.RoleMembership",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1750,
            "description": "Parent member role name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.role",
            "type": "PropertyObject",
            "class": "Models.RoleMembership",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1765,
            "description": "Module route belongs to.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "PropertyDocument",
            "class": "Models.Route",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1774,
            "description": "Route path.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.path",
            "type": "PropertyDocument",
            "class": "Models.Route",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1783,
            "description": "Registered function on datasource to execute.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.function",
            "type": "PropertyDocument",
            "class": "Models.Route",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1798,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.Script",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1807,
            "description": "Client JavaScript code for models and components.\n\n__Type:__ `String`\n\n__Format:__ script",
            "itemtype": "property",
            "name": "data.script",
            "type": "PropertyDocument",
            "class": "Models.Script",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1824,
            "description": "Network name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.SocialNetwork",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1833,
            "description": "description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyDocument",
            "class": "Models.SocialNetwork",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1842,
            "description": "Url.\n\n__Type:__ `String`\n\n__Format:__ url",
            "itemtype": "property",
            "name": "data.url",
            "type": "PropertyDocument",
            "class": "Models.SocialNetwork",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1859,
            "description": "State code.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.code",
            "type": "PropertyDocument",
            "class": "Models.State",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1868,
            "description": "Name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.State",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1883,
            "description": "Style name.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.name",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1892,
            "description": "Style description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1901,
            "description": "Module style belongs to.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.module",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1910,
            "description": "Turn on font color over-ride.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.hasColor",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1919,
            "description": "Font color.\n\n__Type:__ `String`\n\n__Format:__ color",
            "itemtype": "property",
            "name": "data.color",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1930,
            "description": "Turn on background color over-ride.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.hasBackgroundColor",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1939,
            "description": "Background color.\n\n__Type:__ `String`\n\n__Format:__ color",
            "itemtype": "property",
            "name": "data.backgroundColor",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1950,
            "description": "Font weight.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.fontWeight",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1961,
            "description": "Feather.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.underline",
            "type": "PropertyDocument",
            "class": "Models.Style",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1978,
            "description": "Natural key.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.code",
            "type": "PropertyDocument",
            "class": "Models.Unit",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1987,
            "description": "Description.\n\n__Type:__ `String`",
            "itemtype": "property",
            "name": "data.description",
            "type": "PropertyDocument",
            "class": "Models.Unit",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 1996,
            "description": "Dimension.\n\n__Type:__ `String`\n\n__Format:__ enum",
            "itemtype": "property",
            "name": "data.dimension",
            "type": "PropertyDocument",
            "class": "Models.Unit",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 2013,
            "description": "Password.\n\n__Type:__ `String`\n\n__Format:__ password",
            "itemtype": "property",
            "name": "data.password",
            "type": "PropertyRole",
            "class": "Models.UserAccount",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 2024,
            "description": "System adiminstrator flag.\n\n__Type:__ `Boolean`",
            "itemtype": "property",
            "name": "data.isSuper",
            "type": "PropertyRole",
            "class": "Models.UserAccount",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "api.js",
            "line": 2033,
            "description": "Contact information.\n\n__Type:__ {{#crossLink \"Contact\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "data.contact",
            "type": "PropertyRole",
            "class": "Models.UserAccount",
            "module": "Core",
            "namespace": "Models"
        },
        {
            "file": "core.js",
            "line": 55,
            "description": "Auto-build a form definition based on feather properties.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "buildForm",
            "params": [
                {
                    "name": "Feather",
                    "description": "",
                    "type": "String | Object"
                }
            ],
            "return": {
                "description": "Form definition",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 131,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "column",
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 139,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createRelationWidgetFromFeather",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 198,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "buildSelector",
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 264,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "buildRelationWidgetFromLayout",
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 317,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "resizeEditor",
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 880,
            "description": "Return system catalog.",
            "itemtype": "method",
            "name": "catalog",
            "return": {
                "description": "",
                "type": "Catalog"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 891,
            "description": "Call the constructor for a registered view model.",
            "itemtype": "method",
            "name": "createViewModel",
            "params": [
                {
                    "name": "View",
                    "description": "model class name",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "See class definition for options",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "View model",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 903,
            "description": "Return system datasource.",
            "itemtype": "method",
            "name": "datasource",
            "return": {
                "description": "",
                "type": "Datasource"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 914,
            "description": "Get a registered component.",
            "itemtype": "method",
            "name": "getComponent",
            "params": [
                {
                    "name": "Component",
                    "description": "class name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 925,
            "description": "Return the matching currency object.",
            "itemtype": "method",
            "name": "getCurrency",
            "params": [
                {
                    "name": "Currency",
                    "description": "code",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 944,
            "description": "Return a form based on a form id or a feather. If multiple forms exist,\nthe first one will be used. If none exist one will be built based\non feather definition.\n\nThe form returned is not a form model,  but simply a regular\njavascript object.",
            "itemtype": "method",
            "name": "getForm",
            "params": [
                {
                    "name": "Options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options.form",
                    "description": "Form id",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options.feather",
                    "description": "Feather name",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Form",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 990,
            "description": "Object to define what input type to use for data",
            "itemtype": "property",
            "name": "inputMap",
            "type": "Object",
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1014,
            "description": "Return an array of feathers organized as options.\nUseful for models that need to offer a selection\nof feathers.",
            "itemtype": "method",
            "name": "feathers",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1034,
            "description": "Find the top most parent model in a model heiarchy.\nFor example from an order line find the parent order.",
            "itemtype": "method",
            "name": "findRoot",
            "params": [
                {
                    "name": "Model",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Parent model",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1091,
            "description": "Return an array of models of the feather name passed.",
            "itemtype": "method",
            "name": "createList",
            "params": [
                {
                    "name": "feather",
                    "description": "Feather name",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "fetch",
                            "description": "Automatically fetch on creation",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "subscribe",
                            "description": "Subscribe to events",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "showDeleted",
                            "description": "Show deleted",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "filter",
                            "description": "Filter",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "List"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1105,
            "description": "Create a model instance with a specific feather definition. Use for\nextending the Model class.",
            "example": [
                "\n    let createMyModel = function (data, feather) {\n        // Assume here feather has been created\n        feather = feather || catalog.getFeather(\"MyModel\");\n        let model = f.createModel(data, feather);\n\n        // Do something interesting that a feather can't do alone\n        model.onValidate(function () {\n            if (\n                model.data.foo() === \"\" &&\n                model.data.bar() === \"\"\n            ) {\n                throw new Error(\"Either foo or bar must have a value\");\n            };\n        });\n    });\n\n    catalog.registerModel(\"MyModel\", createMyModel);\n\n    f.createModel(\"MyModel\"); // Returns instance of MyModel"
            ],
            "itemtype": "method",
            "name": "createModel",
            "params": [
                {
                    "name": "data",
                    "description": "Data",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "feather",
                    "description": "Feather definition",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1133,
            "description": "Create a model instance based on the name of a registered feather.",
            "example": [
                "\n    let data = {\n        firstName: \"John\",\n        lastName: \"Doe\"\n    }\n    let model = f.createModel(\"Contact\", data);\n    model.save(); // Persists newly created contact"
            ],
            "itemtype": "method",
            "name": "createModel",
            "params": [
                {
                    "name": "feather",
                    "description": "Feather name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Model"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1161,
            "description": "Formats for property data types used in a\n{{#crossLink \"Model\"}}{{/crossLink}}.\n\nFormats over-ride type handling when a specific format is referenced\non a {{#crossLink \"Model\"}}{{/crossLink}} property, such as an\nalternative default value, or an editor\nin the user interface. Wherever a format property is not explicitly defined\nfeatherbone will fall back to the default handling for the type.\n\nThe following properties are supported on formats:\n* **type**: JSON type format applies to.\n* **default:** Default value or function.\n* **fromType:** Function to convert a JSON type to another format in the\nclient. For example converting a string to a `Date` object.\n* **toType:** Function to convert a value on the client to a JSON type for\nexample converting a `Date` object to a string.\n* **tableData:** Function to convert property's value to Mithril view\ncontent for a {{#crossLinkModule \"TableWidget\"}}{{/crossLinkModule}} cell.\nFor example process as a hyperlink, or present selected object properties on\nan object value as a string.\n* **editor:** Function to return Mithril hyperscript used for editing the\nvalue in in the user interface.",
            "example": [
                "\n    // Format a string type as an array\n    let format = {\n        type: \"string\",\n        default: [],\n        fromType: (value) = value.split(\",\"),\n        toType: (value) => value.toString(),\n        editor: function () {\n            let c = // component code here...\n            let vm = // view model code here...\n            return m(c, {viewModel: vm});\n        }\n    };\n\n    f.formats().myFormat = format;"
            ],
            "itemtype": "method",
            "name": "formats",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1205,
            "description": "Return a money object.",
            "itemtype": "method",
            "name": "money",
            "params": [
                {
                    "name": "Amount.",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "Currency",
                    "description": "code.",
                    "type": "String"
                },
                {
                    "name": "Effective",
                    "description": "date.",
                    "type": "Date"
                },
                {
                    "name": "Base",
                    "description": "amount.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1376,
            "description": "Factory for building input elements",
            "itemtype": "method",
            "name": "createEditor",
            "params": [
                {
                    "name": "options",
                    "description": "Options object",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "model",
                            "description": "Model",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "key",
                            "description": "Property key",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "viewModel",
                            "description": "View Model",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "dataList",
                            "description": "Array for input lists",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1488,
            "description": "Build a relation widget from a feather definition",
            "itemtype": "method",
            "name": "createRelationWidget",
            "params": [
                {
                    "name": "type",
                    "description": "Type from Property",
                    "type": "Object"
                },
                {
                    "name": "feather",
                    "description": "Parent feather name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1498,
            "description": "Returns the exact x, y coordinents of an HTML element.\n\nThanks to:\nhttp://www.kirupa.com/html5/get_element_position_using_javascript.htm",
            "itemtype": "method",
            "name": "getElementPosition",
            "params": [
                {
                    "name": "Element",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1532,
            "description": "Get a style by name. Returns an object with style elements.",
            "itemtype": "method",
            "name": "getStyle",
            "params": [
                {
                    "name": "Name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1566,
            "description": "Creates a property getter setter function with a default value.\nIncludes state.",
            "itemtype": "method",
            "name": "prop",
            "params": [
                {
                    "name": "store",
                    "description": "Initial",
                    "type": "Any"
                },
                {
                    "name": "formatter",
                    "description": "Formatter. Optional",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "default",
                            "description": "Function or value returned\n    by default.",
                            "type": "Any",
                            "optional": true
                        },
                        {
                            "name": "toType",
                            "description": "Converts input to internal type.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "fromType",
                            "description": "Formats internal\n    value for output.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Property"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1582,
            "description": "Helper function to resolve property dot notation.",
            "itemtype": "method",
            "name": "resolveAlias",
            "params": [
                {
                    "name": "Feather",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "Attribute",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1619,
            "description": "Helper function to resolve property dot notation. Traverses\nmodel relations to return child property if dot notation present.\n\n    prop = f.resolveProperty(contact, \"address.city\");\n    console.log(prop()); // \"Philadephia\"",
            "itemtype": "method",
            "name": "resolveProperty",
            "params": [
                {
                    "name": "Model",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "Property",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property function",
                "type": "Function"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1729,
            "description": "Application statechart. States are `SignedIn`, `SignedOut`\nand `Authenticating.`",
            "itemtype": "method",
            "name": "state",
            "return": {
                "description": "statechart",
                "type": "Object"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 1741,
            "description": "State constructor.",
            "itemtype": "method",
            "name": "State",
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "f",
            "module": "Core"
        },
        {
            "file": "datasource.js",
            "line": 28,
            "description": "Returns the base url used to fetch and post data",
            "itemtype": "method",
            "name": "baseUrl",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Datasource",
            "module": "Datasource"
        },
        {
            "file": "datasource.js",
            "line": 39,
            "description": "Ajax request. (Need to explain this)",
            "itemtype": "method",
            "name": "request",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Datasource",
            "module": "Datasource"
        },
        {
            "file": "property.js",
            "line": 24,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isChild",
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 32,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isChild",
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 43,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "isToMany",
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 185,
            "description": "Alternate user friendly name for property.",
            "itemtype": "method",
            "name": "alias",
            "params": [
                {
                    "name": "Alias",
                    "description": "name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 198,
            "itemtype": "method",
            "name": "newValue",
            "return": {
                "description": "",
                "type": "Property.NewValue"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 209,
            "itemtype": "method",
            "name": "newValue.toJSON",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 223,
            "description": "Use when in `changing` state.",
            "itemtype": "method",
            "name": "oldValue",
            "return": {
                "description": "",
                "type": "Property.OldValue"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 233,
            "itemtype": "method",
            "name": "oldValue.toJSON",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 240,
            "itemtype": "method",
            "name": "state",
            "return": {
                "description": "",
                "type": "State"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 249,
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 263,
            "itemtype": "method",
            "name": "isReadOnly",
            "params": [
                {
                    "name": "value",
                    "description": "Is read only",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 274,
            "itemtype": "method",
            "name": "isRequired",
            "params": [
                {
                    "name": "value",
                    "description": "Is required",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 285,
            "itemtype": "method",
            "name": "isToOne",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 292,
            "itemtype": "method",
            "name": "isToMany",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "property.js",
            "line": 299,
            "itemtype": "method",
            "name": "isChild",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Property",
            "module": "Property"
        },
        {
            "file": "state.js",
            "line": 596,
            "description": "Indicates whether the state is the root of the statechart created\nby the `State.define` method.",
            "itemtype": "method",
            "name": "isRoot",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 608,
            "description": "Creates a substate with the given name and adds it as a substate to\nthe receiver state. If a `State` object is given, then it simply adds the\nstate as a substate. This allows you to split up the definition of your\nstates instead of defining everything in one place.",
            "itemtype": "method",
            "name": "state",
            "params": [
                {
                    "name": "name",
                    "description": "A string containing the name of the state or a `State`\nobject.",
                    "type": "String"
                },
                {
                    "name": "opts",
                    "description": "opts An object of options to pass to the `State`\nconstructor\n(default: `null`).",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "f",
                            "description": "A function to invoke in the context of the newly\ncreated state\n(default: `null`).",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n    let s2 = new State(\"s2\");\n    s2.state(\"s21\");\n    s2.state(\"s22\");\n\n    let sc = State.define(function () {\n        this.state(\"s\", function () {\n            this.state(\"s1\", function () {\n                this.state(\"s11\");\n                this.state(\"s12\");\n            });\n\n            this.state(s2);\n        });\n    });"
            ],
            "return": {
                "description": "{State) The newly created state."
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 653,
            "description": "Registers an enter handler to be called with the receiver state\nis entered. The `context` option passed to `goto` will be passed to the\ngiven function when invoked.\n\nMultiple enter handlers may be registered per state. They are invoked in\nthe order in which they are defined.",
            "itemtype": "method",
            "name": "enter",
            "params": [
                {
                    "name": "f",
                    "description": "A function to call when the state is entered.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The receiver",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 670,
            "description": "Registers an exit handler to be called with the receiver state\nis exited. The `context` option passed to `goto` will be passed to the\ngiven function when invoked.\n\nMultiple exit handlers may be registered per state. They are invoked in\nthe order in which they are defined.",
            "itemtype": "method",
            "name": "exit",
            "params": [
                {
                    "name": "f",
                    "description": "A function to call when the state is exited.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The receiver",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 687,
            "description": "A function that can be used to prevent a state from being exited.\n`destStates` and `context` are the destination states and context that\nwill be transitioned to if the states can be exited.",
            "itemtype": "method",
            "name": "canExit",
            "params": [
                {
                    "name": "destStates",
                    "description": "The destination states.",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "The destination context.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The receiver.",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 701,
            "description": "Registers an event handler to be called when an event with a\nmatching name is sent to the state via the `send` method.\n\nOnly one event handler may be registered per event.",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the event.",
                    "type": "String"
                },
                {
                    "name": "f",
                    "description": "A function to call when the event occurs.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The receiver.",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 717,
            "description": "Defines a condition state on the receiver state. Condition states\nare consulted when entering a clustered state without specified destination\nstates. The given function should return a path to some substate of the\nstate that the condition state is defined on.",
            "itemtype": "method",
            "name": "C",
            "params": [
                {
                    "name": "f",
                    "description": "The condition function.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n    let sc = State.define(function () {\n        this.state(\"a\", function () {\n            this.C(function () {\n                if (shouldGoToB) {\n                    return \"./b\";\n                }\n                if (shouldGoToC) {\n                    return \"./c\";\n                }\n                if (shouldGoToD) {\n                    return \"./d\";\n                }\n            });\n            this.state(\"b\");\n            this.state(\"c\");\n            this.state(\"d\");\n        });\n    });"
            ],
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 756,
            "description": "Returns an array of paths to all current leaf states.",
            "itemtype": "method",
            "name": "",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 774,
            "description": "The `State` iterator - invokes the given function once for each\nstate in the statechart. The states are traversed in a preorder depth-first\nmanner.",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "f",
                    "description": "A function object, it will be invoked once for each\nstate.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The receiver.",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 797,
            "description": "Adds the given state as a substate of the receiver state.",
            "itemtype": "method",
            "name": "addSubstate",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "State"
                }
            ],
            "return": {
                "description": "The receiver.",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 831,
            "description": "Indicates whether the receiver state is attached to a root\nstatechart node.",
            "itemtype": "method",
            "name": "isAttached",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 841,
            "itemtype": "method",
            "name": "root",
            "return": {
                "description": "The root state.",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 855,
            "description": "Returns a string containing the full path from the root state to\nthe receiver state. State paths are very similar to unix directory paths.",
            "example": [
                "\n    let r = new State(\"root\");\n    let a = new State(\"a\");\n    let b = new State(\"b\");\n    let c = new State(\"c\");\n\n    r.addSubstate(a);\n    a.addSubstate(b);\n    b.addSubstate(c);\n\n    r.path(); // => \"/\"\n    a.path(); // => \"/a\"\n    b.path(); // => \"/a/b\"\n    c.path(); // => \"/a/b/c\""
            ],
            "itemtype": "method",
            "name": "path",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 889,
            "description": "Sets up a transition from the receiver state to the given\ndestination states. Transitions are usually triggered during event\nhandlers called by the `send` method. This method should be called on the\nroot state to send the statechart into its initial set of current states.",
            "itemtype": "method",
            "name": "goto",
            "params": [
                {
                    "name": "paths",
                    "description": "Zero or more strings representing destination\nstate paths (default: `[]`).",
                    "type": "String | Array"
                },
                {
                    "name": "opts",
                    "description": "An object containing zero or more of the following\nkeys:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "context",
                            "description": "An object to pass along to the `exit` and\n`enter` methods\ninvoked during the actual transistion.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "force",
                            "description": "Forces `enter` methods to be called during\nthe transition\non states that are already current.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n    let sc = State.define(function () {\n        this.state(\"a\", function () {\n            this.state(\"b\", function () {\n                this.foo = function () { this.goto(\"../c\"); };\n            });\n            this.state(\"c\", function () {\n                this.bar = function () { this.goto(\"../b\"); };\n            });\n        });\n    });\n\n    sc.goto();\n    sc.current();   // => [\"/a/b\"]\n    sc.send(\"foo\");\n    sc.current();   // => [\"/a/c\"]\n    sc.send(\"bar\");\n    sc.current();   // => [\"/a/b\"]"
            ],
            "return": {
                "description": "`false` if transition failed.",
                "type": "Boolean"
            },
            "throws": {
                "description": "Throws an `Error` if called on a non-current non-root\nstate or multiple pivot states are found between the receiver\nand destination states or if a destination path is not reachable from\nthe receiver.",
                "type": "Error"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 1008,
            "description": "Sends an event to the statechart. A statechart handles an event\nby giving each current leaf state an opportunity to handle it. Events\nbubble up superstate chains as long as handler methods do not return a\ntruthy value. When a handler does return a truthy value (indicating that\nit has handled the event) the bubbling is canceled. A handler method is\nregistered with the `event` method.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Zero or more arguments that get passed on to the\nhandler methods.",
                    "type": "Any",
                    "optional": true
                }
            ],
            "return": {
                "description": "A boolean indicating whether or not the event was\nhandled.",
                "type": "Boolean"
            },
            "throws": {
                "description": "Throws `Error` if the state is not current.",
                "type": "Error"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 1059,
            "description": "Resets the statechart by exiting all current states.",
            "itemtype": "method",
            "name": "reset",
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 1067,
            "description": "Returns a boolean indicating whether or not the state at the given\npath is current.",
            "itemtype": "method",
            "name": "isCurrent",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "throws": {
                "description": "Throws `Error` if the path cannot be resolved.",
                "type": "Error"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 1080,
            "description": "Resolves a string path into an actual `State` object. Paths not\nstarting with a '/' are resolved relative to the receiver state, paths that\ndo start with a '/' are resolved relative to the root state.",
            "itemtype": "method",
            "name": "resolve",
            "params": [
                {
                    "name": "path",
                    "description": "The path to resolve or an array of path segments.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The `State` object the path represents if it can be\nresolved and `null` otherwise.",
                "type": "State"
            },
            "class": "State",
            "module": "State"
        },
        {
            "file": "state.js",
            "line": 1130,
            "description": "Returns a formatted string with the state's full path.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "State",
            "module": "State"
        }
    ],
    "warnings": []
}